   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8g_font.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8g_font_get_word,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	u8g_font_get_word:
  24              	.LFB1:
  25              		.file 1 "u8g/u8g_font.c"
   1:u8g/u8g_font.c **** /*
   2:u8g/u8g_font.c **** 
   3:u8g/u8g_font.c ****   u8g_font.c
   4:u8g/u8g_font.c ****   
   5:u8g/u8g_font.c ****   U8G Font High Level Interface
   6:u8g/u8g_font.c **** 
   7:u8g/u8g_font.c ****   Universal 8bit Graphics Library
   8:u8g/u8g_font.c ****   
   9:u8g/u8g_font.c ****   Copyright (c) 2011, olikraus@gmail.com
  10:u8g/u8g_font.c ****   All rights reserved.
  11:u8g/u8g_font.c **** 
  12:u8g/u8g_font.c ****   Redistribution and use in source and binary forms, with or without modification, 
  13:u8g/u8g_font.c ****   are permitted provided that the following conditions are met:
  14:u8g/u8g_font.c **** 
  15:u8g/u8g_font.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  16:u8g/u8g_font.c ****     of conditions and the following disclaimer.
  17:u8g/u8g_font.c ****     
  18:u8g/u8g_font.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  19:u8g/u8g_font.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  20:u8g/u8g_font.c ****     materials provided with the distribution.
  21:u8g/u8g_font.c **** 
  22:u8g/u8g_font.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  23:u8g/u8g_font.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  24:u8g/u8g_font.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  25:u8g/u8g_font.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  26:u8g/u8g_font.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  27:u8g/u8g_font.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  28:u8g/u8g_font.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  29:u8g/u8g_font.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  30:u8g/u8g_font.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  31:u8g/u8g_font.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  32:u8g/u8g_font.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  33:u8g/u8g_font.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  34:u8g/u8g_font.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  35:u8g/u8g_font.c ****   
  36:u8g/u8g_font.c **** */
  37:u8g/u8g_font.c **** 
  38:u8g/u8g_font.c **** #include "u8g.h"
  39:u8g/u8g_font.c **** 
  40:u8g/u8g_font.c **** /* font api */
  41:u8g/u8g_font.c **** 
  42:u8g/u8g_font.c **** /* pointer to the start adress of the glyph, points to progmem area */
  43:u8g/u8g_font.c **** typedef void * u8g_glyph_t;
  44:u8g/u8g_font.c **** 
  45:u8g/u8g_font.c **** /* size of the font data structure, there is no struct or class... */
  46:u8g/u8g_font.c **** #define U8G_FONT_DATA_STRUCT_SIZE 17
  47:u8g/u8g_font.c **** 
  48:u8g/u8g_font.c **** /*
  49:u8g/u8g_font.c ****   ... instead the fields of the font data structure are accessed directly by offset 
  50:u8g/u8g_font.c ****   font information 
  51:u8g/u8g_font.c ****   offset
  52:u8g/u8g_font.c ****   0             font format
  53:u8g/u8g_font.c ****   1             FONTBOUNDINGBOX width           unsigned
  54:u8g/u8g_font.c ****   2             FONTBOUNDINGBOX height          unsigned
  55:u8g/u8g_font.c ****   3             FONTBOUNDINGBOX x-offset         signed
  56:u8g/u8g_font.c ****   4             FONTBOUNDINGBOX y-offset        signed
  57:u8g/u8g_font.c ****   5             capital A height                                unsigned
  58:u8g/u8g_font.c ****   6             start 'A'
  59:u8g/u8g_font.c ****   8             start 'a'
  60:u8g/u8g_font.c ****   10            encoding start
  61:u8g/u8g_font.c ****   11            encoding end
  62:u8g/u8g_font.c ****   12            descent 'g'                     negative: below baseline
  63:u8g/u8g_font.c ****   13            font max ascent
  64:u8g/u8g_font.c ****   14            font min decent             negative: below baseline 
  65:u8g/u8g_font.c ****   15            font xascent
  66:u8g/u8g_font.c ****   16            font xdecent             negative: below baseline 
  67:u8g/u8g_font.c ****   
  68:u8g/u8g_font.c **** */
  69:u8g/u8g_font.c **** 
  70:u8g/u8g_font.c **** /* use case: What is the width and the height of the minimal box into which string s fints? */
  71:u8g/u8g_font.c **** void u8g_font_GetStrSize(const void *font, const char *s, u8g_uint_t *width, u8g_uint_t *height);
  72:u8g/u8g_font.c **** void u8g_font_GetStrSizeP(const void *font, const char *s, u8g_uint_t *width, u8g_uint_t *height);
  73:u8g/u8g_font.c **** 
  74:u8g/u8g_font.c **** /* use case: lower left edge of a minimal box is known, what is the correct x, y position for the s
  75:u8g/u8g_font.c **** void u8g_font_AdjustXYToDraw(const void *font, const char *s, u8g_uint_t *x, u8g_uint_t *y);
  76:u8g/u8g_font.c **** void u8g_font_AdjustXYToDrawP(const void *font, const char *s, u8g_uint_t *x, u8g_uint_t *y);
  77:u8g/u8g_font.c **** 
  78:u8g/u8g_font.c **** /* use case: Baseline origin known, return minimal box */
  79:u8g/u8g_font.c **** void u8g_font_GetStrMinBox(u8g_t *u8g, const void *font, const char *s, u8g_uint_t *x, u8g_uint_t *
  80:u8g/u8g_font.c **** 
  81:u8g/u8g_font.c **** /* procedures */
  82:u8g/u8g_font.c **** 
  83:u8g/u8g_font.c **** /*========================================================================*/
  84:u8g/u8g_font.c **** /* low level byte and word access */
  85:u8g/u8g_font.c **** 
  86:u8g/u8g_font.c **** /* removed NOINLINE, because it leads to smaller code, might also be faster */
  87:u8g/u8g_font.c **** //static uint8_t u8g_font_get_byte(const u8g_fntpgm_uint8_t *font, uint8_t offset) U8G_NOINLINE;
  88:u8g/u8g_font.c **** static uint8_t u8g_font_get_byte(const u8g_fntpgm_uint8_t *font, uint8_t offset)
  89:u8g/u8g_font.c **** {
  90:u8g/u8g_font.c ****   font += offset;
  91:u8g/u8g_font.c ****   return u8g_pgm_read( (u8g_pgm_uint8_t *)font );  
  92:u8g/u8g_font.c **** }
  93:u8g/u8g_font.c **** 
  94:u8g/u8g_font.c **** static uint16_t u8g_font_get_word(const u8g_fntpgm_uint8_t *font, uint8_t offset) U8G_NOINLINE; 
  95:u8g/u8g_font.c **** static uint16_t u8g_font_get_word(const u8g_fntpgm_uint8_t *font, uint8_t offset)
  96:u8g/u8g_font.c **** {
  26              		.loc 1 96 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  97:u8g/u8g_font.c ****     uint16_t pos;
  98:u8g/u8g_font.c ****     font += offset;
  32              		.loc 1 98 0
  33 0000 4318     		adds	r3, r0, r1
  34              	.LVL1:
  99:u8g/u8g_font.c ****     pos = u8g_pgm_read( (u8g_pgm_uint8_t *)font );
 100:u8g/u8g_font.c ****     font++;
 101:u8g/u8g_font.c ****     pos <<= 8;
 102:u8g/u8g_font.c ****     pos += u8g_pgm_read( (u8g_pgm_uint8_t *)font);
  35              		.loc 1 102 0
  36 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
  37              	.LVL2:
  99:u8g/u8g_font.c ****     pos = u8g_pgm_read( (u8g_pgm_uint8_t *)font );
  38              		.loc 1 99 0
  39 0004 405C     		ldrb	r0, [r0, r1]	@ zero_extendqisi2
  40              	.LVL3:
  41              		.loc 1 102 0
  42 0006 03EB0020 		add	r0, r3, r0, lsl #8
  43              	.LVL4:
 103:u8g/u8g_font.c ****     return pos;
 104:u8g/u8g_font.c **** }
  44              		.loc 1 104 0
  45 000a 80B2     		uxth	r0, r0
  46 000c 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE1:
  50 000e 00BF     		.section	.text.u8g_font_calc_vref_font,"ax",%progbits
  51              		.align	1
  52              		.p2align 2,,3
  53              		.global	u8g_font_calc_vref_font
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu softvfp
  59              	u8g_font_calc_vref_font:
  60              	.LFB54:
 105:u8g/u8g_font.c **** 
 106:u8g/u8g_font.c **** /*========================================================================*/
 107:u8g/u8g_font.c **** /* direct access on the font */
 108:u8g/u8g_font.c **** 
 109:u8g/u8g_font.c **** static uint8_t u8g_font_GetFormat(const u8g_fntpgm_uint8_t *font) U8G_NOINLINE;
 110:u8g/u8g_font.c **** static uint8_t u8g_font_GetFormat(const u8g_fntpgm_uint8_t *font)
 111:u8g/u8g_font.c **** {
 112:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 0);
 113:u8g/u8g_font.c **** }
 114:u8g/u8g_font.c **** 
 115:u8g/u8g_font.c **** static uint8_t u8g_font_GetFontGlyphStructureSize(const u8g_fntpgm_uint8_t *font) U8G_NOINLINE;
 116:u8g/u8g_font.c **** static uint8_t u8g_font_GetFontGlyphStructureSize(const u8g_fntpgm_uint8_t *font)
 117:u8g/u8g_font.c **** {
 118:u8g/u8g_font.c ****   switch(u8g_font_GetFormat(font))
 119:u8g/u8g_font.c ****   {
 120:u8g/u8g_font.c ****     case 0: return 6;
 121:u8g/u8g_font.c ****     case 1: return 3;
 122:u8g/u8g_font.c ****     case 2: return 6;
 123:u8g/u8g_font.c ****   }
 124:u8g/u8g_font.c ****   return 3;
 125:u8g/u8g_font.c **** }
 126:u8g/u8g_font.c **** 
 127:u8g/u8g_font.c **** static uint8_t u8g_font_GetBBXWidth(const void *font)
 128:u8g/u8g_font.c **** {
 129:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 1);
 130:u8g/u8g_font.c **** }
 131:u8g/u8g_font.c **** 
 132:u8g/u8g_font.c **** static uint8_t u8g_font_GetBBXHeight(const void *font)
 133:u8g/u8g_font.c **** {
 134:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 2);
 135:u8g/u8g_font.c **** }
 136:u8g/u8g_font.c **** 
 137:u8g/u8g_font.c **** static int8_t u8g_font_GetBBXOffX(const void *font)
 138:u8g/u8g_font.c **** {
 139:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 3);
 140:u8g/u8g_font.c **** }
 141:u8g/u8g_font.c **** 
 142:u8g/u8g_font.c **** static int8_t u8g_font_GetBBXOffY(const void *font)
 143:u8g/u8g_font.c **** {
 144:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 4);
 145:u8g/u8g_font.c **** }
 146:u8g/u8g_font.c **** 
 147:u8g/u8g_font.c **** uint8_t u8g_font_GetCapitalAHeight(const void *font)
 148:u8g/u8g_font.c **** {
 149:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 5);
 150:u8g/u8g_font.c **** }
 151:u8g/u8g_font.c **** 
 152:u8g/u8g_font.c **** uint16_t u8g_font_GetEncoding65Pos(const void *font) U8G_NOINLINE;
 153:u8g/u8g_font.c **** uint16_t u8g_font_GetEncoding65Pos(const void *font)
 154:u8g/u8g_font.c **** {
 155:u8g/u8g_font.c ****     return u8g_font_get_word(font, 6);
 156:u8g/u8g_font.c **** }
 157:u8g/u8g_font.c **** 
 158:u8g/u8g_font.c **** uint16_t u8g_font_GetEncoding97Pos(const void *font) U8G_NOINLINE;
 159:u8g/u8g_font.c **** uint16_t u8g_font_GetEncoding97Pos(const void *font)
 160:u8g/u8g_font.c **** {
 161:u8g/u8g_font.c ****     return u8g_font_get_word(font, 8);
 162:u8g/u8g_font.c **** }
 163:u8g/u8g_font.c **** 
 164:u8g/u8g_font.c **** uint8_t u8g_font_GetFontStartEncoding(const void *font)
 165:u8g/u8g_font.c **** {
 166:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 10);
 167:u8g/u8g_font.c **** }
 168:u8g/u8g_font.c **** 
 169:u8g/u8g_font.c **** uint8_t u8g_font_GetFontEndEncoding(const void *font)
 170:u8g/u8g_font.c **** {
 171:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 11);
 172:u8g/u8g_font.c **** }
 173:u8g/u8g_font.c **** 
 174:u8g/u8g_font.c **** int8_t u8g_font_GetLowerGDescent(const void *font)
 175:u8g/u8g_font.c **** {
 176:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 12);
 177:u8g/u8g_font.c **** }
 178:u8g/u8g_font.c **** 
 179:u8g/u8g_font.c **** int8_t u8g_font_GetFontAscent(const void *font)
 180:u8g/u8g_font.c **** {
 181:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 13);
 182:u8g/u8g_font.c **** }
 183:u8g/u8g_font.c **** 
 184:u8g/u8g_font.c **** int8_t u8g_font_GetFontDescent(const void *font)
 185:u8g/u8g_font.c **** {
 186:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 14);
 187:u8g/u8g_font.c **** }
 188:u8g/u8g_font.c **** 
 189:u8g/u8g_font.c **** int8_t u8g_font_GetFontXAscent(const void *font)
 190:u8g/u8g_font.c **** {
 191:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 15);
 192:u8g/u8g_font.c **** }
 193:u8g/u8g_font.c **** 
 194:u8g/u8g_font.c **** int8_t u8g_font_GetFontXDescent(const void *font)
 195:u8g/u8g_font.c **** {
 196:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 16);
 197:u8g/u8g_font.c **** }
 198:u8g/u8g_font.c **** 
 199:u8g/u8g_font.c **** 
 200:u8g/u8g_font.c **** /* return the data start for a font and the glyph pointer */
 201:u8g/u8g_font.c **** static uint8_t *u8g_font_GetGlyphDataStart(const void *font, u8g_glyph_t g)
 202:u8g/u8g_font.c **** {
 203:u8g/u8g_font.c ****   return ((u8g_fntpgm_uint8_t *)g) + u8g_font_GetFontGlyphStructureSize(font);
 204:u8g/u8g_font.c **** }
 205:u8g/u8g_font.c **** 
 206:u8g/u8g_font.c **** /* calculate the overall length of the font, only used to create the picture for the google wiki */
 207:u8g/u8g_font.c **** size_t u8g_font_GetSize(const void *font)
 208:u8g/u8g_font.c **** {
 209:u8g/u8g_font.c ****   uint8_t *p = (uint8_t *)(font);
 210:u8g/u8g_font.c ****   uint8_t font_format = u8g_font_GetFormat(font);
 211:u8g/u8g_font.c ****   uint8_t data_structure_size = u8g_font_GetFontGlyphStructureSize(font);
 212:u8g/u8g_font.c ****   uint8_t start, end;
 213:u8g/u8g_font.c ****   uint8_t i;
 214:u8g/u8g_font.c ****   uint8_t mask = 255;
 215:u8g/u8g_font.c ****   
 216:u8g/u8g_font.c ****   start = u8g_font_GetFontStartEncoding(font);
 217:u8g/u8g_font.c ****   end = u8g_font_GetFontEndEncoding(font);
 218:u8g/u8g_font.c **** 
 219:u8g/u8g_font.c ****   if ( font_format == 1 )
 220:u8g/u8g_font.c ****     mask = 15;
 221:u8g/u8g_font.c **** 
 222:u8g/u8g_font.c ****   p += U8G_FONT_DATA_STRUCT_SIZE;       /* skip font general information */  
 223:u8g/u8g_font.c **** 
 224:u8g/u8g_font.c ****   i = start;  
 225:u8g/u8g_font.c ****   for(;;)
 226:u8g/u8g_font.c ****   {
 227:u8g/u8g_font.c ****     if ( u8g_pgm_read((u8g_pgm_uint8_t *)(p)) == 255 )
 228:u8g/u8g_font.c ****     {
 229:u8g/u8g_font.c ****       p += 1;
 230:u8g/u8g_font.c ****     }
 231:u8g/u8g_font.c ****     else
 232:u8g/u8g_font.c ****     {
 233:u8g/u8g_font.c ****       p += u8g_pgm_read( ((u8g_pgm_uint8_t *)(p)) + 2 ) & mask;
 234:u8g/u8g_font.c ****       p += data_structure_size;
 235:u8g/u8g_font.c ****     }
 236:u8g/u8g_font.c ****     if ( i == end )
 237:u8g/u8g_font.c ****       break;
 238:u8g/u8g_font.c ****     i++;
 239:u8g/u8g_font.c ****   }
 240:u8g/u8g_font.c ****     
 241:u8g/u8g_font.c ****   return p - (uint8_t *)font;
 242:u8g/u8g_font.c **** }
 243:u8g/u8g_font.c **** 
 244:u8g/u8g_font.c **** /*========================================================================*/
 245:u8g/u8g_font.c **** /* u8g interface, font access */
 246:u8g/u8g_font.c **** 
 247:u8g/u8g_font.c **** uint8_t u8g_GetFontBBXWidth(u8g_t *u8g)
 248:u8g/u8g_font.c **** {
 249:u8g/u8g_font.c ****   return u8g_font_GetBBXWidth(u8g->font);
 250:u8g/u8g_font.c **** }
 251:u8g/u8g_font.c **** 
 252:u8g/u8g_font.c **** uint8_t u8g_GetFontBBXHeight(u8g_t *u8g)
 253:u8g/u8g_font.c **** {
 254:u8g/u8g_font.c ****   return u8g_font_GetBBXHeight(u8g->font);
 255:u8g/u8g_font.c **** }
 256:u8g/u8g_font.c **** 
 257:u8g/u8g_font.c **** int8_t u8g_GetFontBBXOffX(u8g_t *u8g) U8G_NOINLINE;
 258:u8g/u8g_font.c **** int8_t u8g_GetFontBBXOffX(u8g_t *u8g)
 259:u8g/u8g_font.c **** {
 260:u8g/u8g_font.c ****   return u8g_font_GetBBXOffX(u8g->font);
 261:u8g/u8g_font.c **** }
 262:u8g/u8g_font.c **** 
 263:u8g/u8g_font.c **** int8_t u8g_GetFontBBXOffY(u8g_t *u8g) U8G_NOINLINE;
 264:u8g/u8g_font.c **** int8_t u8g_GetFontBBXOffY(u8g_t *u8g)
 265:u8g/u8g_font.c **** {
 266:u8g/u8g_font.c ****   return u8g_font_GetBBXOffY(u8g->font);
 267:u8g/u8g_font.c **** }
 268:u8g/u8g_font.c **** 
 269:u8g/u8g_font.c **** uint8_t u8g_GetFontCapitalAHeight(u8g_t *u8g) U8G_NOINLINE; 
 270:u8g/u8g_font.c **** uint8_t u8g_GetFontCapitalAHeight(u8g_t *u8g)
 271:u8g/u8g_font.c **** {
 272:u8g/u8g_font.c ****   return u8g_font_GetCapitalAHeight(u8g->font);
 273:u8g/u8g_font.c **** }
 274:u8g/u8g_font.c **** 
 275:u8g/u8g_font.c **** /*========================================================================*/
 276:u8g/u8g_font.c **** /* glyph handling */
 277:u8g/u8g_font.c **** 
 278:u8g/u8g_font.c **** static void u8g_CopyGlyphDataToCache(u8g_t *u8g, u8g_glyph_t g)
 279:u8g/u8g_font.c **** {
 280:u8g/u8g_font.c ****   uint8_t tmp;
 281:u8g/u8g_font.c ****   switch( u8g_font_GetFormat(u8g->font) )
 282:u8g/u8g_font.c ****   {
 283:u8g/u8g_font.c ****     case 0:
 284:u8g/u8g_font.c ****     case 2:
 285:u8g/u8g_font.c ****   /*
 286:u8g/u8g_font.c ****     format 0
 287:u8g/u8g_font.c ****     glyph information 
 288:u8g/u8g_font.c ****     offset
 289:u8g/u8g_font.c ****     0             BBX width                                       unsigned
 290:u8g/u8g_font.c ****     1             BBX height                                      unsigned
 291:u8g/u8g_font.c ****     2             data size                                          unsigned    (BBX width + 7)/8 
 292:u8g/u8g_font.c ****     3             DWIDTH                                          signed
 293:u8g/u8g_font.c ****     4             BBX xoffset                                    signed
 294:u8g/u8g_font.c ****     5             BBX yoffset                                    signed
 295:u8g/u8g_font.c ****   byte 0 == 255 indicates empty glyph
 296:u8g/u8g_font.c ****   */
 297:u8g/u8g_font.c ****       u8g->glyph_width =  u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 0 );
 298:u8g/u8g_font.c ****       u8g->glyph_height =  u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 1 );
 299:u8g/u8g_font.c ****       u8g->glyph_dx =  u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 3 );
 300:u8g/u8g_font.c ****       u8g->glyph_x =  u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 4 );
 301:u8g/u8g_font.c ****       u8g->glyph_y =  u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 5 );
 302:u8g/u8g_font.c ****       break;
 303:u8g/u8g_font.c ****     case 1:
 304:u8g/u8g_font.c ****     default:
 305:u8g/u8g_font.c ****       /*
 306:u8g/u8g_font.c **** format 1
 307:u8g/u8g_font.c ****   0             BBX xoffset                                    signed   --> upper 4 Bit
 308:u8g/u8g_font.c ****   0             BBX yoffset                                    signed --> lower 4 Bit
 309:u8g/u8g_font.c ****   1             BBX width                                       unsigned --> upper 4 Bit
 310:u8g/u8g_font.c ****   1             BBX height                                      unsigned --> lower 4 Bit
 311:u8g/u8g_font.c ****   2             data size                                           unsigned -(BBX width + 7)/8 * B
 312:u8g/u8g_font.c ****   2             DWIDTH                                          signed --> upper  4 Bit
 313:u8g/u8g_font.c ****   byte 0 == 255 indicates empty glyph
 314:u8g/u8g_font.c ****       */
 315:u8g/u8g_font.c ****     
 316:u8g/u8g_font.c ****       tmp = u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 0 );
 317:u8g/u8g_font.c ****       u8g->glyph_y =  tmp & 15;
 318:u8g/u8g_font.c ****       u8g->glyph_y-=2;
 319:u8g/u8g_font.c ****       tmp >>= 4;
 320:u8g/u8g_font.c ****       u8g->glyph_x =  tmp;
 321:u8g/u8g_font.c ****     
 322:u8g/u8g_font.c ****       tmp = u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 1 );
 323:u8g/u8g_font.c ****       u8g->glyph_height =  tmp & 15;
 324:u8g/u8g_font.c ****       tmp >>= 4;
 325:u8g/u8g_font.c ****       u8g->glyph_width =  tmp;
 326:u8g/u8g_font.c ****       
 327:u8g/u8g_font.c ****       tmp = u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 2 );
 328:u8g/u8g_font.c ****       tmp >>= 4;
 329:u8g/u8g_font.c ****       u8g->glyph_dx = tmp;
 330:u8g/u8g_font.c ****     
 331:u8g/u8g_font.c ****       
 332:u8g/u8g_font.c ****       break;
 333:u8g/u8g_font.c ****   }
 334:u8g/u8g_font.c **** }
 335:u8g/u8g_font.c **** 
 336:u8g/u8g_font.c **** //void u8g_FillEmptyGlyphCache(u8g_t *u8g) U8G_NOINLINE;
 337:u8g/u8g_font.c **** static void u8g_FillEmptyGlyphCache(u8g_t *u8g)
 338:u8g/u8g_font.c **** {
 339:u8g/u8g_font.c ****   u8g->glyph_dx = 0;
 340:u8g/u8g_font.c ****   u8g->glyph_width = 0;
 341:u8g/u8g_font.c ****   u8g->glyph_height = 0;
 342:u8g/u8g_font.c ****   u8g->glyph_x = 0;
 343:u8g/u8g_font.c ****   u8g->glyph_y = 0;
 344:u8g/u8g_font.c **** }
 345:u8g/u8g_font.c **** 
 346:u8g/u8g_font.c **** /*
 347:u8g/u8g_font.c ****   Find (with some speed optimization) and return a pointer to the glyph data structure
 348:u8g/u8g_font.c ****   Also uncompress (format 1) and copy the content of the data structure to the u8g structure
 349:u8g/u8g_font.c **** */
 350:u8g/u8g_font.c **** u8g_glyph_t u8g_GetGlyph(u8g_t *u8g, uint8_t requested_encoding)
 351:u8g/u8g_font.c **** {
 352:u8g/u8g_font.c ****   uint8_t *p = (uint8_t *)(u8g->font);
 353:u8g/u8g_font.c ****   uint8_t font_format = u8g_font_GetFormat(u8g->font);
 354:u8g/u8g_font.c ****   uint8_t data_structure_size = u8g_font_GetFontGlyphStructureSize(u8g->font);
 355:u8g/u8g_font.c ****   uint8_t start, end;
 356:u8g/u8g_font.c ****   uint16_t pos;
 357:u8g/u8g_font.c ****   uint8_t i;
 358:u8g/u8g_font.c ****   uint8_t mask = 255;
 359:u8g/u8g_font.c **** 
 360:u8g/u8g_font.c ****   if ( font_format == 1 )
 361:u8g/u8g_font.c ****     mask = 15;
 362:u8g/u8g_font.c ****   
 363:u8g/u8g_font.c ****   start = u8g_font_GetFontStartEncoding(u8g->font);
 364:u8g/u8g_font.c ****   end = u8g_font_GetFontEndEncoding(u8g->font);
 365:u8g/u8g_font.c **** 
 366:u8g/u8g_font.c ****   pos = u8g_font_GetEncoding97Pos(u8g->font);
 367:u8g/u8g_font.c ****   if ( requested_encoding >= 97 && pos > 0 )
 368:u8g/u8g_font.c ****   {
 369:u8g/u8g_font.c ****     p+= pos;
 370:u8g/u8g_font.c ****     start = 97;
 371:u8g/u8g_font.c ****   }
 372:u8g/u8g_font.c ****   else 
 373:u8g/u8g_font.c ****   {
 374:u8g/u8g_font.c ****     pos = u8g_font_GetEncoding65Pos(u8g->font);
 375:u8g/u8g_font.c ****     if ( requested_encoding >= 65 && pos > 0 )
 376:u8g/u8g_font.c ****     {
 377:u8g/u8g_font.c ****       p+= pos;
 378:u8g/u8g_font.c ****       start = 65;
 379:u8g/u8g_font.c ****     }
 380:u8g/u8g_font.c ****     else
 381:u8g/u8g_font.c ****       p += U8G_FONT_DATA_STRUCT_SIZE;       /* skip font general information */  
 382:u8g/u8g_font.c ****   }
 383:u8g/u8g_font.c ****   
 384:u8g/u8g_font.c ****   if ( requested_encoding > end )
 385:u8g/u8g_font.c ****   {
 386:u8g/u8g_font.c ****     u8g_FillEmptyGlyphCache(u8g);
 387:u8g/u8g_font.c ****     return NULL;                      /* not found */
 388:u8g/u8g_font.c ****   }
 389:u8g/u8g_font.c ****   
 390:u8g/u8g_font.c ****   i = start;
 391:u8g/u8g_font.c ****   if ( i <= end )
 392:u8g/u8g_font.c ****   {
 393:u8g/u8g_font.c ****     for(;;)
 394:u8g/u8g_font.c ****     {
 395:u8g/u8g_font.c ****       if ( u8g_pgm_read((u8g_pgm_uint8_t *)(p)) == 255 )
 396:u8g/u8g_font.c ****       {
 397:u8g/u8g_font.c ****         p += 1;
 398:u8g/u8g_font.c ****       }
 399:u8g/u8g_font.c ****       else
 400:u8g/u8g_font.c ****       {
 401:u8g/u8g_font.c ****         if ( i == requested_encoding )
 402:u8g/u8g_font.c ****         {
 403:u8g/u8g_font.c ****           u8g_CopyGlyphDataToCache(u8g, p);
 404:u8g/u8g_font.c ****           return p;
 405:u8g/u8g_font.c ****         }
 406:u8g/u8g_font.c ****         p += u8g_pgm_read( ((u8g_pgm_uint8_t *)(p)) + 2 ) & mask;
 407:u8g/u8g_font.c ****         p += data_structure_size;
 408:u8g/u8g_font.c ****       }
 409:u8g/u8g_font.c ****       if ( i == end )
 410:u8g/u8g_font.c ****         break;
 411:u8g/u8g_font.c ****       i++;
 412:u8g/u8g_font.c ****     }
 413:u8g/u8g_font.c ****   }
 414:u8g/u8g_font.c ****   
 415:u8g/u8g_font.c ****   u8g_FillEmptyGlyphCache(u8g);
 416:u8g/u8g_font.c ****     
 417:u8g/u8g_font.c ****   return NULL;
 418:u8g/u8g_font.c **** }
 419:u8g/u8g_font.c **** 
 420:u8g/u8g_font.c **** uint8_t u8g_IsGlyph(u8g_t *u8g, uint8_t requested_encoding)
 421:u8g/u8g_font.c **** {
 422:u8g/u8g_font.c ****   if ( u8g_GetGlyph(u8g, requested_encoding) != NULL )
 423:u8g/u8g_font.c ****     return 1;
 424:u8g/u8g_font.c ****   return 0;
 425:u8g/u8g_font.c **** }
 426:u8g/u8g_font.c **** 
 427:u8g/u8g_font.c **** int8_t u8g_GetGlyphDeltaX(u8g_t *u8g, uint8_t requested_encoding)
 428:u8g/u8g_font.c **** {
 429:u8g/u8g_font.c ****   if ( u8g_GetGlyph(u8g, requested_encoding) == NULL )
 430:u8g/u8g_font.c ****     return 0;  /* should never happen, so return something */
 431:u8g/u8g_font.c ****   return u8g->glyph_dx;
 432:u8g/u8g_font.c **** }
 433:u8g/u8g_font.c **** 
 434:u8g/u8g_font.c **** 
 435:u8g/u8g_font.c **** /*========================================================================*/
 436:u8g/u8g_font.c **** /* glyph drawing procedures */
 437:u8g/u8g_font.c **** 
 438:u8g/u8g_font.c **** #ifdef OBSOLETE
 439:u8g/u8g_font.c **** /*
 440:u8g/u8g_font.c ****   Draw a glyph
 441:u8g/u8g_font.c ****   x,y: left baseline position of the glyph
 442:u8g/u8g_font.c **** */
 443:u8g/u8g_font.c **** int8_t u8g_DrawGlyphDir(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t dir, uint8_t encoding)
 444:u8g/u8g_font.c **** {
 445:u8g/u8g_font.c ****   u8g_glyph_t g;
 446:u8g/u8g_font.c ****   uint8_t w, h, i, j;
 447:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 448:u8g/u8g_font.c ****   uint8_t bytes_per_line;
 449:u8g/u8g_font.c ****   u8g_uint_t ix, iy;
 450:u8g/u8g_font.c **** 
 451:u8g/u8g_font.c ****   g = u8g_GetGlyph(u8g, encoding);
 452:u8g/u8g_font.c ****   if ( g == NULL  )
 453:u8g/u8g_font.c ****     return 0;
 454:u8g/u8g_font.c ****   w = u8g->glyph_width;
 455:u8g/u8g_font.c ****   h = u8g->glyph_height;
 456:u8g/u8g_font.c **** 
 457:u8g/u8g_font.c ****   bytes_per_line = w;
 458:u8g/u8g_font.c ****   bytes_per_line += 7;
 459:u8g/u8g_font.c ****   bytes_per_line /= 8;
 460:u8g/u8g_font.c ****   
 461:u8g/u8g_font.c ****   data = u8g_font_GetGlyphDataStart(u8g->font, g);
 462:u8g/u8g_font.c **** 
 463:u8g/u8g_font.c ****   switch(dir)
 464:u8g/u8g_font.c ****   {
 465:u8g/u8g_font.c ****     case 0:
 466:u8g/u8g_font.c ****       x += u8g->glyph_x;
 467:u8g/u8g_font.c ****       y -= u8g->glyph_y;
 468:u8g/u8g_font.c ****       y--;
 469:u8g/u8g_font.c ****       //u8g_DrawFrame(u8g, x, y-h+1, w, h);
 470:u8g/u8g_font.c ****       if ( u8g_IsBBXIntersection(u8g, x, y-h+1, w, h) == 0 )
 471:u8g/u8g_font.c ****         return u8g->glyph_dx;
 472:u8g/u8g_font.c ****       
 473:u8g/u8g_font.c ****       iy = y;
 474:u8g/u8g_font.c ****       iy -= h;
 475:u8g/u8g_font.c ****       iy++;
 476:u8g/u8g_font.c ****       
 477:u8g/u8g_font.c ****       for( j = 0; j < h; j++ )
 478:u8g/u8g_font.c ****       {
 479:u8g/u8g_font.c ****         ix = x;
 480:u8g/u8g_font.c ****         for( i = 0; i < bytes_per_line; i++ )
 481:u8g/u8g_font.c ****         {
 482:u8g/u8g_font.c ****           u8g_Draw8Pixel(u8g, ix, iy, dir, u8g_pgm_read(data));
 483:u8g/u8g_font.c ****           data++;
 484:u8g/u8g_font.c ****           ix+=8;
 485:u8g/u8g_font.c ****         }
 486:u8g/u8g_font.c ****         iy++;
 487:u8g/u8g_font.c ****       }
 488:u8g/u8g_font.c ****       break;
 489:u8g/u8g_font.c ****     case 1:
 490:u8g/u8g_font.c ****       x += u8g->glyph_y;
 491:u8g/u8g_font.c ****       x++;
 492:u8g/u8g_font.c ****       y += u8g->glyph_x;
 493:u8g/u8g_font.c ****       //printf("enc %d, dir %d, x %d, y %d, w %d, h %d\n", encoding, dir, x, y, w, h);
 494:u8g/u8g_font.c ****       //u8g_DrawFrame(u8g, x, y, h, w);
 495:u8g/u8g_font.c ****       if ( u8g_IsBBXIntersection(u8g, x, y, h, w) == 0 )
 496:u8g/u8g_font.c ****         return u8g->glyph_dx;
 497:u8g/u8g_font.c ****       
 498:u8g/u8g_font.c ****       ix = x;
 499:u8g/u8g_font.c ****       ix += h;
 500:u8g/u8g_font.c ****       ix--;
 501:u8g/u8g_font.c ****       for( j = 0; j < h; j++ )
 502:u8g/u8g_font.c ****       {
 503:u8g/u8g_font.c ****         iy = y;
 504:u8g/u8g_font.c ****         for( i = 0; i < bytes_per_line; i++ )
 505:u8g/u8g_font.c ****         {
 506:u8g/u8g_font.c ****           u8g_Draw8Pixel(u8g, ix, iy, dir, u8g_pgm_read(data));
 507:u8g/u8g_font.c ****           data++;
 508:u8g/u8g_font.c ****           iy+=8;
 509:u8g/u8g_font.c ****         }
 510:u8g/u8g_font.c ****         ix--;
 511:u8g/u8g_font.c ****       }
 512:u8g/u8g_font.c ****       break;
 513:u8g/u8g_font.c ****     case 2:
 514:u8g/u8g_font.c ****       x -= u8g->glyph_x;
 515:u8g/u8g_font.c ****       y += u8g->glyph_y;
 516:u8g/u8g_font.c ****       y++;
 517:u8g/u8g_font.c ****       if ( u8g_IsBBXIntersection(u8g, x-w-1, y, w, h) == 0 )
 518:u8g/u8g_font.c ****         return u8g->glyph_dx;
 519:u8g/u8g_font.c ****       
 520:u8g/u8g_font.c ****       iy = y;
 521:u8g/u8g_font.c ****       iy += h;
 522:u8g/u8g_font.c ****       iy--;
 523:u8g/u8g_font.c ****       for( j = 0; j < h; j++ )
 524:u8g/u8g_font.c ****       {
 525:u8g/u8g_font.c ****         ix = x;
 526:u8g/u8g_font.c ****         for( i = 0; i < bytes_per_line; i++ )
 527:u8g/u8g_font.c ****         {
 528:u8g/u8g_font.c ****           u8g_Draw8Pixel(u8g, ix, iy, dir, u8g_pgm_read(data));
 529:u8g/u8g_font.c ****           data++;
 530:u8g/u8g_font.c ****           ix-=8;
 531:u8g/u8g_font.c ****         }
 532:u8g/u8g_font.c ****         iy--;
 533:u8g/u8g_font.c ****       }
 534:u8g/u8g_font.c ****       break;
 535:u8g/u8g_font.c ****     case 3:
 536:u8g/u8g_font.c ****       x -= u8g->glyph_y;
 537:u8g/u8g_font.c ****       x--;
 538:u8g/u8g_font.c ****       y -= u8g->glyph_x;
 539:u8g/u8g_font.c ****       
 540:u8g/u8g_font.c ****       if ( u8g_IsBBXIntersection(u8g, x-h-1, y-w-1, h, w) == 0 )
 541:u8g/u8g_font.c ****         return u8g->glyph_dx;
 542:u8g/u8g_font.c ****       
 543:u8g/u8g_font.c ****       ix = x;
 544:u8g/u8g_font.c ****       ix -= h;
 545:u8g/u8g_font.c ****       ix++;
 546:u8g/u8g_font.c ****       
 547:u8g/u8g_font.c ****       for( j = 0; j < h; j++ )
 548:u8g/u8g_font.c ****       {
 549:u8g/u8g_font.c ****         iy = y;
 550:u8g/u8g_font.c ****         for( i = 0; i < bytes_per_line; i++ )
 551:u8g/u8g_font.c ****         {
 552:u8g/u8g_font.c ****           u8g_Draw8Pixel(u8g, ix, iy, dir, u8g_pgm_read(data));
 553:u8g/u8g_font.c ****           data++;
 554:u8g/u8g_font.c ****           iy-=8;
 555:u8g/u8g_font.c ****         }
 556:u8g/u8g_font.c ****         ix++;
 557:u8g/u8g_font.c ****       }
 558:u8g/u8g_font.c ****       break;    
 559:u8g/u8g_font.c ****   }
 560:u8g/u8g_font.c ****   return u8g->glyph_dx;
 561:u8g/u8g_font.c **** }
 562:u8g/u8g_font.c **** #endif
 563:u8g/u8g_font.c **** 
 564:u8g/u8g_font.c **** int8_t u8g_draw_glyph(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t encoding)
 565:u8g/u8g_font.c **** {
 566:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 567:u8g/u8g_font.c ****   uint8_t w, h;
 568:u8g/u8g_font.c ****   uint8_t i, j;
 569:u8g/u8g_font.c ****   u8g_uint_t ix, iy;
 570:u8g/u8g_font.c **** 
 571:u8g/u8g_font.c ****   {
 572:u8g/u8g_font.c ****     u8g_glyph_t g = u8g_GetGlyph(u8g, encoding);
 573:u8g/u8g_font.c ****     if ( g == NULL  )
 574:u8g/u8g_font.c ****       return 0;
 575:u8g/u8g_font.c ****     data = u8g_font_GetGlyphDataStart(u8g->font, g);
 576:u8g/u8g_font.c ****   }
 577:u8g/u8g_font.c ****   
 578:u8g/u8g_font.c ****   w = u8g->glyph_width;
 579:u8g/u8g_font.c ****   h = u8g->glyph_height;
 580:u8g/u8g_font.c ****   
 581:u8g/u8g_font.c ****   x += u8g->glyph_x;
 582:u8g/u8g_font.c ****   y -= u8g->glyph_y;
 583:u8g/u8g_font.c ****   y--;
 584:u8g/u8g_font.c ****   
 585:u8g/u8g_font.c ****   if ( u8g_IsBBXIntersection(u8g, x, y-h+1, w, h) == 0 )
 586:u8g/u8g_font.c ****     return u8g->glyph_dx;
 587:u8g/u8g_font.c **** 
 588:u8g/u8g_font.c ****   /* now, w is reused as bytes per line */
 589:u8g/u8g_font.c ****   w += 7;
 590:u8g/u8g_font.c ****   w /= 8;
 591:u8g/u8g_font.c ****   
 592:u8g/u8g_font.c ****   iy = y;
 593:u8g/u8g_font.c ****   iy -= h;
 594:u8g/u8g_font.c ****   iy++;
 595:u8g/u8g_font.c **** 
 596:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 597:u8g/u8g_font.c ****   {
 598:u8g/u8g_font.c ****     ix = x;
 599:u8g/u8g_font.c ****     for( i = 0; i < w; i++ )
 600:u8g/u8g_font.c ****     {
 601:u8g/u8g_font.c ****       u8g_Draw8Pixel(u8g, ix, iy, 0, u8g_pgm_read(data));
 602:u8g/u8g_font.c ****       data++;
 603:u8g/u8g_font.c ****       ix+=8;
 604:u8g/u8g_font.c ****     }
 605:u8g/u8g_font.c ****     iy++;
 606:u8g/u8g_font.c ****   }
 607:u8g/u8g_font.c ****   return u8g->glyph_dx;
 608:u8g/u8g_font.c **** }
 609:u8g/u8g_font.c **** 
 610:u8g/u8g_font.c **** int8_t u8g_DrawGlyph(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t encoding)
 611:u8g/u8g_font.c **** {
 612:u8g/u8g_font.c ****   y += u8g->font_calc_vref(u8g);
 613:u8g/u8g_font.c ****   return u8g_draw_glyph(u8g, x, y, encoding);
 614:u8g/u8g_font.c **** }
 615:u8g/u8g_font.c **** 
 616:u8g/u8g_font.c **** int8_t u8g_draw_glyph90(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t encoding)
 617:u8g/u8g_font.c **** {
 618:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 619:u8g/u8g_font.c ****   uint8_t w, h;
 620:u8g/u8g_font.c ****   uint8_t i, j;
 621:u8g/u8g_font.c ****   u8g_uint_t ix, iy;
 622:u8g/u8g_font.c **** 
 623:u8g/u8g_font.c ****   {
 624:u8g/u8g_font.c ****     u8g_glyph_t g = u8g_GetGlyph(u8g, encoding);
 625:u8g/u8g_font.c ****     if ( g == NULL  )
 626:u8g/u8g_font.c ****       return 0;
 627:u8g/u8g_font.c ****     data = u8g_font_GetGlyphDataStart(u8g->font, g);
 628:u8g/u8g_font.c ****   }
 629:u8g/u8g_font.c ****   
 630:u8g/u8g_font.c ****   w = u8g->glyph_width;
 631:u8g/u8g_font.c ****   h = u8g->glyph_height;
 632:u8g/u8g_font.c ****   
 633:u8g/u8g_font.c ****   x += u8g->glyph_y;
 634:u8g/u8g_font.c ****   x++;
 635:u8g/u8g_font.c ****   y += u8g->glyph_x;
 636:u8g/u8g_font.c ****   
 637:u8g/u8g_font.c ****   if ( u8g_IsBBXIntersection(u8g, x, y, h, w) == 0 )
 638:u8g/u8g_font.c ****     return u8g->glyph_dx;
 639:u8g/u8g_font.c **** 
 640:u8g/u8g_font.c ****   /* now, w is reused as bytes per line */
 641:u8g/u8g_font.c ****   w += 7;
 642:u8g/u8g_font.c ****   w /= 8;
 643:u8g/u8g_font.c ****   
 644:u8g/u8g_font.c ****   ix = x;
 645:u8g/u8g_font.c ****   ix += h;
 646:u8g/u8g_font.c ****   ix--;
 647:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 648:u8g/u8g_font.c ****   {
 649:u8g/u8g_font.c ****     iy = y;
 650:u8g/u8g_font.c ****     for( i = 0; i < w; i++ )
 651:u8g/u8g_font.c ****     {
 652:u8g/u8g_font.c ****       u8g_Draw8Pixel(u8g, ix, iy, 1, u8g_pgm_read(data));
 653:u8g/u8g_font.c ****       data++;
 654:u8g/u8g_font.c ****       iy+=8;
 655:u8g/u8g_font.c ****     }
 656:u8g/u8g_font.c ****     ix--;
 657:u8g/u8g_font.c ****   }
 658:u8g/u8g_font.c ****   return u8g->glyph_dx;
 659:u8g/u8g_font.c **** }
 660:u8g/u8g_font.c **** 
 661:u8g/u8g_font.c **** int8_t u8g_DrawGlyph90(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t encoding)
 662:u8g/u8g_font.c **** {
 663:u8g/u8g_font.c ****   x -= u8g->font_calc_vref(u8g);
 664:u8g/u8g_font.c ****   return u8g_draw_glyph90(u8g, x, y, encoding);
 665:u8g/u8g_font.c **** }
 666:u8g/u8g_font.c **** 
 667:u8g/u8g_font.c **** 
 668:u8g/u8g_font.c **** int8_t u8g_draw_glyph180(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t encoding)
 669:u8g/u8g_font.c **** {
 670:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 671:u8g/u8g_font.c ****   uint8_t w, h;
 672:u8g/u8g_font.c ****   uint8_t i, j;
 673:u8g/u8g_font.c ****   u8g_uint_t ix, iy;
 674:u8g/u8g_font.c **** 
 675:u8g/u8g_font.c ****   {
 676:u8g/u8g_font.c ****     u8g_glyph_t g = u8g_GetGlyph(u8g, encoding);
 677:u8g/u8g_font.c ****     if ( g == NULL  )
 678:u8g/u8g_font.c ****       return 0;
 679:u8g/u8g_font.c ****     data = u8g_font_GetGlyphDataStart(u8g->font, g);
 680:u8g/u8g_font.c ****   }
 681:u8g/u8g_font.c ****   
 682:u8g/u8g_font.c ****   w = u8g->glyph_width;
 683:u8g/u8g_font.c ****   h = u8g->glyph_height;
 684:u8g/u8g_font.c ****   
 685:u8g/u8g_font.c ****   x -= u8g->glyph_x;
 686:u8g/u8g_font.c ****   y += u8g->glyph_y;
 687:u8g/u8g_font.c ****   y++;
 688:u8g/u8g_font.c ****   
 689:u8g/u8g_font.c ****   if ( u8g_IsBBXIntersection(u8g, x-(w-1), y, w, h) == 0 )
 690:u8g/u8g_font.c ****     return u8g->glyph_dx;
 691:u8g/u8g_font.c **** 
 692:u8g/u8g_font.c ****   /* now, w is reused as bytes per line */
 693:u8g/u8g_font.c ****   w += 7;
 694:u8g/u8g_font.c ****   w /= 8;
 695:u8g/u8g_font.c ****   
 696:u8g/u8g_font.c ****   iy = y;
 697:u8g/u8g_font.c ****   iy += h;
 698:u8g/u8g_font.c ****   iy--;
 699:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 700:u8g/u8g_font.c ****   {
 701:u8g/u8g_font.c ****     ix = x;
 702:u8g/u8g_font.c ****     for( i = 0; i < w; i++ )
 703:u8g/u8g_font.c ****     {
 704:u8g/u8g_font.c ****       u8g_Draw8Pixel(u8g, ix, iy, 2, u8g_pgm_read(data));
 705:u8g/u8g_font.c ****       data++;
 706:u8g/u8g_font.c ****       ix-=8;
 707:u8g/u8g_font.c ****     }
 708:u8g/u8g_font.c ****     iy--;
 709:u8g/u8g_font.c ****   }
 710:u8g/u8g_font.c ****   return u8g->glyph_dx;
 711:u8g/u8g_font.c **** }
 712:u8g/u8g_font.c **** 
 713:u8g/u8g_font.c **** int8_t u8g_DrawGlyph180(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t encoding)
 714:u8g/u8g_font.c **** {
 715:u8g/u8g_font.c ****   y -= u8g->font_calc_vref(u8g);
 716:u8g/u8g_font.c ****   return u8g_draw_glyph180(u8g, x, y, encoding);
 717:u8g/u8g_font.c **** }
 718:u8g/u8g_font.c **** 
 719:u8g/u8g_font.c **** 
 720:u8g/u8g_font.c **** int8_t u8g_draw_glyph270(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t encoding)
 721:u8g/u8g_font.c **** {
 722:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 723:u8g/u8g_font.c ****   uint8_t w, h;
 724:u8g/u8g_font.c ****   uint8_t i, j;
 725:u8g/u8g_font.c ****   u8g_uint_t ix, iy;
 726:u8g/u8g_font.c **** 
 727:u8g/u8g_font.c ****   {
 728:u8g/u8g_font.c ****     u8g_glyph_t g = u8g_GetGlyph(u8g, encoding);
 729:u8g/u8g_font.c ****     if ( g == NULL  )
 730:u8g/u8g_font.c ****       return 0;
 731:u8g/u8g_font.c ****     data = u8g_font_GetGlyphDataStart(u8g->font, g);
 732:u8g/u8g_font.c ****   }
 733:u8g/u8g_font.c ****   
 734:u8g/u8g_font.c ****   w = u8g->glyph_width;
 735:u8g/u8g_font.c ****   h = u8g->glyph_height;
 736:u8g/u8g_font.c ****   
 737:u8g/u8g_font.c ****   x -= u8g->glyph_y;
 738:u8g/u8g_font.c ****   x--;
 739:u8g/u8g_font.c ****   y -= u8g->glyph_x;
 740:u8g/u8g_font.c ****   
 741:u8g/u8g_font.c ****   if ( u8g_IsBBXIntersection(u8g, x-(h-1), y-(w-1), h, w) == 0 )
 742:u8g/u8g_font.c ****     return u8g->glyph_dx;
 743:u8g/u8g_font.c ****   
 744:u8g/u8g_font.c **** 
 745:u8g/u8g_font.c ****   /* now, w is reused as bytes per line */
 746:u8g/u8g_font.c ****   w += 7;
 747:u8g/u8g_font.c ****   w /= 8;  
 748:u8g/u8g_font.c ****       
 749:u8g/u8g_font.c ****   ix = x;
 750:u8g/u8g_font.c ****   ix -= h;
 751:u8g/u8g_font.c ****   ix++;
 752:u8g/u8g_font.c ****   
 753:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 754:u8g/u8g_font.c ****   {
 755:u8g/u8g_font.c ****     iy = y;
 756:u8g/u8g_font.c ****     for( i = 0; i < w; i++ )
 757:u8g/u8g_font.c ****     {
 758:u8g/u8g_font.c ****       u8g_Draw8Pixel(u8g, ix, iy, 3, u8g_pgm_read(data));
 759:u8g/u8g_font.c ****       data++;
 760:u8g/u8g_font.c ****       iy-=8;
 761:u8g/u8g_font.c ****     }
 762:u8g/u8g_font.c ****     ix++;
 763:u8g/u8g_font.c ****   }
 764:u8g/u8g_font.c ****   return u8g->glyph_dx;
 765:u8g/u8g_font.c **** }
 766:u8g/u8g_font.c **** 
 767:u8g/u8g_font.c **** int8_t u8g_DrawGlyph270(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t encoding)
 768:u8g/u8g_font.c **** {
 769:u8g/u8g_font.c ****   x += u8g->font_calc_vref(u8g);
 770:u8g/u8g_font.c ****   return u8g_draw_glyph270(u8g, x, y, encoding);
 771:u8g/u8g_font.c **** }
 772:u8g/u8g_font.c **** 
 773:u8g/u8g_font.c **** 
 774:u8g/u8g_font.c **** 
 775:u8g/u8g_font.c **** #ifdef OBSOLETE
 776:u8g/u8g_font.c **** /*
 777:u8g/u8g_font.c ****   Draw a glyph
 778:u8g/u8g_font.c ****   x,y: lower left corner of the font bounding box
 779:u8g/u8g_font.c **** */
 780:u8g/u8g_font.c **** int8_t u8g_DrawGlyphFontBBX(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t dir, uint8_t encoding)
 781:u8g/u8g_font.c **** {
 782:u8g/u8g_font.c ****   /* TODO: apply "dir" */
 783:u8g/u8g_font.c ****   x -= u8g_GetFontBBXOffX(u8g);
 784:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 785:u8g/u8g_font.c ****   return u8g_DrawGlyphDir(u8g, x, y, dir, encoding);
 786:u8g/u8g_font.c **** }
 787:u8g/u8g_font.c **** #endif
 788:u8g/u8g_font.c **** 
 789:u8g/u8g_font.c **** /*========================================================================*/
 790:u8g/u8g_font.c **** /* string drawing procedures */
 791:u8g/u8g_font.c **** 
 792:u8g/u8g_font.c **** 
 793:u8g/u8g_font.c **** u8g_uint_t u8g_DrawStr(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, const char *s)
 794:u8g/u8g_font.c **** {
 795:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 796:u8g/u8g_font.c ****   int8_t d;
 797:u8g/u8g_font.c ****   
 798:u8g/u8g_font.c ****   //u8g_uint_t u8g_GetStrWidth(u8g, s);
 799:u8g/u8g_font.c ****   //u8g_font_GetFontAscent(u8g->font)-u8g_font_GetFontDescent(u8g->font);
 800:u8g/u8g_font.c ****   
 801:u8g/u8g_font.c ****   y += u8g->font_calc_vref(u8g);
 802:u8g/u8g_font.c ****   
 803:u8g/u8g_font.c ****   while( *s != '\0' )
 804:u8g/u8g_font.c ****   {
 805:u8g/u8g_font.c ****     d = u8g_draw_glyph(u8g, x, y, *s);
 806:u8g/u8g_font.c ****     x += d;
 807:u8g/u8g_font.c ****     t += d;
 808:u8g/u8g_font.c ****     s++;
 809:u8g/u8g_font.c ****   }
 810:u8g/u8g_font.c ****   return t;
 811:u8g/u8g_font.c **** }
 812:u8g/u8g_font.c **** 
 813:u8g/u8g_font.c **** u8g_uint_t u8g_DrawStr90(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, const char *s)
 814:u8g/u8g_font.c **** {
 815:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 816:u8g/u8g_font.c ****   int8_t d;
 817:u8g/u8g_font.c ****     
 818:u8g/u8g_font.c ****   x -= u8g->font_calc_vref(u8g);
 819:u8g/u8g_font.c **** 
 820:u8g/u8g_font.c ****   while( *s != '\0' )
 821:u8g/u8g_font.c ****   {
 822:u8g/u8g_font.c ****     d = u8g_draw_glyph90(u8g, x, y, *s);
 823:u8g/u8g_font.c ****     y += d;
 824:u8g/u8g_font.c ****     t += d;
 825:u8g/u8g_font.c ****     s++;
 826:u8g/u8g_font.c ****   }
 827:u8g/u8g_font.c ****   return t;
 828:u8g/u8g_font.c **** }
 829:u8g/u8g_font.c **** 
 830:u8g/u8g_font.c **** u8g_uint_t u8g_DrawStr180(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, const char *s)
 831:u8g/u8g_font.c **** {
 832:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 833:u8g/u8g_font.c ****   int8_t d;
 834:u8g/u8g_font.c **** 
 835:u8g/u8g_font.c ****   y -= u8g->font_calc_vref(u8g);
 836:u8g/u8g_font.c ****   
 837:u8g/u8g_font.c ****   while( *s != '\0' )
 838:u8g/u8g_font.c ****   {
 839:u8g/u8g_font.c ****     d = u8g_draw_glyph180(u8g, x, y, *s);
 840:u8g/u8g_font.c ****     x -= d;
 841:u8g/u8g_font.c ****     t += d;
 842:u8g/u8g_font.c ****     s++;
 843:u8g/u8g_font.c ****   }
 844:u8g/u8g_font.c ****   return t;
 845:u8g/u8g_font.c **** }
 846:u8g/u8g_font.c **** 
 847:u8g/u8g_font.c **** u8g_uint_t u8g_DrawStr270(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, const char *s)
 848:u8g/u8g_font.c **** {
 849:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 850:u8g/u8g_font.c ****   int8_t d;
 851:u8g/u8g_font.c **** 
 852:u8g/u8g_font.c ****   x += u8g->font_calc_vref(u8g);
 853:u8g/u8g_font.c **** 
 854:u8g/u8g_font.c ****   while( *s != '\0' )
 855:u8g/u8g_font.c ****   {
 856:u8g/u8g_font.c ****     d = u8g_draw_glyph270(u8g, x, y, *s);
 857:u8g/u8g_font.c ****     y -= d;
 858:u8g/u8g_font.c ****     t += d;
 859:u8g/u8g_font.c ****     s++;
 860:u8g/u8g_font.c ****   }
 861:u8g/u8g_font.c ****   return t;
 862:u8g/u8g_font.c **** }
 863:u8g/u8g_font.c **** 
 864:u8g/u8g_font.c **** u8g_uint_t u8g_DrawStrDir(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t dir, const char *s)
 865:u8g/u8g_font.c **** {
 866:u8g/u8g_font.c ****   switch(dir)
 867:u8g/u8g_font.c ****   {
 868:u8g/u8g_font.c ****     case 0:
 869:u8g/u8g_font.c ****       return u8g_DrawStr(u8g, x, y, s);
 870:u8g/u8g_font.c ****     case 1:
 871:u8g/u8g_font.c ****       return u8g_DrawStr90(u8g, x, y, s);
 872:u8g/u8g_font.c ****     case 2:
 873:u8g/u8g_font.c ****       return u8g_DrawStr180(u8g, x, y, s);
 874:u8g/u8g_font.c ****     case 3:
 875:u8g/u8g_font.c ****       return u8g_DrawStr270(u8g, x, y, s);
 876:u8g/u8g_font.c ****   }
 877:u8g/u8g_font.c ****   return 0;
 878:u8g/u8g_font.c **** }
 879:u8g/u8g_font.c **** 
 880:u8g/u8g_font.c **** u8g_uint_t u8g_DrawStrP(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, const u8g_pgm_uint8_t *s)
 881:u8g/u8g_font.c **** {
 882:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 883:u8g/u8g_font.c ****   int8_t d;
 884:u8g/u8g_font.c ****   uint8_t c;
 885:u8g/u8g_font.c ****   
 886:u8g/u8g_font.c ****   y += u8g->font_calc_vref(u8g);
 887:u8g/u8g_font.c ****   
 888:u8g/u8g_font.c ****   for(;;)
 889:u8g/u8g_font.c ****   {
 890:u8g/u8g_font.c ****     c = u8g_pgm_read(s);
 891:u8g/u8g_font.c ****     if ( c == '\0' )
 892:u8g/u8g_font.c ****       break;
 893:u8g/u8g_font.c ****     d = u8g_draw_glyph(u8g, x, y, c);
 894:u8g/u8g_font.c ****     x += d;
 895:u8g/u8g_font.c ****     t += d;
 896:u8g/u8g_font.c ****     s++;
 897:u8g/u8g_font.c ****   }
 898:u8g/u8g_font.c ****   return t;
 899:u8g/u8g_font.c **** }
 900:u8g/u8g_font.c **** 
 901:u8g/u8g_font.c **** u8g_uint_t u8g_DrawStr90P(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, const u8g_pgm_uint8_t *s)
 902:u8g/u8g_font.c **** {
 903:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 904:u8g/u8g_font.c ****   int8_t d;
 905:u8g/u8g_font.c ****   
 906:u8g/u8g_font.c ****   x -= u8g->font_calc_vref(u8g);
 907:u8g/u8g_font.c **** 
 908:u8g/u8g_font.c ****   while( *s != '\0' )
 909:u8g/u8g_font.c ****   {
 910:u8g/u8g_font.c ****     d = u8g_DrawGlyph90(u8g, x, y, u8g_pgm_read(s));
 911:u8g/u8g_font.c ****     y += d;
 912:u8g/u8g_font.c ****     t += d;
 913:u8g/u8g_font.c ****     s++;
 914:u8g/u8g_font.c ****   }
 915:u8g/u8g_font.c ****   return t;
 916:u8g/u8g_font.c **** }
 917:u8g/u8g_font.c **** 
 918:u8g/u8g_font.c **** u8g_uint_t u8g_DrawStr180P(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, const u8g_pgm_uint8_t *s)
 919:u8g/u8g_font.c **** {
 920:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 921:u8g/u8g_font.c ****   int8_t d;
 922:u8g/u8g_font.c **** 
 923:u8g/u8g_font.c ****   y -= u8g->font_calc_vref(u8g);
 924:u8g/u8g_font.c ****   
 925:u8g/u8g_font.c ****   while( *s != '\0' )
 926:u8g/u8g_font.c ****   {
 927:u8g/u8g_font.c ****     d = u8g_DrawGlyph180(u8g, x, y, u8g_pgm_read(s));
 928:u8g/u8g_font.c ****     x -= d;
 929:u8g/u8g_font.c ****     t += d;
 930:u8g/u8g_font.c ****     s++;
 931:u8g/u8g_font.c ****   }
 932:u8g/u8g_font.c ****   return t;
 933:u8g/u8g_font.c **** }
 934:u8g/u8g_font.c **** 
 935:u8g/u8g_font.c **** u8g_uint_t u8g_DrawStr270P(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, const u8g_pgm_uint8_t *s)
 936:u8g/u8g_font.c **** {
 937:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 938:u8g/u8g_font.c ****   int8_t d;
 939:u8g/u8g_font.c **** 
 940:u8g/u8g_font.c ****   x += u8g->font_calc_vref(u8g);
 941:u8g/u8g_font.c **** 
 942:u8g/u8g_font.c ****   while( *s != '\0' )
 943:u8g/u8g_font.c ****   {
 944:u8g/u8g_font.c ****     d = u8g_DrawGlyph270(u8g, x, y, u8g_pgm_read(s));
 945:u8g/u8g_font.c ****     y -= d;
 946:u8g/u8g_font.c ****     t += d;
 947:u8g/u8g_font.c ****     s++;
 948:u8g/u8g_font.c ****   }
 949:u8g/u8g_font.c ****   return t;
 950:u8g/u8g_font.c **** }
 951:u8g/u8g_font.c **** 
 952:u8g/u8g_font.c **** u8g_uint_t u8g_DrawStrFontBBX(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t dir, const char *s)
 953:u8g/u8g_font.c **** {
 954:u8g/u8g_font.c ****   x -= u8g_GetFontBBXOffX(u8g);
 955:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 956:u8g/u8g_font.c ****   return u8g_DrawStrDir(u8g, x, y, dir, s);
 957:u8g/u8g_font.c **** }
 958:u8g/u8g_font.c **** 
 959:u8g/u8g_font.c **** /* still used by picgen.c, dir argument is ignored */
 960:u8g/u8g_font.c **** int8_t u8g_DrawGlyphFontBBX(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t dir, uint8_t encoding)
 961:u8g/u8g_font.c **** {
 962:u8g/u8g_font.c ****   x -= u8g_GetFontBBXOffX(u8g);
 963:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 964:u8g/u8g_font.c ****   u8g_draw_glyph(u8g, x, y, encoding);
 965:u8g/u8g_font.c ****   return 0;
 966:u8g/u8g_font.c **** }
 967:u8g/u8g_font.c **** 
 968:u8g/u8g_font.c **** 
 969:u8g/u8g_font.c **** /*========================================================================*/
 970:u8g/u8g_font.c **** /* set ascent/descent for reference point calculation */
 971:u8g/u8g_font.c **** 
 972:u8g/u8g_font.c **** void u8g_UpdateRefHeight(u8g_t *u8g)
 973:u8g/u8g_font.c **** {
 974:u8g/u8g_font.c ****   uint16_t ls;
 975:u8g/u8g_font.c ****   if ( u8g->font == NULL )
 976:u8g/u8g_font.c ****     return;
 977:u8g/u8g_font.c ****   if ( u8g->font_height_mode == U8G_FONT_HEIGHT_MODE_TEXT )
 978:u8g/u8g_font.c ****   {
 979:u8g/u8g_font.c ****     u8g->font_ref_ascent = u8g_font_GetCapitalAHeight(u8g->font);
 980:u8g/u8g_font.c ****     u8g->font_ref_descent = u8g_font_GetLowerGDescent(u8g->font);
 981:u8g/u8g_font.c ****   }
 982:u8g/u8g_font.c ****   else if ( u8g->font_height_mode == U8G_FONT_HEIGHT_MODE_XTEXT )
 983:u8g/u8g_font.c ****   {
 984:u8g/u8g_font.c ****     u8g->font_ref_ascent = u8g_font_GetFontXAscent(u8g->font);
 985:u8g/u8g_font.c ****     u8g->font_ref_descent = u8g_font_GetFontXDescent(u8g->font);
 986:u8g/u8g_font.c ****   }
 987:u8g/u8g_font.c ****   else
 988:u8g/u8g_font.c ****   {
 989:u8g/u8g_font.c ****     u8g->font_ref_ascent = u8g_font_GetFontAscent(u8g->font);
 990:u8g/u8g_font.c ****     u8g->font_ref_descent = u8g_font_GetFontDescent(u8g->font);
 991:u8g/u8g_font.c ****   }
 992:u8g/u8g_font.c ****   
 993:u8g/u8g_font.c ****   ls = u8g->font_ref_ascent - u8g->font_ref_descent;
 994:u8g/u8g_font.c ****   if ( u8g->font_line_spacing_factor != 64 )
 995:u8g/u8g_font.c ****   {
 996:u8g/u8g_font.c ****     ls &= 255;
 997:u8g/u8g_font.c ****     ls *= u8g->font_line_spacing_factor;
 998:u8g/u8g_font.c ****     ls >>= 6;
 999:u8g/u8g_font.c ****   }
1000:u8g/u8g_font.c ****   u8g->line_spacing = ls;
1001:u8g/u8g_font.c **** }
1002:u8g/u8g_font.c **** 
1003:u8g/u8g_font.c **** void u8g_SetFontRefHeightText(u8g_t *u8g)
1004:u8g/u8g_font.c **** {
1005:u8g/u8g_font.c ****   u8g->font_height_mode = U8G_FONT_HEIGHT_MODE_TEXT;
1006:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
1007:u8g/u8g_font.c **** }
1008:u8g/u8g_font.c **** 
1009:u8g/u8g_font.c **** void u8g_SetFontRefHeightExtendedText(u8g_t *u8g)
1010:u8g/u8g_font.c **** {
1011:u8g/u8g_font.c ****   u8g->font_height_mode = U8G_FONT_HEIGHT_MODE_XTEXT;
1012:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
1013:u8g/u8g_font.c **** }
1014:u8g/u8g_font.c **** 
1015:u8g/u8g_font.c **** 
1016:u8g/u8g_font.c **** void u8g_SetFontRefHeightAll(u8g_t *u8g)
1017:u8g/u8g_font.c **** {
1018:u8g/u8g_font.c ****   u8g->font_height_mode = U8G_FONT_HEIGHT_MODE_ALL;
1019:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
1020:u8g/u8g_font.c **** }
1021:u8g/u8g_font.c **** 
1022:u8g/u8g_font.c **** /* factor = 64: linespaceing == ascent and descent */
1023:u8g/u8g_font.c **** void u8g_SetFontLineSpacingFactor(u8g_t *u8g, uint8_t  factor)
1024:u8g/u8g_font.c **** {
1025:u8g/u8g_font.c ****   u8g->font_line_spacing_factor = factor;
1026:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
1027:u8g/u8g_font.c **** }
1028:u8g/u8g_font.c **** 
1029:u8g/u8g_font.c **** 
1030:u8g/u8g_font.c **** 
1031:u8g/u8g_font.c **** /*========================================================================*/
1032:u8g/u8g_font.c **** /* callback procedures to correct the y position */
1033:u8g/u8g_font.c **** 
1034:u8g/u8g_font.c **** u8g_uint_t u8g_font_calc_vref_font(u8g_t *u8g)
1035:u8g/u8g_font.c **** {
  61              		.loc 1 1035 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL5:
1036:u8g/u8g_font.c ****   return 0;
1037:u8g/u8g_font.c **** }
  67              		.loc 1 1037 0
  68 0000 0020     		movs	r0, #0
  69              	.LVL6:
  70 0002 7047     		bx	lr
  71              		.cfi_endproc
  72              	.LFE54:
  74              		.section	.text.u8g_font_calc_vref_bottom,"ax",%progbits
  75              		.align	1
  76              		.p2align 2,,3
  77              		.global	u8g_font_calc_vref_bottom
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu softvfp
  83              	u8g_font_calc_vref_bottom:
  84              	.LFB56:
1038:u8g/u8g_font.c **** 
1039:u8g/u8g_font.c **** void u8g_SetFontPosBaseline(u8g_t *u8g)
1040:u8g/u8g_font.c **** {
1041:u8g/u8g_font.c ****   u8g->font_calc_vref = u8g_font_calc_vref_font;
1042:u8g/u8g_font.c **** }
1043:u8g/u8g_font.c **** 
1044:u8g/u8g_font.c **** 
1045:u8g/u8g_font.c **** u8g_uint_t u8g_font_calc_vref_bottom(u8g_t *u8g)
1046:u8g/u8g_font.c **** {
  85              		.loc 1 1046 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.LVL7:
1047:u8g/u8g_font.c ****   /* y += (u8g_uint_t)(u8g_int_t)(u8g->font_ref_descent); */
1048:u8g/u8g_font.c ****   return (u8g_uint_t)(u8g_int_t)(u8g->font_ref_descent);
1049:u8g/u8g_font.c **** }
  91              		.loc 1 1049 0
  92 0000 90F82A00 		ldrb	r0, [r0, #42]	@ zero_extendqisi2
  93              	.LVL8:
  94 0004 7047     		bx	lr
  95              		.cfi_endproc
  96              	.LFE56:
  98 0006 00BF     		.section	.text.u8g_font_calc_vref_top,"ax",%progbits
  99              		.align	1
 100              		.p2align 2,,3
 101              		.global	u8g_font_calc_vref_top
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu softvfp
 107              	u8g_font_calc_vref_top:
 108              	.LFB58:
1050:u8g/u8g_font.c **** 
1051:u8g/u8g_font.c **** void u8g_SetFontPosBottom(u8g_t *u8g)
1052:u8g/u8g_font.c **** {
1053:u8g/u8g_font.c ****   u8g->font_calc_vref = u8g_font_calc_vref_bottom;
1054:u8g/u8g_font.c **** }
1055:u8g/u8g_font.c **** 
1056:u8g/u8g_font.c **** u8g_uint_t u8g_font_calc_vref_top(u8g_t *u8g)
1057:u8g/u8g_font.c **** {
 109              		.loc 1 1057 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 114              	.LVL9:
1058:u8g/u8g_font.c ****   u8g_uint_t tmp;
1059:u8g/u8g_font.c ****   /* reference pos is one pixel above the upper edge of the reference glyph */
1060:u8g/u8g_font.c **** 
1061:u8g/u8g_font.c ****   /*
1062:u8g/u8g_font.c ****   y += (u8g_uint_t)(u8g_int_t)(u8g->font_ref_ascent);
1063:u8g/u8g_font.c ****   y++;
1064:u8g/u8g_font.c ****   */
1065:u8g/u8g_font.c ****   tmp = (u8g_uint_t)(u8g_int_t)(u8g->font_ref_ascent);
 115              		.loc 1 1065 0
 116 0000 90F82900 		ldrb	r0, [r0, #41]	@ zero_extendqisi2
 117              	.LVL10:
1066:u8g/u8g_font.c ****   tmp++;
 118              		.loc 1 1066 0
 119 0004 0130     		adds	r0, r0, #1
 120              	.LVL11:
1067:u8g/u8g_font.c ****   return tmp;
1068:u8g/u8g_font.c **** }
 121              		.loc 1 1068 0
 122 0006 C0B2     		uxtb	r0, r0
 123              	.LVL12:
 124 0008 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE58:
 128 000a 00BF     		.section	.text.u8g_font_calc_vref_center,"ax",%progbits
 129              		.align	1
 130              		.p2align 2,,3
 131              		.global	u8g_font_calc_vref_center
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu softvfp
 137              	u8g_font_calc_vref_center:
 138              	.LFB60:
1069:u8g/u8g_font.c **** 
1070:u8g/u8g_font.c **** void u8g_SetFontPosTop(u8g_t *u8g)
1071:u8g/u8g_font.c **** {
1072:u8g/u8g_font.c ****   u8g->font_calc_vref = u8g_font_calc_vref_top;
1073:u8g/u8g_font.c **** }
1074:u8g/u8g_font.c **** 
1075:u8g/u8g_font.c **** u8g_uint_t u8g_font_calc_vref_center(u8g_t *u8g)
1076:u8g/u8g_font.c **** {
 139              		.loc 1 1076 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL13:
1077:u8g/u8g_font.c ****   int8_t tmp;
1078:u8g/u8g_font.c ****   tmp = u8g->font_ref_ascent;
1079:u8g/u8g_font.c ****   tmp -= u8g->font_ref_descent;
 145              		.loc 1 1079 0
 146 0000 90F82A30 		ldrb	r3, [r0, #42]	@ zero_extendqisi2
 147 0004 90F82900 		ldrb	r0, [r0, #41]	@ zero_extendqisi2
 148              	.LVL14:
 149 0008 C01A     		subs	r0, r0, r3
 150              	.LVL15:
 151 000a 40B2     		sxtb	r0, r0
 152              	.LVL16:
1080:u8g/u8g_font.c ****   tmp /= 2;
 153              		.loc 1 1080 0
 154 000c 00EBD070 		add	r0, r0, r0, lsr #31
 155              	.LVL17:
1081:u8g/u8g_font.c ****   tmp += u8g->font_ref_descent;  
 156              		.loc 1 1081 0
 157 0010 03EB6000 		add	r0, r3, r0, asr #1
1082:u8g/u8g_font.c ****   /* y += (u8g_uint_t)(u8g_int_t)(tmp); */
1083:u8g/u8g_font.c ****   return tmp;
1084:u8g/u8g_font.c **** }
 158              		.loc 1 1084 0
 159 0014 C0B2     		uxtb	r0, r0
 160 0016 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE60:
 164              		.section	.text.u8g_font_get_char,"ax",%progbits
 165              		.align	1
 166              		.p2align 2,,3
 167              		.global	u8g_font_get_char
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	u8g_font_get_char:
 174              	.LFB62:
1085:u8g/u8g_font.c **** 
1086:u8g/u8g_font.c **** void u8g_SetFontPosCenter(u8g_t *u8g)
1087:u8g/u8g_font.c **** {
1088:u8g/u8g_font.c ****   u8g->font_calc_vref = u8g_font_calc_vref_center;
1089:u8g/u8g_font.c **** }
1090:u8g/u8g_font.c **** 
1091:u8g/u8g_font.c **** /*========================================================================*/
1092:u8g/u8g_font.c **** /* string pixel width calculation */
1093:u8g/u8g_font.c **** 
1094:u8g/u8g_font.c **** char u8g_font_get_char(const void *s)
1095:u8g/u8g_font.c **** {
 175              		.loc 1 1095 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL18:
1096:u8g/u8g_font.c ****   return *(const char *)(s);
1097:u8g/u8g_font.c **** }
 181              		.loc 1 1097 0
 182 0000 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 183              	.LVL19:
 184 0002 7047     		bx	lr
 185              		.cfi_endproc
 186              	.LFE62:
 188              		.section	.text.u8g_font_GetFormat.isra.0,"ax",%progbits
 189              		.align	1
 190              		.p2align 2,,3
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu softvfp
 196              	u8g_font_GetFormat.isra.0:
 197              	.LFB82:
 110:u8g/u8g_font.c **** {
 198              		.loc 1 110 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203              	.LVL20:
 113:u8g/u8g_font.c **** 
 204              		.loc 1 113 0
 205 0000 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE82:
 209 0002 00BF     		.section	.text.u8g_font_GetFontGlyphStructureSize.isra.1,"ax",%progbits
 210              		.align	1
 211              		.p2align 2,,3
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu softvfp
 217              	u8g_font_GetFontGlyphStructureSize.isra.1:
 218              	.LFB83:
 116:u8g/u8g_font.c **** {
 219              		.loc 1 116 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              	.LVL21:
 224 0000 08B5     		push	{r3, lr}
 225              	.LCFI0:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 118:u8g/u8g_font.c ****   {
 229              		.loc 1 118 0
 230 0002 044B     		ldr	r3, .L20
 231 0004 9847     		blx	r3
 232              	.LVL22:
 233 0006 18B1     		cbz	r0, .L12
 234 0008 0228     		cmp	r0, #2
 235 000a 01D0     		beq	.L12
 121:u8g/u8g_font.c ****     case 2: return 6;
 236              		.loc 1 121 0
 237 000c 0320     		movs	r0, #3
 125:u8g/u8g_font.c **** 
 238              		.loc 1 125 0
 239 000e 08BD     		pop	{r3, pc}
 240              	.L12:
 120:u8g/u8g_font.c ****     case 1: return 3;
 241              		.loc 1 120 0
 242 0010 0620     		movs	r0, #6
 125:u8g/u8g_font.c **** 
 243              		.loc 1 125 0
 244 0012 08BD     		pop	{r3, pc}
 245              	.L21:
 246              		.align	2
 247              	.L20:
 248 0014 00000000 		.word	u8g_font_GetFormat.isra.0
 249              		.cfi_endproc
 250              	.LFE83:
 252              		.section	.text.u8g_font_get_charP,"ax",%progbits
 253              		.align	1
 254              		.p2align 2,,3
 255              		.global	u8g_font_get_charP
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu softvfp
 261              	u8g_font_get_charP:
 262              	.LFB87:
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267 0000 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 268 0002 7047     		bx	lr
 269              		.cfi_endproc
 270              	.LFE87:
 272              		.section	.text.u8g_font_GetCapitalAHeight,"ax",%progbits
 273              		.align	1
 274              		.p2align 2,,3
 275              		.global	u8g_font_GetCapitalAHeight
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu softvfp
 281              	u8g_font_GetCapitalAHeight:
 282              	.LFB8:
 148:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 5);
 283              		.loc 1 148 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL23:
 150:u8g/u8g_font.c **** 
 289              		.loc 1 150 0
 290 0000 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
 291              	.LVL24:
 292 0002 7047     		bx	lr
 293              		.cfi_endproc
 294              	.LFE8:
 296              		.section	.text.u8g_font_GetEncoding65Pos,"ax",%progbits
 297              		.align	1
 298              		.p2align 2,,3
 299              		.global	u8g_font_GetEncoding65Pos
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	u8g_font_GetEncoding65Pos:
 306              	.LFB9:
 154:u8g/u8g_font.c ****     return u8g_font_get_word(font, 6);
 307              		.loc 1 154 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 312              	.LVL25:
 155:u8g/u8g_font.c **** }
 313              		.loc 1 155 0
 314 0000 0621     		movs	r1, #6
 315 0002 014B     		ldr	r3, .L25
 316 0004 1847     		bx	r3
 317              	.LVL26:
 318              	.L26:
 319 0006 00BF     		.align	2
 320              	.L25:
 321 0008 00000000 		.word	u8g_font_get_word
 322              		.cfi_endproc
 323              	.LFE9:
 325              		.section	.text.u8g_font_GetEncoding97Pos,"ax",%progbits
 326              		.align	1
 327              		.p2align 2,,3
 328              		.global	u8g_font_GetEncoding97Pos
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu softvfp
 334              	u8g_font_GetEncoding97Pos:
 335              	.LFB10:
 160:u8g/u8g_font.c ****     return u8g_font_get_word(font, 8);
 336              		.loc 1 160 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341              	.LVL27:
 161:u8g/u8g_font.c **** }
 342              		.loc 1 161 0
 343 0000 0821     		movs	r1, #8
 344 0002 014B     		ldr	r3, .L28
 345 0004 1847     		bx	r3
 346              	.LVL28:
 347              	.L29:
 348 0006 00BF     		.align	2
 349              	.L28:
 350 0008 00000000 		.word	u8g_font_get_word
 351              		.cfi_endproc
 352              	.LFE10:
 354              		.section	.text.u8g_font_GetFontStartEncoding,"ax",%progbits
 355              		.align	1
 356              		.p2align 2,,3
 357              		.global	u8g_font_GetFontStartEncoding
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu softvfp
 363              	u8g_font_GetFontStartEncoding:
 364              	.LFB11:
 165:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 10);
 365              		.loc 1 165 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370              	.LVL29:
 167:u8g/u8g_font.c **** 
 371              		.loc 1 167 0
 372 0000 807A     		ldrb	r0, [r0, #10]	@ zero_extendqisi2
 373              	.LVL30:
 374 0002 7047     		bx	lr
 375              		.cfi_endproc
 376              	.LFE11:
 378              		.section	.text.u8g_font_GetFontEndEncoding,"ax",%progbits
 379              		.align	1
 380              		.p2align 2,,3
 381              		.global	u8g_font_GetFontEndEncoding
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu softvfp
 387              	u8g_font_GetFontEndEncoding:
 388              	.LFB12:
 170:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 11);
 389              		.loc 1 170 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              	.LVL31:
 172:u8g/u8g_font.c **** 
 395              		.loc 1 172 0
 396 0000 C07A     		ldrb	r0, [r0, #11]	@ zero_extendqisi2
 397              	.LVL32:
 398 0002 7047     		bx	lr
 399              		.cfi_endproc
 400              	.LFE12:
 402              		.section	.text.u8g_font_GetLowerGDescent,"ax",%progbits
 403              		.align	1
 404              		.p2align 2,,3
 405              		.global	u8g_font_GetLowerGDescent
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu softvfp
 411              	u8g_font_GetLowerGDescent:
 412              	.LFB13:
 175:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 12);
 413              		.loc 1 175 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              	.LVL33:
 177:u8g/u8g_font.c **** 
 419              		.loc 1 177 0
 420 0000 90F90C00 		ldrsb	r0, [r0, #12]
 421              	.LVL34:
 422 0004 7047     		bx	lr
 423              		.cfi_endproc
 424              	.LFE13:
 426 0006 00BF     		.section	.text.u8g_font_GetFontAscent,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	u8g_font_GetFontAscent
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu softvfp
 435              	u8g_font_GetFontAscent:
 436              	.LFB14:
 180:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 13);
 437              		.loc 1 180 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442              	.LVL35:
 182:u8g/u8g_font.c **** 
 443              		.loc 1 182 0
 444 0000 90F90D00 		ldrsb	r0, [r0, #13]
 445              	.LVL36:
 446 0004 7047     		bx	lr
 447              		.cfi_endproc
 448              	.LFE14:
 450 0006 00BF     		.section	.text.u8g_font_GetFontDescent,"ax",%progbits
 451              		.align	1
 452              		.p2align 2,,3
 453              		.global	u8g_font_GetFontDescent
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu softvfp
 459              	u8g_font_GetFontDescent:
 460              	.LFB15:
 185:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 14);
 461              		.loc 1 185 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466              	.LVL37:
 187:u8g/u8g_font.c **** 
 467              		.loc 1 187 0
 468 0000 90F90E00 		ldrsb	r0, [r0, #14]
 469              	.LVL38:
 470 0004 7047     		bx	lr
 471              		.cfi_endproc
 472              	.LFE15:
 474 0006 00BF     		.section	.text.u8g_font_GetFontXAscent,"ax",%progbits
 475              		.align	1
 476              		.p2align 2,,3
 477              		.global	u8g_font_GetFontXAscent
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 481              		.fpu softvfp
 483              	u8g_font_GetFontXAscent:
 484              	.LFB16:
 190:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 15);
 485              		.loc 1 190 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490              	.LVL39:
 192:u8g/u8g_font.c **** 
 491              		.loc 1 192 0
 492 0000 90F90F00 		ldrsb	r0, [r0, #15]
 493              	.LVL40:
 494 0004 7047     		bx	lr
 495              		.cfi_endproc
 496              	.LFE16:
 498 0006 00BF     		.section	.text.u8g_font_GetFontXDescent,"ax",%progbits
 499              		.align	1
 500              		.p2align 2,,3
 501              		.global	u8g_font_GetFontXDescent
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 505              		.fpu softvfp
 507              	u8g_font_GetFontXDescent:
 508              	.LFB17:
 195:u8g/u8g_font.c ****   return u8g_font_get_byte(font, 16);
 509              		.loc 1 195 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514              	.LVL41:
 197:u8g/u8g_font.c **** 
 515              		.loc 1 197 0
 516 0000 90F91000 		ldrsb	r0, [r0, #16]
 517              	.LVL42:
 518 0004 7047     		bx	lr
 519              		.cfi_endproc
 520              	.LFE17:
 522 0006 00BF     		.section	.text.u8g_font_GetSize,"ax",%progbits
 523              		.align	1
 524              		.p2align 2,,3
 525              		.global	u8g_font_GetSize
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu softvfp
 531              	u8g_font_GetSize:
 532              	.LFB19:
 208:u8g/u8g_font.c ****   uint8_t *p = (uint8_t *)(font);
 533              		.loc 1 208 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              	.LVL43:
 538 0000 70B5     		push	{r4, r5, r6, lr}
 539              	.LCFI1:
 540              		.cfi_def_cfa_offset 16
 541              		.cfi_offset 4, -16
 542              		.cfi_offset 5, -12
 543              		.cfi_offset 6, -8
 544              		.cfi_offset 14, -4
 545 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 208:u8g/u8g_font.c ****   uint8_t *p = (uint8_t *)(font);
 546              		.loc 1 208 0
 547 0004 0446     		mov	r4, r0
 548              	.LVL44:
 210:u8g/u8g_font.c ****   uint8_t data_structure_size = u8g_font_GetFontGlyphStructureSize(font);
 549              		.loc 1 210 0
 550 0006 154A     		ldr	r2, .L47
 551 0008 1846     		mov	r0, r3
 552              	.LVL45:
 553 000a 9047     		blx	r2
 554              	.LVL46:
 555 000c 0246     		mov	r2, r0
 556              	.LVL47:
 211:u8g/u8g_font.c ****   uint8_t start, end;
 557              		.loc 1 211 0
 558 000e 1846     		mov	r0, r3
 559 0010 134B     		ldr	r3, .L47+4
 560 0012 9847     		blx	r3
 561              	.LVL48:
 216:u8g/u8g_font.c ****   end = u8g_font_GetFontEndEncoding(font);
 562              		.loc 1 216 0
 563 0014 134B     		ldr	r3, .L47+8
 211:u8g/u8g_font.c ****   uint8_t start, end;
 564              		.loc 1 211 0
 565 0016 0546     		mov	r5, r0
 566              	.LVL49:
 216:u8g/u8g_font.c ****   end = u8g_font_GetFontEndEncoding(font);
 567              		.loc 1 216 0
 568 0018 2046     		mov	r0, r4
 569 001a 9847     		blx	r3
 570              	.LVL50:
 217:u8g/u8g_font.c **** 
 571              		.loc 1 217 0
 572 001c 124B     		ldr	r3, .L47+12
 216:u8g/u8g_font.c ****   end = u8g_font_GetFontEndEncoding(font);
 573              		.loc 1 216 0
 574 001e 0146     		mov	r1, r0
 575              	.LVL51:
 217:u8g/u8g_font.c **** 
 576              		.loc 1 217 0
 577 0020 2046     		mov	r0, r4
 578 0022 9847     		blx	r3
 579              	.LVL52:
 220:u8g/u8g_font.c **** 
 580              		.loc 1 220 0
 581 0024 012A     		cmp	r2, #1
 582 0026 A0EB0101 		sub	r1, r0, r1
 583 002a 14BF     		ite	ne
 584 002c FF26     		movne	r6, #255
 585 002e 0F26     		moveq	r6, #15
 586              	.LVL53:
 222:u8g/u8g_font.c **** 
 587              		.loc 1 222 0
 588 0030 0022     		movs	r2, #0
 589              	.LVL54:
 590 0032 C9B2     		uxtb	r1, r1
 591 0034 04F11100 		add	r0, r4, #17
 592              	.LVL55:
 593 0038 07E0     		b	.L42
 594              	.LVL56:
 595              	.L39:
 233:u8g/u8g_font.c ****       p += data_structure_size;
 596              		.loc 1 233 0
 597 003a 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 236:u8g/u8g_font.c ****       break;
 598              		.loc 1 236 0
 599 003c 8A42     		cmp	r2, r1
 233:u8g/u8g_font.c ****       p += data_structure_size;
 600              		.loc 1 233 0
 601 003e 03EA0603 		and	r3, r3, r6
 602 0042 2B44     		add	r3, r3, r5
 234:u8g/u8g_font.c ****     }
 603              		.loc 1 234 0
 604 0044 1844     		add	r0, r0, r3
 605              	.LVL57:
 236:u8g/u8g_font.c ****       break;
 606              		.loc 1 236 0
 607 0046 07D0     		beq	.L41
 608              	.L46:
 609 0048 0132     		adds	r2, r2, #1
 610              	.L42:
 611              	.LVL58:
 227:u8g/u8g_font.c ****     {
 612              		.loc 1 227 0
 613 004a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 614 004c FF2B     		cmp	r3, #255
 615 004e F4D1     		bne	.L39
 236:u8g/u8g_font.c ****       break;
 616              		.loc 1 236 0
 617 0050 8A42     		cmp	r2, r1
 229:u8g/u8g_font.c ****     }
 618              		.loc 1 229 0
 619 0052 00F10100 		add	r0, r0, #1
 620              	.LVL59:
 236:u8g/u8g_font.c ****       break;
 621              		.loc 1 236 0
 622 0056 F7D1     		bne	.L46
 623              	.L41:
 242:u8g/u8g_font.c **** 
 624              		.loc 1 242 0
 625 0058 001B     		subs	r0, r0, r4
 626              	.LVL60:
 627 005a 70BD     		pop	{r4, r5, r6, pc}
 628              	.LVL61:
 629              	.L48:
 630              		.align	2
 631              	.L47:
 632 005c 00000000 		.word	u8g_font_GetFormat.isra.0
 633 0060 00000000 		.word	u8g_font_GetFontGlyphStructureSize.isra.1
 634 0064 00000000 		.word	u8g_font_GetFontStartEncoding
 635 0068 00000000 		.word	u8g_font_GetFontEndEncoding
 636              		.cfi_endproc
 637              	.LFE19:
 639              		.section	.text.u8g_GetFontBBXWidth,"ax",%progbits
 640              		.align	1
 641              		.p2align 2,,3
 642              		.global	u8g_GetFontBBXWidth
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 646              		.fpu softvfp
 648              	u8g_GetFontBBXWidth:
 649              	.LFB20:
 248:u8g/u8g_font.c ****   return u8g_font_GetBBXWidth(u8g->font);
 650              		.loc 1 248 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655              	.LVL62:
 656              	.LBB115:
 657              	.LBB116:
 658              	.LBB117:
  91:u8g/u8g_font.c **** }
 659              		.loc 1 91 0
 660 0000 8368     		ldr	r3, [r0, #8]
 661              	.LBE117:
 662              	.LBE116:
 663              	.LBE115:
 250:u8g/u8g_font.c **** 
 664              		.loc 1 250 0
 665 0002 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 666              	.LVL63:
 667 0004 7047     		bx	lr
 668              		.cfi_endproc
 669              	.LFE20:
 671 0006 00BF     		.section	.text.u8g_GetFontBBXHeight,"ax",%progbits
 672              		.align	1
 673              		.p2align 2,,3
 674              		.global	u8g_GetFontBBXHeight
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 678              		.fpu softvfp
 680              	u8g_GetFontBBXHeight:
 681              	.LFB21:
 253:u8g/u8g_font.c ****   return u8g_font_GetBBXHeight(u8g->font);
 682              		.loc 1 253 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687              	.LVL64:
 688              	.LBB118:
 689              	.LBB119:
 690              	.LBB120:
  91:u8g/u8g_font.c **** }
 691              		.loc 1 91 0
 692 0000 8368     		ldr	r3, [r0, #8]
 693              	.LBE120:
 694              	.LBE119:
 695              	.LBE118:
 255:u8g/u8g_font.c **** 
 696              		.loc 1 255 0
 697 0002 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 698              	.LVL65:
 699 0004 7047     		bx	lr
 700              		.cfi_endproc
 701              	.LFE21:
 703 0006 00BF     		.section	.text.u8g_GetFontBBXOffX,"ax",%progbits
 704              		.align	1
 705              		.p2align 2,,3
 706              		.global	u8g_GetFontBBXOffX
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu softvfp
 712              	u8g_GetFontBBXOffX:
 713              	.LFB22:
 259:u8g/u8g_font.c ****   return u8g_font_GetBBXOffX(u8g->font);
 714              		.loc 1 259 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719              	.LVL66:
 720              	.LBB121:
 721              	.LBB122:
 722              	.LBB123:
 723              	.LBB124:
  91:u8g/u8g_font.c **** }
 724              		.loc 1 91 0
 725 0000 8368     		ldr	r3, [r0, #8]
 726              	.LBE124:
 727              	.LBE123:
 728              	.LBE122:
 729              	.LBE121:
 261:u8g/u8g_font.c **** 
 730              		.loc 1 261 0
 731 0002 93F90300 		ldrsb	r0, [r3, #3]
 732              	.LVL67:
 733 0006 7047     		bx	lr
 734              		.cfi_endproc
 735              	.LFE22:
 737              		.section	.text.u8g_GetFontBBXOffY,"ax",%progbits
 738              		.align	1
 739              		.p2align 2,,3
 740              		.global	u8g_GetFontBBXOffY
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu softvfp
 746              	u8g_GetFontBBXOffY:
 747              	.LFB23:
 265:u8g/u8g_font.c ****   return u8g_font_GetBBXOffY(u8g->font);
 748              		.loc 1 265 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 753              	.LVL68:
 754              	.LBB125:
 755              	.LBB126:
 756              	.LBB127:
 757              	.LBB128:
  91:u8g/u8g_font.c **** }
 758              		.loc 1 91 0
 759 0000 8368     		ldr	r3, [r0, #8]
 760              	.LBE128:
 761              	.LBE127:
 762              	.LBE126:
 763              	.LBE125:
 267:u8g/u8g_font.c **** 
 764              		.loc 1 267 0
 765 0002 93F90400 		ldrsb	r0, [r3, #4]
 766              	.LVL69:
 767 0006 7047     		bx	lr
 768              		.cfi_endproc
 769              	.LFE23:
 771              		.section	.text.u8g_GetFontCapitalAHeight,"ax",%progbits
 772              		.align	1
 773              		.p2align 2,,3
 774              		.global	u8g_GetFontCapitalAHeight
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu softvfp
 780              	u8g_GetFontCapitalAHeight:
 781              	.LFB24:
 271:u8g/u8g_font.c ****   return u8g_font_GetCapitalAHeight(u8g->font);
 782              		.loc 1 271 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 787              	.LVL70:
 788              	.LBB129:
 789              	.LBB130:
 790              	.LBB131:
  91:u8g/u8g_font.c **** }
 791              		.loc 1 91 0
 792 0000 8368     		ldr	r3, [r0, #8]
 793              	.LBE131:
 794              	.LBE130:
 795              	.LBE129:
 273:u8g/u8g_font.c **** 
 796              		.loc 1 273 0
 797 0002 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 798              	.LVL71:
 799 0004 7047     		bx	lr
 800              		.cfi_endproc
 801              	.LFE24:
 803 0006 00BF     		.section	.text.u8g_GetGlyph,"ax",%progbits
 804              		.align	1
 805              		.p2align 2,,3
 806              		.global	u8g_GetGlyph
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 810              		.fpu softvfp
 812              	u8g_GetGlyph:
 813              	.LFB27:
 351:u8g/u8g_font.c ****   uint8_t *p = (uint8_t *)(u8g->font);
 814              		.loc 1 351 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818              	.LVL72:
 819 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 820              	.LCFI2:
 821              		.cfi_def_cfa_offset 32
 822              		.cfi_offset 4, -32
 823              		.cfi_offset 5, -28
 824              		.cfi_offset 6, -24
 825              		.cfi_offset 7, -20
 826              		.cfi_offset 8, -16
 827              		.cfi_offset 9, -12
 828              		.cfi_offset 10, -8
 829              		.cfi_offset 14, -4
 352:u8g/u8g_font.c ****   uint8_t font_format = u8g_font_GetFormat(u8g->font);
 830              		.loc 1 352 0
 831 0004 D0F808A0 		ldr	r10, [r0, #8]
 353:u8g/u8g_font.c ****   uint8_t data_structure_size = u8g_font_GetFontGlyphStructureSize(u8g->font);
 832              		.loc 1 353 0
 833 0008 3C4A     		ldr	r2, .L84
 834 000a 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 351:u8g/u8g_font.c ****   uint8_t *p = (uint8_t *)(u8g->font);
 835              		.loc 1 351 0
 836 000e 8046     		mov	r8, r0
 837              	.LVL73:
 353:u8g/u8g_font.c ****   uint8_t data_structure_size = u8g_font_GetFontGlyphStructureSize(u8g->font);
 838              		.loc 1 353 0
 839 0010 1846     		mov	r0, r3
 840              	.LVL74:
 351:u8g/u8g_font.c ****   uint8_t *p = (uint8_t *)(u8g->font);
 841              		.loc 1 351 0
 842 0012 0D46     		mov	r5, r1
 353:u8g/u8g_font.c ****   uint8_t data_structure_size = u8g_font_GetFontGlyphStructureSize(u8g->font);
 843              		.loc 1 353 0
 844 0014 9047     		blx	r2
 845              	.LVL75:
 846 0016 0746     		mov	r7, r0
 847              	.LVL76:
 354:u8g/u8g_font.c ****   uint8_t start, end;
 848              		.loc 1 354 0
 849 0018 1846     		mov	r0, r3
 850 001a 394B     		ldr	r3, .L84+4
 851 001c 9847     		blx	r3
 852              	.LVL77:
 361:u8g/u8g_font.c ****   
 853              		.loc 1 361 0
 854 001e 012F     		cmp	r7, #1
 363:u8g/u8g_font.c ****   end = u8g_font_GetFontEndEncoding(u8g->font);
 855              		.loc 1 363 0
 856 0020 384B     		ldr	r3, .L84+8
 354:u8g/u8g_font.c ****   uint8_t start, end;
 857              		.loc 1 354 0
 858 0022 8146     		mov	r9, r0
 859              	.LVL78:
 363:u8g/u8g_font.c ****   end = u8g_font_GetFontEndEncoding(u8g->font);
 860              		.loc 1 363 0
 861 0024 5046     		mov	r0, r10
 361:u8g/u8g_font.c ****   
 862              		.loc 1 361 0
 863 0026 14BF     		ite	ne
 864 0028 FF26     		movne	r6, #255
 865 002a 0F26     		moveq	r6, #15
 866              	.LVL79:
 363:u8g/u8g_font.c ****   end = u8g_font_GetFontEndEncoding(u8g->font);
 867              		.loc 1 363 0
 868 002c 9847     		blx	r3
 869              	.LVL80:
 364:u8g/u8g_font.c **** 
 870              		.loc 1 364 0
 871 002e 364B     		ldr	r3, .L84+12
 363:u8g/u8g_font.c ****   end = u8g_font_GetFontEndEncoding(u8g->font);
 872              		.loc 1 363 0
 873 0030 0246     		mov	r2, r0
 874              	.LVL81:
 364:u8g/u8g_font.c **** 
 875              		.loc 1 364 0
 876 0032 5046     		mov	r0, r10
 877 0034 9847     		blx	r3
 878              	.LVL82:
 366:u8g/u8g_font.c ****   if ( requested_encoding >= 97 && pos > 0 )
 879              		.loc 1 366 0
 880 0036 354B     		ldr	r3, .L84+16
 364:u8g/u8g_font.c **** 
 881              		.loc 1 364 0
 882 0038 0446     		mov	r4, r0
 883              	.LVL83:
 366:u8g/u8g_font.c ****   if ( requested_encoding >= 97 && pos > 0 )
 884              		.loc 1 366 0
 885 003a 5046     		mov	r0, r10
 886 003c 9847     		blx	r3
 887              	.LVL84:
 367:u8g/u8g_font.c ****   {
 888              		.loc 1 367 0
 889 003e 602D     		cmp	r5, #96
 890 0040 03D9     		bls	.L56
 367:u8g/u8g_font.c ****   {
 891              		.loc 1 367 0 is_stmt 0 discriminator 1
 892 0042 50B3     		cbz	r0, .L57
 369:u8g/u8g_font.c ****     start = 97;
 893              		.loc 1 369 0 is_stmt 1
 894 0044 5044     		add	r0, r0, r10
 895              	.LVL85:
 370:u8g/u8g_font.c ****   }
 896              		.loc 1 370 0
 897 0046 6122     		movs	r2, #97
 898 0048 06E0     		b	.L58
 899              	.LVL86:
 900              	.L56:
 374:u8g/u8g_font.c ****     if ( requested_encoding >= 65 && pos > 0 )
 901              		.loc 1 374 0
 902 004a 5046     		mov	r0, r10
 903              	.LVL87:
 904 004c 304B     		ldr	r3, .L84+20
 905 004e 9847     		blx	r3
 906              	.LVL88:
 375:u8g/u8g_font.c ****     {
 907              		.loc 1 375 0
 908 0050 402D     		cmp	r5, #64
 909 0052 25D8     		bhi	.L69
 910              	.L59:
 381:u8g/u8g_font.c ****   }
 911              		.loc 1 381 0
 912 0054 0AF11100 		add	r0, r10, #17
 913              	.LVL89:
 914              	.L58:
 384:u8g/u8g_font.c ****   {
 915              		.loc 1 384 0
 916 0058 AC42     		cmp	r4, r5
 917 005a 17D3     		bcc	.L62
 918              	.LVL90:
 391:u8g/u8g_font.c ****   {
 919              		.loc 1 391 0
 920 005c A242     		cmp	r2, r4
 921 005e 0CD9     		bls	.L68
 922 0060 14E0     		b	.L62
 923              	.LVL91:
 924              	.L63:
 401:u8g/u8g_font.c ****         {
 925              		.loc 1 401 0
 926 0062 AA42     		cmp	r2, r5
 927 0064 21D0     		beq	.L82
 406:u8g/u8g_font.c ****         p += data_structure_size;
 928              		.loc 1 406 0
 929 0066 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 409:u8g/u8g_font.c ****         break;
 930              		.loc 1 409 0
 931 0068 A242     		cmp	r2, r4
 406:u8g/u8g_font.c ****         p += data_structure_size;
 932              		.loc 1 406 0
 933 006a 03EA0603 		and	r3, r3, r6
 934 006e 4B44     		add	r3, r3, r9
 407:u8g/u8g_font.c ****       }
 935              		.loc 1 407 0
 936 0070 1844     		add	r0, r0, r3
 937              	.LVL92:
 411:u8g/u8g_font.c ****     }
 938              		.loc 1 411 0
 939 0072 02F10102 		add	r2, r2, #1
 940              	.LVL93:
 409:u8g/u8g_font.c ****         break;
 941              		.loc 1 409 0
 942 0076 09D0     		beq	.L62
 943              	.L83:
 411:u8g/u8g_font.c ****     }
 944              		.loc 1 411 0
 945 0078 D2B2     		uxtb	r2, r2
 946              	.LVL94:
 947              	.L68:
 395:u8g/u8g_font.c ****       {
 948              		.loc 1 395 0
 949 007a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 950 007c FF2B     		cmp	r3, #255
 951 007e F0D1     		bne	.L63
 409:u8g/u8g_font.c ****         break;
 952              		.loc 1 409 0
 953 0080 A242     		cmp	r2, r4
 397:u8g/u8g_font.c ****       }
 954              		.loc 1 397 0
 955 0082 00F10100 		add	r0, r0, #1
 956              	.LVL95:
 411:u8g/u8g_font.c ****     }
 957              		.loc 1 411 0
 958 0086 02F10102 		add	r2, r2, #1
 959              	.LVL96:
 409:u8g/u8g_font.c ****         break;
 960              		.loc 1 409 0
 961 008a F5D1     		bne	.L83
 962              	.L62:
 963              	.LVL97:
 964              	.LBB138:
 965              	.LBB139:
 339:u8g/u8g_font.c ****   u8g->glyph_width = 0;
 966              		.loc 1 339 0
 967 008c 0020     		movs	r0, #0
 968              	.LVL98:
 969 008e C8F81C00 		str	r0, [r8, #28]
 340:u8g/u8g_font.c ****   u8g->glyph_height = 0;
 970              		.loc 1 340 0
 971 0092 88F82000 		strb	r0, [r8, #32]
 972              	.LVL99:
 973              	.LBE139:
 974              	.LBE138:
 418:u8g/u8g_font.c **** 
 975              		.loc 1 418 0
 976 0096 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 977              	.LVL100:
 978              	.L57:
 374:u8g/u8g_font.c ****     if ( requested_encoding >= 65 && pos > 0 )
 979              		.loc 1 374 0
 980 009a 5046     		mov	r0, r10
 981              	.LVL101:
 982 009c 1C4B     		ldr	r3, .L84+20
 983 009e 9847     		blx	r3
 984              	.LVL102:
 985              	.L69:
 375:u8g/u8g_font.c ****     {
 986              		.loc 1 375 0 discriminator 1
 987 00a0 0028     		cmp	r0, #0
 988 00a2 D7D0     		beq	.L59
 377:u8g/u8g_font.c ****       start = 65;
 989              		.loc 1 377 0
 990 00a4 5044     		add	r0, r0, r10
 991              	.LVL103:
 378:u8g/u8g_font.c ****     }
 992              		.loc 1 378 0
 993 00a6 4122     		movs	r2, #65
 994 00a8 D6E7     		b	.L58
 995              	.LVL104:
 996              	.L82:
 997              	.LBB140:
 998              	.LBB141:
 281:u8g/u8g_font.c ****   {
 999              		.loc 1 281 0
 1000 00aa BFB1     		cbz	r7, .L67
 1001 00ac 022F     		cmp	r7, #2
 1002 00ae 15D0     		beq	.L67
 1003              	.LVL105:
 317:u8g/u8g_font.c ****       u8g->glyph_y-=2;
 1004              		.loc 1 317 0
 1005 00b0 03F00F02 		and	r2, r3, #15
 1006              	.LVL106:
 318:u8g/u8g_font.c ****       tmp >>= 4;
 1007              		.loc 1 318 0
 1008 00b4 023A     		subs	r2, r2, #2
 319:u8g/u8g_font.c ****       u8g->glyph_x =  tmp;
 1009              		.loc 1 319 0
 1010 00b6 1B09     		lsrs	r3, r3, #4
 1011              	.LVL107:
 318:u8g/u8g_font.c ****       tmp >>= 4;
 1012              		.loc 1 318 0
 1013 00b8 88F81E20 		strb	r2, [r8, #30]
 1014              	.LVL108:
 320:u8g/u8g_font.c ****     
 1015              		.loc 1 320 0
 1016 00bc 88F81D30 		strb	r3, [r8, #29]
 322:u8g/u8g_font.c ****       u8g->glyph_height =  tmp & 15;
 1017              		.loc 1 322 0
 1018 00c0 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1019              	.LVL109:
 323:u8g/u8g_font.c ****       tmp >>= 4;
 1020              		.loc 1 323 0
 1021 00c2 03F00F02 		and	r2, r3, #15
 324:u8g/u8g_font.c ****       u8g->glyph_width =  tmp;
 1022              		.loc 1 324 0
 1023 00c6 1B09     		lsrs	r3, r3, #4
 1024              	.LVL110:
 323:u8g/u8g_font.c ****       tmp >>= 4;
 1025              		.loc 1 323 0
 1026 00c8 88F82020 		strb	r2, [r8, #32]
 1027              	.LVL111:
 325:u8g/u8g_font.c ****       
 1028              		.loc 1 325 0
 1029 00cc 88F81F30 		strb	r3, [r8, #31]
 327:u8g/u8g_font.c ****       tmp >>= 4;
 1030              		.loc 1 327 0
 1031 00d0 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1032              	.LVL112:
 328:u8g/u8g_font.c ****       u8g->glyph_dx = tmp;
 1033              		.loc 1 328 0
 1034 00d2 1B09     		lsrs	r3, r3, #4
 1035              	.LVL113:
 329:u8g/u8g_font.c ****     
 1036              		.loc 1 329 0
 1037 00d4 88F81C30 		strb	r3, [r8, #28]
 1038              	.LVL114:
 1039              	.LBE141:
 1040              	.LBE140:
 418:u8g/u8g_font.c **** 
 1041              		.loc 1 418 0
 1042 00d8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1043              	.LVL115:
 1044              	.L67:
 1045              	.LBB143:
 1046              	.LBB142:
 297:u8g/u8g_font.c ****       u8g->glyph_height =  u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 1 );
 1047              		.loc 1 297 0
 1048 00dc 88F81F30 		strb	r3, [r8, #31]
 1049              	.LVL116:
 298:u8g/u8g_font.c ****       u8g->glyph_dx =  u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 3 );
 1050              		.loc 1 298 0
 1051 00e0 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1052 00e2 88F82030 		strb	r3, [r8, #32]
 299:u8g/u8g_font.c ****       u8g->glyph_x =  u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 4 );
 1053              		.loc 1 299 0
 1054 00e6 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1055 00e8 88F81C30 		strb	r3, [r8, #28]
 300:u8g/u8g_font.c ****       u8g->glyph_y =  u8g_pgm_read( ((u8g_pgm_uint8_t *)g) + 5 );
 1056              		.loc 1 300 0
 1057 00ec 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1058 00ee 88F81D30 		strb	r3, [r8, #29]
 301:u8g/u8g_font.c ****       break;
 1059              		.loc 1 301 0
 1060 00f2 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 1061 00f4 88F81E30 		strb	r3, [r8, #30]
 1062              	.LBE142:
 1063              	.LBE143:
 418:u8g/u8g_font.c **** 
 1064              		.loc 1 418 0
 1065 00f8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1066              	.LVL117:
 1067              	.L85:
 1068              		.align	2
 1069              	.L84:
 1070 00fc 00000000 		.word	u8g_font_GetFormat.isra.0
 1071 0100 00000000 		.word	u8g_font_GetFontGlyphStructureSize.isra.1
 1072 0104 00000000 		.word	u8g_font_GetFontStartEncoding
 1073 0108 00000000 		.word	u8g_font_GetFontEndEncoding
 1074 010c 00000000 		.word	u8g_font_GetEncoding97Pos
 1075 0110 00000000 		.word	u8g_font_GetEncoding65Pos
 1076              		.cfi_endproc
 1077              	.LFE27:
 1079              		.section	.text.u8g_font_calc_str_min_box.part.2,"ax",%progbits
 1080              		.align	1
 1081              		.p2align 2,,3
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1085              		.fpu softvfp
 1087              	u8g_font_calc_str_min_box.part.2:
 1088              	.LFB84:
1098:u8g/u8g_font.c **** 
1099:u8g/u8g_font.c **** char u8g_font_get_charP(const void *s)
1100:u8g/u8g_font.c **** {
1101:u8g/u8g_font.c ****   return u8g_pgm_read(s);
1102:u8g/u8g_font.c **** }
1103:u8g/u8g_font.c **** 
1104:u8g/u8g_font.c **** typedef char (*u8g_font_get_char_fn)(const void *s);
1105:u8g/u8g_font.c **** 
1106:u8g/u8g_font.c **** 
1107:u8g/u8g_font.c **** u8g_uint_t u8g_font_calc_str_pixel_width(u8g_t *u8g, const char *s, u8g_font_get_char_fn get_char )
1108:u8g/u8g_font.c **** {
1109:u8g/u8g_font.c ****   u8g_uint_t  w;
1110:u8g/u8g_font.c ****   uint8_t enc;
1111:u8g/u8g_font.c ****   
1112:u8g/u8g_font.c ****   /* reset the total minimal width to zero, this will be expanded during calculation */
1113:u8g/u8g_font.c ****   w = 0;
1114:u8g/u8g_font.c ****     
1115:u8g/u8g_font.c ****   enc = get_char(s);
1116:u8g/u8g_font.c ****   
1117:u8g/u8g_font.c ****   /* check for empty string, width is already 0 */
1118:u8g/u8g_font.c ****   if ( enc == '\0' )
1119:u8g/u8g_font.c ****   {
1120:u8g/u8g_font.c ****     return w;
1121:u8g/u8g_font.c ****   }
1122:u8g/u8g_font.c ****   
1123:u8g/u8g_font.c ****   /* get the glyph information of the first char. This must be valid, because we already checked fo
1124:u8g/u8g_font.c ****   /* if *s is not inside the font, then the cached parameters of the glyph are all zero */
1125:u8g/u8g_font.c ****   u8g_GetGlyph(u8g, enc);
1126:u8g/u8g_font.c **** 
1127:u8g/u8g_font.c ****   /* strlen(s) == 1:       width = width(s[0]) */
1128:u8g/u8g_font.c ****   /* strlen(s) == 2:       width = - offx(s[0]) + deltax(s[0]) + offx(s[1]) + width(s[1]) */
1129:u8g/u8g_font.c ****   /* strlen(s) == 3:       width = - offx(s[0]) + deltax(s[0]) + deltax(s[1]) + offx(s[2]) + width(
1130:u8g/u8g_font.c ****   
1131:u8g/u8g_font.c ****   /* assume that the string has size 2 or more, than start with negative offset-x */
1132:u8g/u8g_font.c ****   /* for string with size 1, this will be nullified after the loop */
1133:u8g/u8g_font.c ****   w = -u8g->glyph_x;  
1134:u8g/u8g_font.c ****   for(;;)
1135:u8g/u8g_font.c ****   {
1136:u8g/u8g_font.c ****     
1137:u8g/u8g_font.c ****     /* check and stop if the end of the string is reached */
1138:u8g/u8g_font.c ****     s++;
1139:u8g/u8g_font.c ****     if ( get_char(s) == '\0' )
1140:u8g/u8g_font.c ****       break;
1141:u8g/u8g_font.c ****     
1142:u8g/u8g_font.c ****     /* if there are still more characters, add the delta to the next glyph */
1143:u8g/u8g_font.c ****     w += u8g->glyph_dx;
1144:u8g/u8g_font.c ****     
1145:u8g/u8g_font.c ****     /* store the encoding in a local variable, used also after the for(;;) loop */
1146:u8g/u8g_font.c ****     enc = get_char(s);
1147:u8g/u8g_font.c ****     
1148:u8g/u8g_font.c ****     /* load the next glyph information */
1149:u8g/u8g_font.c ****     u8g_GetGlyph(u8g, enc);
1150:u8g/u8g_font.c ****   }
1151:u8g/u8g_font.c ****   
1152:u8g/u8g_font.c ****   /* finally calculate the width of the last char */
1153:u8g/u8g_font.c ****   /* here is another exception, if the last char is a black, use the dx value instead */
1154:u8g/u8g_font.c ****   if ( enc != ' ' )
1155:u8g/u8g_font.c ****   {
1156:u8g/u8g_font.c ****     /* if g was not updated in the for loop (strlen() == 1), then the initial offset x gets removed
1157:u8g/u8g_font.c ****     w += u8g->glyph_width;
1158:u8g/u8g_font.c ****     w += u8g->glyph_x;
1159:u8g/u8g_font.c ****   }
1160:u8g/u8g_font.c ****   else
1161:u8g/u8g_font.c ****   {
1162:u8g/u8g_font.c ****     w += u8g->glyph_dx;
1163:u8g/u8g_font.c ****   }
1164:u8g/u8g_font.c ****   
1165:u8g/u8g_font.c ****   
1166:u8g/u8g_font.c ****   return w;
1167:u8g/u8g_font.c **** }
1168:u8g/u8g_font.c **** 
1169:u8g/u8g_font.c **** u8g_uint_t u8g_GetStrPixelWidth(u8g_t *u8g, const char *s)
1170:u8g/u8g_font.c **** {
1171:u8g/u8g_font.c ****   return u8g_font_calc_str_pixel_width(u8g, s, u8g_font_get_char);
1172:u8g/u8g_font.c **** }
1173:u8g/u8g_font.c **** 
1174:u8g/u8g_font.c **** u8g_uint_t u8g_GetStrPixelWidthP(u8g_t *u8g, const u8g_pgm_uint8_t *s)
1175:u8g/u8g_font.c **** {
1176:u8g/u8g_font.c ****   return u8g_font_calc_str_pixel_width(u8g, (const char *)s, u8g_font_get_charP);
1177:u8g/u8g_font.c **** }
1178:u8g/u8g_font.c **** 
1179:u8g/u8g_font.c **** int8_t u8g_GetStrX(u8g_t *u8g, const char *s)
1180:u8g/u8g_font.c **** {
1181:u8g/u8g_font.c ****   u8g_GetGlyph(u8g, *s);
1182:u8g/u8g_font.c ****   return u8g->glyph_x;  
1183:u8g/u8g_font.c **** }
1184:u8g/u8g_font.c **** 
1185:u8g/u8g_font.c **** int8_t u8g_GetStrXP(u8g_t *u8g, const u8g_pgm_uint8_t *s)
1186:u8g/u8g_font.c **** {
1187:u8g/u8g_font.c ****   u8g_GetGlyph(u8g, u8g_pgm_read(s));
1188:u8g/u8g_font.c ****   return u8g->glyph_x;  
1189:u8g/u8g_font.c **** }
1190:u8g/u8g_font.c **** 
1191:u8g/u8g_font.c **** /*========================================================================*/
1192:u8g/u8g_font.c **** /* string width calculation */
1193:u8g/u8g_font.c **** 
1194:u8g/u8g_font.c **** u8g_uint_t u8g_GetStrWidth(u8g_t *u8g, const char *s)
1195:u8g/u8g_font.c **** {
1196:u8g/u8g_font.c ****   u8g_uint_t  w;
1197:u8g/u8g_font.c ****   uint8_t encoding;
1198:u8g/u8g_font.c ****   
1199:u8g/u8g_font.c ****   /* reset the total width to zero, this will be expanded during calculation */
1200:u8g/u8g_font.c ****   w = 0;
1201:u8g/u8g_font.c ****   
1202:u8g/u8g_font.c ****   for(;;)
1203:u8g/u8g_font.c ****   {
1204:u8g/u8g_font.c ****     encoding = *s;
1205:u8g/u8g_font.c ****     if ( encoding == 0 )
1206:u8g/u8g_font.c ****       break;
1207:u8g/u8g_font.c **** 
1208:u8g/u8g_font.c ****     /* load glyph information */
1209:u8g/u8g_font.c ****     u8g_GetGlyph(u8g, encoding);
1210:u8g/u8g_font.c ****     w += u8g->glyph_dx;    
1211:u8g/u8g_font.c ****     
1212:u8g/u8g_font.c ****     /* goto next char */
1213:u8g/u8g_font.c ****     s++;
1214:u8g/u8g_font.c ****   }
1215:u8g/u8g_font.c ****   
1216:u8g/u8g_font.c ****   return w;  
1217:u8g/u8g_font.c **** }
1218:u8g/u8g_font.c **** 
1219:u8g/u8g_font.c **** 
1220:u8g/u8g_font.c **** u8g_uint_t u8g_GetStrWidthP(u8g_t *u8g, const u8g_pgm_uint8_t *s)
1221:u8g/u8g_font.c **** {
1222:u8g/u8g_font.c ****   u8g_uint_t  w;
1223:u8g/u8g_font.c ****   uint8_t encoding;
1224:u8g/u8g_font.c ****   
1225:u8g/u8g_font.c ****   /* reset the total width to zero, this will be expanded during calculation */
1226:u8g/u8g_font.c ****   w = 0;
1227:u8g/u8g_font.c ****   
1228:u8g/u8g_font.c ****   for(;;)
1229:u8g/u8g_font.c ****   {
1230:u8g/u8g_font.c ****     encoding = u8g_pgm_read(s);
1231:u8g/u8g_font.c ****     if ( encoding == 0 )
1232:u8g/u8g_font.c ****       break;
1233:u8g/u8g_font.c **** 
1234:u8g/u8g_font.c ****     /* load glyph information */
1235:u8g/u8g_font.c ****     u8g_GetGlyph(u8g, encoding);
1236:u8g/u8g_font.c ****     w += u8g->glyph_dx;    
1237:u8g/u8g_font.c ****     
1238:u8g/u8g_font.c ****     /* goto next char */
1239:u8g/u8g_font.c ****     s++;
1240:u8g/u8g_font.c ****   }
1241:u8g/u8g_font.c ****   
1242:u8g/u8g_font.c ****   return w;  
1243:u8g/u8g_font.c **** }
1244:u8g/u8g_font.c **** 
1245:u8g/u8g_font.c **** 
1246:u8g/u8g_font.c **** /*========================================================================*/
1247:u8g/u8g_font.c **** /* calculation of font/glyph/string characteristics */
1248:u8g/u8g_font.c **** 
1249:u8g/u8g_font.c **** 
1250:u8g/u8g_font.c **** /*
1251:u8g/u8g_font.c ****   Description:
1252:u8g/u8g_font.c ****     Calculate parameter for the minimal bounding box on a given string
1253:u8g/u8g_font.c ****   Output
1254:u8g/u8g_font.c ****     buf->y_min          extend of the lower left edge if the string below (y_min<0) or above (y_min
1255:u8g/u8g_font.c ****     buf->y_max          extend of the upper left edge if the string below (y_min<0) or above (y_min
1256:u8g/u8g_font.c ****     buf->w                 the width of the string
1257:u8g/u8g_font.c **** */
1258:u8g/u8g_font.c **** struct u8g_str_size_struct
1259:u8g/u8g_font.c **** {
1260:u8g/u8g_font.c ****   int8_t y_min;         /* descent */
1261:u8g/u8g_font.c ****   int8_t y_max;         /* ascent */
1262:u8g/u8g_font.c ****   int8_t x, y;             /* the reference point of the font (negated!) */
1263:u8g/u8g_font.c ****   u8g_uint_t w;         /* width of the overall string */
1264:u8g/u8g_font.c **** };
1265:u8g/u8g_font.c **** typedef struct u8g_str_size_struct u8g_str_size_t;
1266:u8g/u8g_font.c **** 
1267:u8g/u8g_font.c **** static void u8g_font_calc_str_min_box(u8g_t *u8g, const char *s, u8g_str_size_t *buf)
 1089              		.loc 1 1267 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              	.LVL118:
 1094 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1095              	.LCFI3:
 1096              		.cfi_def_cfa_offset 24
 1097              		.cfi_offset 3, -24
 1098              		.cfi_offset 4, -20
 1099              		.cfi_offset 5, -16
 1100              		.cfi_offset 6, -12
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 1103              		.loc 1 1267 0
 1104 0002 1446     		mov	r4, r2
1268:u8g/u8g_font.c **** {
1269:u8g/u8g_font.c ****   /* u8g_glyph_t g; */
1270:u8g/u8g_font.c ****   int8_t tmp;
1271:u8g/u8g_font.c ****   
1272:u8g/u8g_font.c ****   /* reset the total minimal width to zero, this will be expanded during calculation */
1273:u8g/u8g_font.c ****   buf->w = 0;
1274:u8g/u8g_font.c ****     
1275:u8g/u8g_font.c ****   /* check for empty string, width is already 0, but also reset y_min and y_max to 0 */
1276:u8g/u8g_font.c ****   if ( *s == '\0' )
1277:u8g/u8g_font.c ****   {
1278:u8g/u8g_font.c ****     buf->y_min = 0;
1279:u8g/u8g_font.c ****     buf->y_max = 0;
1280:u8g/u8g_font.c ****     buf->x = 0;
1281:u8g/u8g_font.c ****     buf->y = 0;
1282:u8g/u8g_font.c ****     return;
1283:u8g/u8g_font.c ****   }
1284:u8g/u8g_font.c ****   
1285:u8g/u8g_font.c ****   /* reset y_min to the largest possible value. Later we search for the smallest value */
1286:u8g/u8g_font.c ****   /* y_min contains the position [pixel] of the lower left edge of the glyph above (y_min>0) or bel
1287:u8g/u8g_font.c ****   buf->y_min = 127;
1288:u8g/u8g_font.c ****   /* reset y_max to the smallest possible value. Later we search for the highest value */
1289:u8g/u8g_font.c ****   /* y_max contains the position [pixel] of the upper left edge of the glyph above (y_max>0) or bel
1290:u8g/u8g_font.c ****   buf->y_max = -128;
 1105              		.loc 1 1290 0
 1106 0004 8023     		movs	r3, #128
1287:u8g/u8g_font.c ****   /* reset y_max to the smallest possible value. Later we search for the highest value */
 1107              		.loc 1 1287 0
 1108 0006 7F22     		movs	r2, #127
 1109              	.LVL119:
1291:u8g/u8g_font.c **** 
1292:u8g/u8g_font.c ****   /* get the glyph information of the first char. This must be valid, because we already checked fo
1293:u8g/u8g_font.c ****   u8g_GetGlyph(u8g, *s);
 1110              		.loc 1 1293 0
 1111 0008 0D46     		mov	r5, r1
1267:u8g/u8g_font.c **** {
 1112              		.loc 1 1267 0
 1113 000a 0646     		mov	r6, r0
1287:u8g/u8g_font.c ****   /* reset y_max to the smallest possible value. Later we search for the highest value */
 1114              		.loc 1 1287 0
 1115 000c 2270     		strb	r2, [r4]
1290:u8g/u8g_font.c **** 
 1116              		.loc 1 1290 0
 1117 000e 6370     		strb	r3, [r4, #1]
 1118              		.loc 1 1293 0
 1119 0010 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 1120              	.LVL120:
 1121 0014 174F     		ldr	r7, .L93
 1122 0016 B847     		blx	r7
 1123              	.LVL121:
1294:u8g/u8g_font.c **** 
1295:u8g/u8g_font.c ****   /* strlen(s) == 1:       width = width(s[0]) */
1296:u8g/u8g_font.c ****   /* strlen(s) == 2:       width = - offx(s[0]) + deltax(s[0]) + offx(s[1]) + width(s[1]) */
1297:u8g/u8g_font.c ****   /* strlen(s) == 3:       width = - offx(s[0]) + deltax(s[0]) + deltax(s[1]) + offx(s[2]) + width(
1298:u8g/u8g_font.c ****   
1299:u8g/u8g_font.c ****   /* assume that the string has size 2 or more, than start with negative offset-x */
1300:u8g/u8g_font.c ****   /* for string with size 1, this will be nullified after the loop */
1301:u8g/u8g_font.c ****   // buf->w = - u8g_font_GetGlyphBBXOffX(u8g->font, g);
1302:u8g/u8g_font.c ****   buf->w = - u8g->glyph_x;
 1124              		.loc 1 1302 0
 1125 0018 96F91D20 		ldrsb	r2, [r6, #29]
 1126 001c 5342     		negs	r3, r2
 1127 001e D9B2     		uxtb	r1, r3
1303:u8g/u8g_font.c ****   
1304:u8g/u8g_font.c ****   /* Also copy the position of the first glyph. This is the reference point of the string (negated)
1305:u8g/u8g_font.c ****   buf->x = u8g->glyph_x;
 1128              		.loc 1 1305 0
 1129 0020 A270     		strb	r2, [r4, #2]
1302:u8g/u8g_font.c ****   
 1130              		.loc 1 1302 0
 1131 0022 2171     		strb	r1, [r4, #4]
1306:u8g/u8g_font.c ****   buf->y = u8g->glyph_y;
 1132              		.loc 1 1306 0
 1133 0024 96F91E20 		ldrsb	r2, [r6, #30]
 1134 0028 E270     		strb	r2, [r4, #3]
 1135 002a 09E0     		b	.L90
 1136              	.LVL122:
 1137              	.L92:
1307:u8g/u8g_font.c ****   
1308:u8g/u8g_font.c ****   for(;;)
1309:u8g/u8g_font.c ****   {
1310:u8g/u8g_font.c ****     
1311:u8g/u8g_font.c ****     /* calculated y position of the upper left corner (y_max) and lower left corner (y_min) of the 
1312:u8g/u8g_font.c ****     /* relative to the base line */
1313:u8g/u8g_font.c ****     
1314:u8g/u8g_font.c ****     tmp = u8g->glyph_y;
1315:u8g/u8g_font.c ****     if ( buf->y_min > tmp )
1316:u8g/u8g_font.c ****       buf->y_min = tmp;
1317:u8g/u8g_font.c ****     
1318:u8g/u8g_font.c ****     tmp +=u8g->glyph_height;
1319:u8g/u8g_font.c ****     if ( buf->y_max < tmp )
1320:u8g/u8g_font.c ****       buf->y_max = tmp;
1321:u8g/u8g_font.c ****     
1322:u8g/u8g_font.c ****     /* check and stop if the end of the string is reached */
1323:u8g/u8g_font.c ****     s++;
1324:u8g/u8g_font.c ****     if ( *s == '\0' )
1325:u8g/u8g_font.c ****       break;
1326:u8g/u8g_font.c ****     
1327:u8g/u8g_font.c ****     /* if there are still more characters, add the delta to the next glyph */
1328:u8g/u8g_font.c ****     buf->w += u8g->glyph_dx;
 1138              		.loc 1 1328 0
 1139 002c 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
1329:u8g/u8g_font.c ****     
1330:u8g/u8g_font.c ****     /* load the next glyph information */
1331:u8g/u8g_font.c ****     u8g_GetGlyph(u8g, *s);
 1140              		.loc 1 1331 0
 1141 002e 3046     		mov	r0, r6
1328:u8g/u8g_font.c ****     
 1142              		.loc 1 1328 0
 1143 0030 0B44     		add	r3, r3, r1
 1144 0032 2371     		strb	r3, [r4, #4]
 1145              		.loc 1 1331 0
 1146 0034 9CF80010 		ldrb	r1, [ip]	@ zero_extendqisi2
 1147 0038 B847     		blx	r7
 1148              	.LVL123:
 1149 003a 96F91E20 		ldrsb	r2, [r6, #30]
 1150 003e 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 1151              	.LVL124:
 1152              	.L90:
1315:u8g/u8g_font.c ****       buf->y_min = tmp;
 1153              		.loc 1 1315 0
 1154 0040 94F90030 		ldrsb	r3, [r4]
1319:u8g/u8g_font.c ****       buf->y_max = tmp;
 1155              		.loc 1 1319 0
 1156 0044 94F90100 		ldrsb	r0, [r4, #1]
1315:u8g/u8g_font.c ****       buf->y_min = tmp;
 1157              		.loc 1 1315 0
 1158 0048 9342     		cmp	r3, r2
1316:u8g/u8g_font.c ****     
 1159              		.loc 1 1316 0
 1160 004a C8BF     		it	gt
 1161 004c 2270     		strbgt	r2, [r4]
1318:u8g/u8g_font.c ****     if ( buf->y_max < tmp )
 1162              		.loc 1 1318 0
 1163 004e 96F82030 		ldrb	r3, [r6, #32]	@ zero_extendqisi2
 1164 0052 AC46     		mov	ip, r5
 1165 0054 1344     		add	r3, r3, r2
 1166 0056 5BB2     		sxtb	r3, r3
 1167              	.LVL125:
1319:u8g/u8g_font.c ****       buf->y_max = tmp;
 1168              		.loc 1 1319 0
 1169 0058 9842     		cmp	r0, r3
1320:u8g/u8g_font.c ****     
 1170              		.loc 1 1320 0
 1171 005a B8BF     		it	lt
 1172 005c 6370     		strblt	r3, [r4, #1]
1324:u8g/u8g_font.c ****       break;
 1173              		.loc 1 1324 0
 1174 005e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1175              	.LVL126:
 1176 0060 0135     		adds	r5, r5, #1
 1177              	.LVL127:
 1178 0062 002B     		cmp	r3, #0
 1179 0064 E2D1     		bne	.L92
1332:u8g/u8g_font.c ****   }
1333:u8g/u8g_font.c ****   
1334:u8g/u8g_font.c ****   /* finally calculate the width of the last char */
1335:u8g/u8g_font.c ****   /* if g was not updated in the for loop (strlen() == 1), then the initial offset x gets removed *
1336:u8g/u8g_font.c ****   buf->w += u8g->glyph_width;
1337:u8g/u8g_font.c ****   // buf->w += u8g_font_GetGlyphBBXOffX(u8g->font, g);
1338:u8g/u8g_font.c ****   
1339:u8g/u8g_font.c ****   buf->w += u8g->glyph_x;
 1180              		.loc 1 1339 0
 1181 0066 F37F     		ldrb	r3, [r6, #31]	@ zero_extendqisi2
 1182 0068 727F     		ldrb	r2, [r6, #29]	@ zero_extendqisi2
 1183 006a 1344     		add	r3, r3, r2
 1184 006c 0B44     		add	r3, r3, r1
 1185 006e 2371     		strb	r3, [r4, #4]
1340:u8g/u8g_font.c **** }
 1186              		.loc 1 1340 0
 1187 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1188              	.LVL128:
 1189              	.L94:
 1190 0072 00BF     		.align	2
 1191              	.L93:
 1192 0074 00000000 		.word	u8g_GetGlyph
 1193              		.cfi_endproc
 1194              	.LFE84:
 1196              		.section	.text.u8g_IsGlyph,"ax",%progbits
 1197              		.align	1
 1198              		.p2align 2,,3
 1199              		.global	u8g_IsGlyph
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1203              		.fpu softvfp
 1205              	u8g_IsGlyph:
 1206              	.LFB28:
 421:u8g/u8g_font.c ****   if ( u8g_GetGlyph(u8g, requested_encoding) != NULL )
 1207              		.loc 1 421 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 0
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211              	.LVL129:
 1212 0000 08B5     		push	{r3, lr}
 1213              	.LCFI4:
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 3, -8
 1216              		.cfi_offset 14, -4
 422:u8g/u8g_font.c ****     return 1;
 1217              		.loc 1 422 0
 1218 0002 034B     		ldr	r3, .L97
 1219 0004 9847     		blx	r3
 1220              	.LVL130:
 425:u8g/u8g_font.c **** 
 1221              		.loc 1 425 0
 1222 0006 0030     		adds	r0, r0, #0
 1223 0008 18BF     		it	ne
 1224 000a 0120     		movne	r0, #1
 1225 000c 08BD     		pop	{r3, pc}
 1226              	.L98:
 1227 000e 00BF     		.align	2
 1228              	.L97:
 1229 0010 00000000 		.word	u8g_GetGlyph
 1230              		.cfi_endproc
 1231              	.LFE28:
 1233              		.section	.text.u8g_GetGlyphDeltaX,"ax",%progbits
 1234              		.align	1
 1235              		.p2align 2,,3
 1236              		.global	u8g_GetGlyphDeltaX
 1237              		.syntax unified
 1238              		.thumb
 1239              		.thumb_func
 1240              		.fpu softvfp
 1242              	u8g_GetGlyphDeltaX:
 1243              	.LFB29:
 428:u8g/u8g_font.c ****   if ( u8g_GetGlyph(u8g, requested_encoding) == NULL )
 1244              		.loc 1 428 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 0
 1247              		@ frame_needed = 0, uses_anonymous_args = 0
 1248              	.LVL131:
 1249 0000 10B5     		push	{r4, lr}
 1250              	.LCFI5:
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 4, -8
 1253              		.cfi_offset 14, -4
 429:u8g/u8g_font.c ****     return 0;  /* should never happen, so return something */
 1254              		.loc 1 429 0
 1255 0002 034B     		ldr	r3, .L103
 428:u8g/u8g_font.c ****   if ( u8g_GetGlyph(u8g, requested_encoding) == NULL )
 1256              		.loc 1 428 0
 1257 0004 0446     		mov	r4, r0
 429:u8g/u8g_font.c ****     return 0;  /* should never happen, so return something */
 1258              		.loc 1 429 0
 1259 0006 9847     		blx	r3
 1260              	.LVL132:
 1261 0008 08B1     		cbz	r0, .L100
 431:u8g/u8g_font.c **** }
 1262              		.loc 1 431 0
 1263 000a 94F91C00 		ldrsb	r0, [r4, #28]
 1264              	.L100:
 432:u8g/u8g_font.c **** 
 1265              		.loc 1 432 0
 1266 000e 10BD     		pop	{r4, pc}
 1267              	.LVL133:
 1268              	.L104:
 1269              		.align	2
 1270              	.L103:
 1271 0010 00000000 		.word	u8g_GetGlyph
 1272              		.cfi_endproc
 1273              	.LFE29:
 1275              		.section	.text.u8g_draw_glyph,"ax",%progbits
 1276              		.align	1
 1277              		.p2align 2,,3
 1278              		.global	u8g_draw_glyph
 1279              		.syntax unified
 1280              		.thumb
 1281              		.thumb_func
 1282              		.fpu softvfp
 1284              	u8g_draw_glyph:
 1285              	.LFB30:
 565:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 1286              		.loc 1 565 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 16
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              	.LVL134:
 1291 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1292              	.LCFI6:
 1293              		.cfi_def_cfa_offset 36
 1294              		.cfi_offset 4, -36
 1295              		.cfi_offset 5, -32
 1296              		.cfi_offset 6, -28
 1297              		.cfi_offset 7, -24
 1298              		.cfi_offset 8, -20
 1299              		.cfi_offset 9, -16
 1300              		.cfi_offset 10, -12
 1301              		.cfi_offset 11, -8
 1302              		.cfi_offset 14, -4
 1303 0004 8B46     		mov	fp, r1
 1304 0006 87B0     		sub	sp, sp, #28
 1305              	.LCFI7:
 1306              		.cfi_def_cfa_offset 64
 1307              	.LBB144:
 572:u8g/u8g_font.c ****     if ( g == NULL  )
 1308              		.loc 1 572 0
 1309 0008 2C4D     		ldr	r5, .L120
 1310 000a 1946     		mov	r1, r3
 1311              	.LVL135:
 1312              	.LBE144:
 565:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 1313              		.loc 1 565 0
 1314 000c 1446     		mov	r4, r2
 1315 000e 0746     		mov	r7, r0
 1316              	.LBB151:
 572:u8g/u8g_font.c ****     if ( g == NULL  )
 1317              		.loc 1 572 0
 1318 0010 A847     		blx	r5
 1319              	.LVL136:
 573:u8g/u8g_font.c ****       return 0;
 1320              		.loc 1 573 0
 1321 0012 8246     		mov	r10, r0
 1322 0014 0028     		cmp	r0, #0
 1323 0016 4DD0     		beq	.L112
 1324              	.LVL137:
 1325              	.LBB145:
 1326              	.LBB146:
 203:u8g/u8g_font.c **** }
 1327              		.loc 1 203 0
 1328 0018 BA68     		ldr	r2, [r7, #8]
 1329 001a 294B     		ldr	r3, .L120+4
 1330 001c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1331              	.LVL138:
 1332 001e 9847     		blx	r3
 1333              	.LVL139:
 1334              	.LBE146:
 1335              	.LBE145:
 1336              	.LBE151:
 579:u8g/u8g_font.c ****   
 1337              		.loc 1 579 0
 1338 0020 97F82080 		ldrb	r8, [r7, #32]	@ zero_extendqisi2
 585:u8g/u8g_font.c ****     return u8g->glyph_dx;
 1339              		.loc 1 585 0
 1340 0024 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 1341              	.LVL140:
 581:u8g/u8g_font.c ****   y -= u8g->glyph_y;
 1342              		.loc 1 581 0
 1343 0026 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 585:u8g/u8g_font.c ****     return u8g->glyph_dx;
 1344              		.loc 1 585 0
 1345 0028 A4EB0805 		sub	r5, r4, r8
 1346 002c AD1A     		subs	r5, r5, r2
 581:u8g/u8g_font.c ****   y -= u8g->glyph_y;
 1347              		.loc 1 581 0
 1348 002e 9B44     		add	fp, fp, r3
 578:u8g/u8g_font.c ****   h = u8g->glyph_height;
 1349              		.loc 1 578 0
 1350 0030 FC7F     		ldrb	r4, [r7, #31]	@ zero_extendqisi2
 585:u8g/u8g_font.c ****     return u8g->glyph_dx;
 1351              		.loc 1 585 0
 1352 0032 EDB2     		uxtb	r5, r5
 581:u8g/u8g_font.c ****   y -= u8g->glyph_y;
 1353              		.loc 1 581 0
 1354 0034 5FFA8BFB 		uxtb	fp, fp
 1355              	.LBB152:
 1356              	.LBB149:
 1357              	.LBB147:
 203:u8g/u8g_font.c **** }
 1358              		.loc 1 203 0
 1359 0038 0646     		mov	r6, r0
 1360              	.LVL141:
 1361              	.LBE147:
 1362              	.LBE149:
 1363              	.LBE152:
 585:u8g/u8g_font.c ****     return u8g->glyph_dx;
 1364              		.loc 1 585 0
 1365 003a CDF80080 		str	r8, [sp]
 1366 003e 2A46     		mov	r2, r5
 1367 0040 5946     		mov	r1, fp
 1368 0042 2346     		mov	r3, r4
 1369 0044 3846     		mov	r0, r7
 1370 0046 DFF88090 		ldr	r9, .L120+12
 1371 004a C847     		blx	r9
 1372              	.LVL142:
 1373 004c 68B3     		cbz	r0, .L108
 589:u8g/u8g_font.c ****   w /= 8;
 1374              		.loc 1 589 0
 1375 004e 0734     		adds	r4, r4, #7
 1376              	.LVL143:
 590:u8g/u8g_font.c ****   
 1377              		.loc 1 590 0
 1378 0050 C4F3C402 		ubfx	r2, r4, #3, #5
 1379 0054 0392     		str	r2, [sp, #12]
 1380              	.LVL144:
 596:u8g/u8g_font.c ****   {
 1381              		.loc 1 596 0
 1382 0056 B8F1000F 		cmp	r8, #0
 1383 005a 26D0     		beq	.L108
 1384 005c A844     		add	r8, r8, r5
 1385              	.LVL145:
 1386 005e 531E     		subs	r3, r2, #1
 1387 0060 0BEBC209 		add	r9, fp, r2, lsl #3
 1388 0064 5FFA88F2 		uxtb	r2, r8
 1389              	.LVL146:
 1390 0068 B846     		mov	r8, r7
 1391 006a DBB2     		uxtb	r3, r3
 1392 006c 0133     		adds	r3, r3, #1
 1393 006e 0492     		str	r2, [sp, #16]
 1394              	.LBB153:
 1395              	.LBB150:
 1396              	.LBB148:
 203:u8g/u8g_font.c **** }
 1397              		.loc 1 203 0
 1398 0070 B244     		add	r10, r10, r6
 1399              	.LVL147:
 1400 0072 0593     		str	r3, [sp, #20]
 1401 0074 5FFA89F9 		uxtb	r9, r9
 1402              	.LVL148:
 1403              	.L109:
 1404              	.LBE148:
 1405              	.LBE150:
 1406              	.LBE153:
 599:u8g/u8g_font.c ****     {
 1407              		.loc 1 599 0
 1408 0078 039B     		ldr	r3, [sp, #12]
 1409 007a 83B1     		cbz	r3, .L111
 598:u8g/u8g_font.c ****     for( i = 0; i < w; i++ )
 1410              		.loc 1 598 0
 1411 007c 5C46     		mov	r4, fp
 599:u8g/u8g_font.c ****     {
 1412              		.loc 1 599 0
 1413 007e 5646     		mov	r6, r10
 1414 0080 104F     		ldr	r7, .L120+8
 1415              	.LVL149:
 1416              	.L110:
 601:u8g/u8g_font.c ****       data++;
 1417              		.loc 1 601 0 discriminator 3
 1418 0082 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 1419              	.LVL150:
 1420 0086 2146     		mov	r1, r4
 603:u8g/u8g_font.c ****     }
 1421              		.loc 1 603 0 discriminator 3
 1422 0088 0834     		adds	r4, r4, #8
 1423              	.LVL151:
 601:u8g/u8g_font.c ****       data++;
 1424              		.loc 1 601 0 discriminator 3
 1425 008a 0092     		str	r2, [sp]
 1426 008c 0023     		movs	r3, #0
 1427 008e 2A46     		mov	r2, r5
 1428 0090 4046     		mov	r0, r8
 603:u8g/u8g_font.c ****     }
 1429              		.loc 1 603 0 discriminator 3
 1430 0092 E4B2     		uxtb	r4, r4
 601:u8g/u8g_font.c ****       data++;
 1431              		.loc 1 601 0 discriminator 3
 1432 0094 B847     		blx	r7
 1433              	.LVL152:
 599:u8g/u8g_font.c ****     {
 1434              		.loc 1 599 0 discriminator 3
 1435 0096 4C45     		cmp	r4, r9
 1436 0098 F3D1     		bne	.L110
 1437 009a 059B     		ldr	r3, [sp, #20]
 1438 009c 9A44     		add	r10, r10, r3
 1439              	.LVL153:
 1440              	.L111:
 605:u8g/u8g_font.c ****   }
 1441              		.loc 1 605 0 discriminator 2
 1442 009e 0135     		adds	r5, r5, #1
 1443              	.LVL154:
 596:u8g/u8g_font.c ****   {
 1444              		.loc 1 596 0 discriminator 2
 1445 00a0 049B     		ldr	r3, [sp, #16]
 605:u8g/u8g_font.c ****   }
 1446              		.loc 1 605 0 discriminator 2
 1447 00a2 EDB2     		uxtb	r5, r5
 1448              	.LVL155:
 596:u8g/u8g_font.c ****   {
 1449              		.loc 1 596 0 discriminator 2
 1450 00a4 AB42     		cmp	r3, r5
 1451 00a6 E7D1     		bne	.L109
 1452 00a8 4746     		mov	r7, r8
 1453              	.LVL156:
 1454              	.L108:
 607:u8g/u8g_font.c **** }
 1455              		.loc 1 607 0
 1456 00aa 97F91C00 		ldrsb	r0, [r7, #28]
 608:u8g/u8g_font.c **** 
 1457              		.loc 1 608 0
 1458 00ae 07B0     		add	sp, sp, #28
 1459              	.LCFI8:
 1460              		.cfi_remember_state
 1461              		.cfi_def_cfa_offset 36
 1462              		@ sp needed
 1463 00b0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1464              	.LVL157:
 1465              	.L112:
 1466              	.LCFI9:
 1467              		.cfi_restore_state
 1468 00b4 07B0     		add	sp, sp, #28
 1469              	.LCFI10:
 1470              		.cfi_def_cfa_offset 36
 1471              		@ sp needed
 1472 00b6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1473              	.LVL158:
 1474              	.L121:
 1475 00ba 00BF     		.align	2
 1476              	.L120:
 1477 00bc 00000000 		.word	u8g_GetGlyph
 1478 00c0 00000000 		.word	u8g_font_GetFontGlyphStructureSize.isra.1
 1479 00c4 00000000 		.word	u8g_Draw8Pixel
 1480 00c8 00000000 		.word	u8g_IsBBXIntersection
 1481              		.cfi_endproc
 1482              	.LFE30:
 1484              		.section	.text.u8g_DrawGlyph,"ax",%progbits
 1485              		.align	1
 1486              		.p2align 2,,3
 1487              		.global	u8g_DrawGlyph
 1488              		.syntax unified
 1489              		.thumb
 1490              		.thumb_func
 1491              		.fpu softvfp
 1493              	u8g_DrawGlyph:
 1494              	.LFB31:
 611:u8g/u8g_font.c ****   y += u8g->font_calc_vref(u8g);
 1495              		.loc 1 611 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              	.LVL159:
 1500 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1501              	.LCFI11:
 1502              		.cfi_def_cfa_offset 24
 1503              		.cfi_offset 4, -24
 1504              		.cfi_offset 5, -20
 1505              		.cfi_offset 6, -16
 1506              		.cfi_offset 7, -12
 1507              		.cfi_offset 8, -8
 1508              		.cfi_offset 14, -4
 612:u8g/u8g_font.c ****   return u8g_draw_glyph(u8g, x, y, encoding);
 1509              		.loc 1 612 0
 1510 0004 476A     		ldr	r7, [r0, #36]
 611:u8g/u8g_font.c ****   y += u8g->font_calc_vref(u8g);
 1511              		.loc 1 611 0
 1512 0006 0546     		mov	r5, r0
 1513 0008 0E46     		mov	r6, r1
 1514 000a 1446     		mov	r4, r2
 1515 000c 9846     		mov	r8, r3
 612:u8g/u8g_font.c ****   return u8g_draw_glyph(u8g, x, y, encoding);
 1516              		.loc 1 612 0
 1517 000e B847     		blx	r7
 1518              	.LVL160:
 1519 0010 0219     		adds	r2, r0, r4
 613:u8g/u8g_font.c **** }
 1520              		.loc 1 613 0
 1521 0012 044C     		ldr	r4, .L124
 1522              	.LVL161:
 1523 0014 4346     		mov	r3, r8
 1524 0016 3146     		mov	r1, r6
 1525 0018 2846     		mov	r0, r5
 1526 001a A446     		mov	ip, r4
 614:u8g/u8g_font.c **** 
 1527              		.loc 1 614 0
 1528 001c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1529              	.LCFI12:
 1530              		.cfi_restore 14
 1531              		.cfi_restore 8
 1532              		.cfi_restore 7
 1533              		.cfi_restore 6
 1534              		.cfi_restore 5
 1535              		.cfi_restore 4
 1536              		.cfi_def_cfa_offset 0
 1537              	.LVL162:
 613:u8g/u8g_font.c **** }
 1538              		.loc 1 613 0
 1539 0020 D2B2     		uxtb	r2, r2
 1540 0022 6047     		bx	ip
 1541              	.LVL163:
 1542              	.L125:
 1543              		.align	2
 1544              	.L124:
 1545 0024 00000000 		.word	u8g_draw_glyph
 1546              		.cfi_endproc
 1547              	.LFE31:
 1549              		.section	.text.u8g_draw_glyph90,"ax",%progbits
 1550              		.align	1
 1551              		.p2align 2,,3
 1552              		.global	u8g_draw_glyph90
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1556              		.fpu softvfp
 1558              	u8g_draw_glyph90:
 1559              	.LFB32:
 617:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 1560              		.loc 1 617 0
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 16
 1563              		@ frame_needed = 0, uses_anonymous_args = 0
 1564              	.LVL164:
 1565 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1566              	.LCFI13:
 1567              		.cfi_def_cfa_offset 36
 1568              		.cfi_offset 4, -36
 1569              		.cfi_offset 5, -32
 1570              		.cfi_offset 6, -28
 1571              		.cfi_offset 7, -24
 1572              		.cfi_offset 8, -20
 1573              		.cfi_offset 9, -16
 1574              		.cfi_offset 10, -12
 1575              		.cfi_offset 11, -8
 1576              		.cfi_offset 14, -4
 1577 0004 0C46     		mov	r4, r1
 1578 0006 87B0     		sub	sp, sp, #28
 1579              	.LCFI14:
 1580              		.cfi_def_cfa_offset 64
 1581              	.LBB154:
 624:u8g/u8g_font.c ****     if ( g == NULL  )
 1582              		.loc 1 624 0
 1583 0008 2E4D     		ldr	r5, .L141
 1584 000a 1946     		mov	r1, r3
 1585              	.LVL165:
 1586              	.LBE154:
 617:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 1587              		.loc 1 617 0
 1588 000c 9346     		mov	fp, r2
 1589 000e 0746     		mov	r7, r0
 1590              	.LBB161:
 624:u8g/u8g_font.c ****     if ( g == NULL  )
 1591              		.loc 1 624 0
 1592 0010 A847     		blx	r5
 1593              	.LVL166:
 625:u8g/u8g_font.c ****       return 0;
 1594              		.loc 1 625 0
 1595 0012 8246     		mov	r10, r0
 1596 0014 0028     		cmp	r0, #0
 1597 0016 52D0     		beq	.L133
 1598              	.LVL167:
 1599              	.LBB155:
 1600              	.LBB156:
 203:u8g/u8g_font.c **** }
 1601              		.loc 1 203 0
 1602 0018 BA68     		ldr	r2, [r7, #8]
 1603 001a 2B4B     		ldr	r3, .L141+4
 1604 001c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1605              	.LVL168:
 1606 001e 9847     		blx	r3
 1607              	.LVL169:
 1608              	.LBE156:
 1609              	.LBE155:
 1610              	.LBE161:
 634:u8g/u8g_font.c ****   y += u8g->glyph_x;
 1611              		.loc 1 634 0
 1612 0020 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 1613              	.LVL170:
 635:u8g/u8g_font.c ****   
 1614              		.loc 1 635 0
 1615 0022 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1616 0024 0134     		adds	r4, r4, #1
 634:u8g/u8g_font.c ****   y += u8g->glyph_x;
 1617              		.loc 1 634 0
 1618 0026 1444     		add	r4, r4, r2
 635:u8g/u8g_font.c ****   
 1619              		.loc 1 635 0
 1620 0028 9B44     		add	fp, fp, r3
 631:u8g/u8g_font.c ****   
 1621              		.loc 1 631 0
 1622 002a 97F82080 		ldrb	r8, [r7, #32]	@ zero_extendqisi2
 630:u8g/u8g_font.c ****   h = u8g->glyph_height;
 1623              		.loc 1 630 0
 1624 002e FD7F     		ldrb	r5, [r7, #31]	@ zero_extendqisi2
 634:u8g/u8g_font.c ****   y += u8g->glyph_x;
 1625              		.loc 1 634 0
 1626 0030 04F0FF04 		and	r4, r4, #255
 635:u8g/u8g_font.c ****   
 1627              		.loc 1 635 0
 1628 0034 5FFA8BFB 		uxtb	fp, fp
 1629              	.LBB162:
 1630              	.LBB159:
 1631              	.LBB157:
 203:u8g/u8g_font.c **** }
 1632              		.loc 1 203 0
 1633 0038 0646     		mov	r6, r0
 1634              	.LVL171:
 1635              	.LBE157:
 1636              	.LBE159:
 1637              	.LBE162:
 637:u8g/u8g_font.c ****     return u8g->glyph_dx;
 1638              		.loc 1 637 0
 1639 003a 2146     		mov	r1, r4
 1640 003c 5A46     		mov	r2, fp
 1641 003e 0095     		str	r5, [sp]
 1642 0040 4346     		mov	r3, r8
 1643 0042 3846     		mov	r0, r7
 1644 0044 DFF88890 		ldr	r9, .L141+12
 1645 0048 C847     		blx	r9
 1646              	.LVL172:
 1647 004a 0028     		cmp	r0, #0
 1648 004c 32D0     		beq	.L129
 641:u8g/u8g_font.c ****   w /= 8;
 1649              		.loc 1 641 0
 1650 004e 0735     		adds	r5, r5, #7
 1651              	.LVL173:
 646:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 1652              		.loc 1 646 0
 1653 0050 08F1FF33 		add	r3, r8, #-1
 642:u8g/u8g_font.c ****   
 1654              		.loc 1 642 0
 1655 0054 C5F3C402 		ubfx	r2, r5, #3, #5
 646:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 1656              		.loc 1 646 0
 1657 0058 1C44     		add	r4, r4, r3
 1658              	.LVL174:
 642:u8g/u8g_font.c ****   
 1659              		.loc 1 642 0
 1660 005a 0392     		str	r2, [sp, #12]
 1661              	.LVL175:
 646:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 1662              		.loc 1 646 0
 1663 005c E5B2     		uxtb	r5, r4
 1664              	.LVL176:
 647:u8g/u8g_font.c ****   {
 1665              		.loc 1 647 0
 1666 005e B8F1000F 		cmp	r8, #0
 1667 0062 27D0     		beq	.L129
 1668 0064 A5EB0808 		sub	r8, r5, r8
 1669              	.LVL177:
 1670 0068 531E     		subs	r3, r2, #1
 1671              	.LVL178:
 1672 006a 0BEBC209 		add	r9, fp, r2, lsl #3
 1673 006e 5FFA88F2 		uxtb	r2, r8
 1674              	.LVL179:
 1675 0072 B846     		mov	r8, r7
 1676 0074 DBB2     		uxtb	r3, r3
 1677 0076 0133     		adds	r3, r3, #1
 1678 0078 0492     		str	r2, [sp, #16]
 1679              	.LBB163:
 1680              	.LBB160:
 1681              	.LBB158:
 203:u8g/u8g_font.c **** }
 1682              		.loc 1 203 0
 1683 007a B244     		add	r10, r10, r6
 1684              	.LVL180:
 1685 007c 0593     		str	r3, [sp, #20]
 1686 007e 5FFA89F9 		uxtb	r9, r9
 1687              	.LVL181:
 1688              	.L130:
 1689              	.LBE158:
 1690              	.LBE160:
 1691              	.LBE163:
 650:u8g/u8g_font.c ****     {
 1692              		.loc 1 650 0
 1693 0082 039B     		ldr	r3, [sp, #12]
 1694 0084 83B1     		cbz	r3, .L132
 649:u8g/u8g_font.c ****     for( i = 0; i < w; i++ )
 1695              		.loc 1 649 0
 1696 0086 5C46     		mov	r4, fp
 650:u8g/u8g_font.c ****     {
 1697              		.loc 1 650 0
 1698 0088 5646     		mov	r6, r10
 1699 008a 104F     		ldr	r7, .L141+8
 1700              	.LVL182:
 1701              	.L131:
 652:u8g/u8g_font.c ****       data++;
 1702              		.loc 1 652 0 discriminator 3
 1703 008c 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 1704              	.LVL183:
 1705 0090 0123     		movs	r3, #1
 1706 0092 0092     		str	r2, [sp]
 1707 0094 2246     		mov	r2, r4
 654:u8g/u8g_font.c ****     }
 1708              		.loc 1 654 0 discriminator 3
 1709 0096 0834     		adds	r4, r4, #8
 1710              	.LVL184:
 652:u8g/u8g_font.c ****       data++;
 1711              		.loc 1 652 0 discriminator 3
 1712 0098 2946     		mov	r1, r5
 1713 009a 4046     		mov	r0, r8
 654:u8g/u8g_font.c ****     }
 1714              		.loc 1 654 0 discriminator 3
 1715 009c E4B2     		uxtb	r4, r4
 652:u8g/u8g_font.c ****       data++;
 1716              		.loc 1 652 0 discriminator 3
 1717 009e B847     		blx	r7
 1718              	.LVL185:
 650:u8g/u8g_font.c ****     {
 1719              		.loc 1 650 0 discriminator 3
 1720 00a0 A145     		cmp	r9, r4
 1721 00a2 F3D1     		bne	.L131
 1722 00a4 059B     		ldr	r3, [sp, #20]
 1723 00a6 9A44     		add	r10, r10, r3
 1724              	.LVL186:
 1725              	.L132:
 656:u8g/u8g_font.c ****   }
 1726              		.loc 1 656 0 discriminator 2
 1727 00a8 013D     		subs	r5, r5, #1
 1728              	.LVL187:
 647:u8g/u8g_font.c ****   {
 1729              		.loc 1 647 0 discriminator 2
 1730 00aa 049B     		ldr	r3, [sp, #16]
 656:u8g/u8g_font.c ****   }
 1731              		.loc 1 656 0 discriminator 2
 1732 00ac EDB2     		uxtb	r5, r5
 1733              	.LVL188:
 647:u8g/u8g_font.c ****   {
 1734              		.loc 1 647 0 discriminator 2
 1735 00ae AB42     		cmp	r3, r5
 1736 00b0 E7D1     		bne	.L130
 1737 00b2 4746     		mov	r7, r8
 1738              	.LVL189:
 1739              	.L129:
 658:u8g/u8g_font.c **** }
 1740              		.loc 1 658 0
 1741 00b4 97F91C00 		ldrsb	r0, [r7, #28]
 659:u8g/u8g_font.c **** 
 1742              		.loc 1 659 0
 1743 00b8 07B0     		add	sp, sp, #28
 1744              	.LCFI15:
 1745              		.cfi_remember_state
 1746              		.cfi_def_cfa_offset 36
 1747              		@ sp needed
 1748 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1749              	.LVL190:
 1750              	.L133:
 1751              	.LCFI16:
 1752              		.cfi_restore_state
 1753 00be 07B0     		add	sp, sp, #28
 1754              	.LCFI17:
 1755              		.cfi_def_cfa_offset 36
 1756              		@ sp needed
 1757 00c0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1758              	.LVL191:
 1759              	.L142:
 1760              		.align	2
 1761              	.L141:
 1762 00c4 00000000 		.word	u8g_GetGlyph
 1763 00c8 00000000 		.word	u8g_font_GetFontGlyphStructureSize.isra.1
 1764 00cc 00000000 		.word	u8g_Draw8Pixel
 1765 00d0 00000000 		.word	u8g_IsBBXIntersection
 1766              		.cfi_endproc
 1767              	.LFE32:
 1769              		.section	.text.u8g_DrawGlyph90,"ax",%progbits
 1770              		.align	1
 1771              		.p2align 2,,3
 1772              		.global	u8g_DrawGlyph90
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
 1776              		.fpu softvfp
 1778              	u8g_DrawGlyph90:
 1779              	.LFB33:
 662:u8g/u8g_font.c ****   x -= u8g->font_calc_vref(u8g);
 1780              		.loc 1 662 0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 0
 1783              		@ frame_needed = 0, uses_anonymous_args = 0
 1784              	.LVL192:
 1785 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1786              	.LCFI18:
 1787              		.cfi_def_cfa_offset 24
 1788              		.cfi_offset 4, -24
 1789              		.cfi_offset 5, -20
 1790              		.cfi_offset 6, -16
 1791              		.cfi_offset 7, -12
 1792              		.cfi_offset 8, -8
 1793              		.cfi_offset 14, -4
 663:u8g/u8g_font.c ****   return u8g_draw_glyph90(u8g, x, y, encoding);
 1794              		.loc 1 663 0
 1795 0004 476A     		ldr	r7, [r0, #36]
 662:u8g/u8g_font.c ****   x -= u8g->font_calc_vref(u8g);
 1796              		.loc 1 662 0
 1797 0006 0546     		mov	r5, r0
 1798 0008 0C46     		mov	r4, r1
 1799 000a 1646     		mov	r6, r2
 1800 000c 9846     		mov	r8, r3
 663:u8g/u8g_font.c ****   return u8g_draw_glyph90(u8g, x, y, encoding);
 1801              		.loc 1 663 0
 1802 000e B847     		blx	r7
 1803              	.LVL193:
 1804 0010 211A     		subs	r1, r4, r0
 664:u8g/u8g_font.c **** }
 1805              		.loc 1 664 0
 1806 0012 044C     		ldr	r4, .L145
 1807              	.LVL194:
 1808 0014 4346     		mov	r3, r8
 1809 0016 3246     		mov	r2, r6
 1810 0018 2846     		mov	r0, r5
 1811 001a A446     		mov	ip, r4
 665:u8g/u8g_font.c **** 
 1812              		.loc 1 665 0
 1813 001c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1814              	.LCFI19:
 1815              		.cfi_restore 14
 1816              		.cfi_restore 8
 1817              		.cfi_restore 7
 1818              		.cfi_restore 6
 1819              		.cfi_restore 5
 1820              		.cfi_restore 4
 1821              		.cfi_def_cfa_offset 0
 1822              	.LVL195:
 664:u8g/u8g_font.c **** }
 1823              		.loc 1 664 0
 1824 0020 C9B2     		uxtb	r1, r1
 1825 0022 6047     		bx	ip
 1826              	.LVL196:
 1827              	.L146:
 1828              		.align	2
 1829              	.L145:
 1830 0024 00000000 		.word	u8g_draw_glyph90
 1831              		.cfi_endproc
 1832              	.LFE33:
 1834              		.section	.text.u8g_draw_glyph180,"ax",%progbits
 1835              		.align	1
 1836              		.p2align 2,,3
 1837              		.global	u8g_draw_glyph180
 1838              		.syntax unified
 1839              		.thumb
 1840              		.thumb_func
 1841              		.fpu softvfp
 1843              	u8g_draw_glyph180:
 1844              	.LFB34:
 669:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 1845              		.loc 1 669 0
 1846              		.cfi_startproc
 1847              		@ args = 0, pretend = 0, frame = 16
 1848              		@ frame_needed = 0, uses_anonymous_args = 0
 1849              	.LVL197:
 1850 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1851              	.LCFI20:
 1852              		.cfi_def_cfa_offset 36
 1853              		.cfi_offset 4, -36
 1854              		.cfi_offset 5, -32
 1855              		.cfi_offset 6, -28
 1856              		.cfi_offset 7, -24
 1857              		.cfi_offset 8, -20
 1858              		.cfi_offset 9, -16
 1859              		.cfi_offset 10, -12
 1860              		.cfi_offset 11, -8
 1861              		.cfi_offset 14, -4
 1862 0004 8B46     		mov	fp, r1
 1863 0006 87B0     		sub	sp, sp, #28
 1864              	.LCFI21:
 1865              		.cfi_def_cfa_offset 64
 1866              	.LBB164:
 676:u8g/u8g_font.c ****     if ( g == NULL  )
 1867              		.loc 1 676 0
 1868 0008 314D     		ldr	r5, .L162
 1869 000a 1946     		mov	r1, r3
 1870              	.LVL198:
 1871              	.LBE164:
 669:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 1872              		.loc 1 669 0
 1873 000c 1446     		mov	r4, r2
 1874 000e 0746     		mov	r7, r0
 1875              	.LBB171:
 676:u8g/u8g_font.c ****     if ( g == NULL  )
 1876              		.loc 1 676 0
 1877 0010 A847     		blx	r5
 1878              	.LVL199:
 677:u8g/u8g_font.c ****       return 0;
 1879              		.loc 1 677 0
 1880 0012 8246     		mov	r10, r0
 1881 0014 0028     		cmp	r0, #0
 1882 0016 58D0     		beq	.L154
 1883              	.LVL200:
 1884              	.LBB165:
 1885              	.LBB166:
 203:u8g/u8g_font.c **** }
 1886              		.loc 1 203 0
 1887 0018 BA68     		ldr	r2, [r7, #8]
 1888 001a 2E4B     		ldr	r3, .L162+4
 1889 001c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1890              	.LVL201:
 1891 001e 9847     		blx	r3
 1892              	.LVL202:
 1893              	.LBE166:
 1894              	.LBE165:
 1895              	.LBE171:
 685:u8g/u8g_font.c ****   y += u8g->glyph_y;
 1896              		.loc 1 685 0
 1897 0020 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 1898              	.LVL203:
 687:u8g/u8g_font.c ****   
 1899              		.loc 1 687 0
 1900 0022 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 682:u8g/u8g_font.c ****   h = u8g->glyph_height;
 1901              		.loc 1 682 0
 1902 0024 97F81F90 		ldrb	r9, [r7, #31]	@ zero_extendqisi2
 685:u8g/u8g_font.c ****   y += u8g->glyph_y;
 1903              		.loc 1 685 0
 1904 0028 ABEB020B 		sub	fp, fp, r2
 1905 002c 0134     		adds	r4, r4, #1
 687:u8g/u8g_font.c ****   
 1906              		.loc 1 687 0
 1907 002e 1C44     		add	r4, r4, r3
 685:u8g/u8g_font.c ****   y += u8g->glyph_y;
 1908              		.loc 1 685 0
 1909 0030 5FFA8BFB 		uxtb	fp, fp
 689:u8g/u8g_font.c ****     return u8g->glyph_dx;
 1910              		.loc 1 689 0
 1911 0034 C9F10101 		rsb	r1, r9, #1
 683:u8g/u8g_font.c ****   
 1912              		.loc 1 683 0
 1913 0038 97F82080 		ldrb	r8, [r7, #32]	@ zero_extendqisi2
 687:u8g/u8g_font.c ****   
 1914              		.loc 1 687 0
 1915 003c 04F0FF04 		and	r4, r4, #255
 689:u8g/u8g_font.c ****     return u8g->glyph_dx;
 1916              		.loc 1 689 0
 1917 0040 5944     		add	r1, r1, fp
 1918              	.LBB172:
 1919              	.LBB169:
 1920              	.LBB167:
 203:u8g/u8g_font.c **** }
 1921              		.loc 1 203 0
 1922 0042 0646     		mov	r6, r0
 1923              	.LVL204:
 1924              	.LBE167:
 1925              	.LBE169:
 1926              	.LBE172:
 689:u8g/u8g_font.c ****     return u8g->glyph_dx;
 1927              		.loc 1 689 0
 1928 0044 C9B2     		uxtb	r1, r1
 1929 0046 2246     		mov	r2, r4
 1930 0048 4B46     		mov	r3, r9
 1931 004a CDF80080 		str	r8, [sp]
 1932 004e 3846     		mov	r0, r7
 1933 0050 214D     		ldr	r5, .L162+8
 1934 0052 A847     		blx	r5
 1935              	.LVL205:
 1936 0054 0028     		cmp	r0, #0
 1937 0056 33D0     		beq	.L150
 698:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 1938              		.loc 1 698 0
 1939 0058 08F1FF35 		add	r5, r8, #-1
 693:u8g/u8g_font.c ****   w /= 8;
 1940              		.loc 1 693 0
 1941 005c 09F10709 		add	r9, r9, #7
 1942              	.LVL206:
 698:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 1943              		.loc 1 698 0
 1944 0060 2544     		add	r5, r5, r4
 694:u8g/u8g_font.c ****   
 1945              		.loc 1 694 0
 1946 0062 C9F3C402 		ubfx	r2, r9, #3, #5
 1947 0066 0392     		str	r2, [sp, #12]
 1948              	.LVL207:
 698:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 1949              		.loc 1 698 0
 1950 0068 EDB2     		uxtb	r5, r5
 1951              	.LVL208:
 699:u8g/u8g_font.c ****   {
 1952              		.loc 1 699 0
 1953 006a B8F1000F 		cmp	r8, #0
 1954 006e 27D0     		beq	.L150
 1955 0070 A5EB0808 		sub	r8, r5, r8
 1956              	.LVL209:
 1957 0074 531E     		subs	r3, r2, #1
 1958 0076 ABEBC209 		sub	r9, fp, r2, lsl #3
 1959 007a 5FFA88F2 		uxtb	r2, r8
 1960              	.LVL210:
 1961 007e B846     		mov	r8, r7
 1962 0080 DBB2     		uxtb	r3, r3
 1963 0082 0133     		adds	r3, r3, #1
 1964 0084 0492     		str	r2, [sp, #16]
 1965              	.LBB173:
 1966              	.LBB170:
 1967              	.LBB168:
 203:u8g/u8g_font.c **** }
 1968              		.loc 1 203 0
 1969 0086 B244     		add	r10, r10, r6
 1970              	.LVL211:
 1971 0088 0593     		str	r3, [sp, #20]
 1972 008a 5FFA89F9 		uxtb	r9, r9
 1973              	.LVL212:
 1974              	.L151:
 1975              	.LBE168:
 1976              	.LBE170:
 1977              	.LBE173:
 702:u8g/u8g_font.c ****     {
 1978              		.loc 1 702 0
 1979 008e 039B     		ldr	r3, [sp, #12]
 1980 0090 83B1     		cbz	r3, .L153
 701:u8g/u8g_font.c ****     for( i = 0; i < w; i++ )
 1981              		.loc 1 701 0
 1982 0092 5C46     		mov	r4, fp
 702:u8g/u8g_font.c ****     {
 1983              		.loc 1 702 0
 1984 0094 5646     		mov	r6, r10
 1985 0096 114F     		ldr	r7, .L162+12
 1986              	.LVL213:
 1987              	.L152:
 704:u8g/u8g_font.c ****       data++;
 1988              		.loc 1 704 0 discriminator 3
 1989 0098 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 1990              	.LVL214:
 1991 009c 2146     		mov	r1, r4
 706:u8g/u8g_font.c ****     }
 1992              		.loc 1 706 0 discriminator 3
 1993 009e 083C     		subs	r4, r4, #8
 1994              	.LVL215:
 704:u8g/u8g_font.c ****       data++;
 1995              		.loc 1 704 0 discriminator 3
 1996 00a0 0092     		str	r2, [sp]
 1997 00a2 0223     		movs	r3, #2
 1998 00a4 2A46     		mov	r2, r5
 1999 00a6 4046     		mov	r0, r8
 706:u8g/u8g_font.c ****     }
 2000              		.loc 1 706 0 discriminator 3
 2001 00a8 E4B2     		uxtb	r4, r4
 704:u8g/u8g_font.c ****       data++;
 2002              		.loc 1 704 0 discriminator 3
 2003 00aa B847     		blx	r7
 2004              	.LVL216:
 702:u8g/u8g_font.c ****     {
 2005              		.loc 1 702 0 discriminator 3
 2006 00ac 4C45     		cmp	r4, r9
 2007 00ae F3D1     		bne	.L152
 2008 00b0 059B     		ldr	r3, [sp, #20]
 2009 00b2 9A44     		add	r10, r10, r3
 2010              	.LVL217:
 2011              	.L153:
 708:u8g/u8g_font.c ****   }
 2012              		.loc 1 708 0 discriminator 2
 2013 00b4 013D     		subs	r5, r5, #1
 2014              	.LVL218:
 699:u8g/u8g_font.c ****   {
 2015              		.loc 1 699 0 discriminator 2
 2016 00b6 049B     		ldr	r3, [sp, #16]
 708:u8g/u8g_font.c ****   }
 2017              		.loc 1 708 0 discriminator 2
 2018 00b8 EDB2     		uxtb	r5, r5
 2019              	.LVL219:
 699:u8g/u8g_font.c ****   {
 2020              		.loc 1 699 0 discriminator 2
 2021 00ba AB42     		cmp	r3, r5
 2022 00bc E7D1     		bne	.L151
 2023 00be 4746     		mov	r7, r8
 2024              	.LVL220:
 2025              	.L150:
 710:u8g/u8g_font.c **** }
 2026              		.loc 1 710 0
 2027 00c0 97F91C00 		ldrsb	r0, [r7, #28]
 711:u8g/u8g_font.c **** 
 2028              		.loc 1 711 0
 2029 00c4 07B0     		add	sp, sp, #28
 2030              	.LCFI22:
 2031              		.cfi_remember_state
 2032              		.cfi_def_cfa_offset 36
 2033              		@ sp needed
 2034 00c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2035              	.LVL221:
 2036              	.L154:
 2037              	.LCFI23:
 2038              		.cfi_restore_state
 2039 00ca 07B0     		add	sp, sp, #28
 2040              	.LCFI24:
 2041              		.cfi_def_cfa_offset 36
 2042              		@ sp needed
 2043 00cc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2044              	.LVL222:
 2045              	.L163:
 2046              		.align	2
 2047              	.L162:
 2048 00d0 00000000 		.word	u8g_GetGlyph
 2049 00d4 00000000 		.word	u8g_font_GetFontGlyphStructureSize.isra.1
 2050 00d8 00000000 		.word	u8g_IsBBXIntersection
 2051 00dc 00000000 		.word	u8g_Draw8Pixel
 2052              		.cfi_endproc
 2053              	.LFE34:
 2055              		.section	.text.u8g_DrawGlyph180,"ax",%progbits
 2056              		.align	1
 2057              		.p2align 2,,3
 2058              		.global	u8g_DrawGlyph180
 2059              		.syntax unified
 2060              		.thumb
 2061              		.thumb_func
 2062              		.fpu softvfp
 2064              	u8g_DrawGlyph180:
 2065              	.LFB35:
 714:u8g/u8g_font.c ****   y -= u8g->font_calc_vref(u8g);
 2066              		.loc 1 714 0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 0, uses_anonymous_args = 0
 2070              	.LVL223:
 2071 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2072              	.LCFI25:
 2073              		.cfi_def_cfa_offset 24
 2074              		.cfi_offset 4, -24
 2075              		.cfi_offset 5, -20
 2076              		.cfi_offset 6, -16
 2077              		.cfi_offset 7, -12
 2078              		.cfi_offset 8, -8
 2079              		.cfi_offset 14, -4
 715:u8g/u8g_font.c ****   return u8g_draw_glyph180(u8g, x, y, encoding);
 2080              		.loc 1 715 0
 2081 0004 476A     		ldr	r7, [r0, #36]
 714:u8g/u8g_font.c ****   y -= u8g->font_calc_vref(u8g);
 2082              		.loc 1 714 0
 2083 0006 0546     		mov	r5, r0
 2084 0008 0E46     		mov	r6, r1
 2085 000a 1446     		mov	r4, r2
 2086 000c 9846     		mov	r8, r3
 715:u8g/u8g_font.c ****   return u8g_draw_glyph180(u8g, x, y, encoding);
 2087              		.loc 1 715 0
 2088 000e B847     		blx	r7
 2089              	.LVL224:
 2090 0010 221A     		subs	r2, r4, r0
 716:u8g/u8g_font.c **** }
 2091              		.loc 1 716 0
 2092 0012 044C     		ldr	r4, .L166
 2093              	.LVL225:
 2094 0014 4346     		mov	r3, r8
 2095 0016 3146     		mov	r1, r6
 2096 0018 2846     		mov	r0, r5
 2097 001a A446     		mov	ip, r4
 717:u8g/u8g_font.c **** 
 2098              		.loc 1 717 0
 2099 001c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2100              	.LCFI26:
 2101              		.cfi_restore 14
 2102              		.cfi_restore 8
 2103              		.cfi_restore 7
 2104              		.cfi_restore 6
 2105              		.cfi_restore 5
 2106              		.cfi_restore 4
 2107              		.cfi_def_cfa_offset 0
 2108              	.LVL226:
 716:u8g/u8g_font.c **** }
 2109              		.loc 1 716 0
 2110 0020 D2B2     		uxtb	r2, r2
 2111 0022 6047     		bx	ip
 2112              	.LVL227:
 2113              	.L167:
 2114              		.align	2
 2115              	.L166:
 2116 0024 00000000 		.word	u8g_draw_glyph180
 2117              		.cfi_endproc
 2118              	.LFE35:
 2120              		.section	.text.u8g_draw_glyph270,"ax",%progbits
 2121              		.align	1
 2122              		.p2align 2,,3
 2123              		.global	u8g_draw_glyph270
 2124              		.syntax unified
 2125              		.thumb
 2126              		.thumb_func
 2127              		.fpu softvfp
 2129              	u8g_draw_glyph270:
 2130              	.LFB36:
 721:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 2131              		.loc 1 721 0
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 16
 2134              		@ frame_needed = 0, uses_anonymous_args = 0
 2135              	.LVL228:
 2136 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2137              	.LCFI27:
 2138              		.cfi_def_cfa_offset 36
 2139              		.cfi_offset 4, -36
 2140              		.cfi_offset 5, -32
 2141              		.cfi_offset 6, -28
 2142              		.cfi_offset 7, -24
 2143              		.cfi_offset 8, -20
 2144              		.cfi_offset 9, -16
 2145              		.cfi_offset 10, -12
 2146              		.cfi_offset 11, -8
 2147              		.cfi_offset 14, -4
 2148 0004 0C46     		mov	r4, r1
 2149 0006 87B0     		sub	sp, sp, #28
 2150              	.LCFI28:
 2151              		.cfi_def_cfa_offset 64
 2152              	.LBB174:
 728:u8g/u8g_font.c ****     if ( g == NULL  )
 2153              		.loc 1 728 0
 2154 0008 2E4D     		ldr	r5, .L183
 2155 000a 1946     		mov	r1, r3
 2156              	.LVL229:
 2157              	.LBE174:
 721:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 2158              		.loc 1 721 0
 2159 000c 9346     		mov	fp, r2
 2160 000e 0746     		mov	r7, r0
 2161              	.LBB181:
 728:u8g/u8g_font.c ****     if ( g == NULL  )
 2162              		.loc 1 728 0
 2163 0010 A847     		blx	r5
 2164              	.LVL230:
 729:u8g/u8g_font.c ****       return 0;
 2165              		.loc 1 729 0
 2166 0012 8246     		mov	r10, r0
 2167 0014 0028     		cmp	r0, #0
 2168 0016 52D0     		beq	.L175
 2169              	.LVL231:
 2170              	.LBB175:
 2171              	.LBB176:
 203:u8g/u8g_font.c **** }
 2172              		.loc 1 203 0
 2173 0018 BA68     		ldr	r2, [r7, #8]
 2174 001a 2B4B     		ldr	r3, .L183+4
 2175 001c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 2176              	.LVL232:
 2177 001e 9847     		blx	r3
 2178              	.LVL233:
 2179              	.LBE176:
 2180              	.LBE175:
 2181              	.LBE181:
 735:u8g/u8g_font.c ****   
 2182              		.loc 1 735 0
 2183 0020 97F82080 		ldrb	r8, [r7, #32]	@ zero_extendqisi2
 739:u8g/u8g_font.c ****   
 2184              		.loc 1 739 0
 2185 0024 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2186              	.LVL234:
 741:u8g/u8g_font.c ****     return u8g->glyph_dx;
 2187              		.loc 1 741 0
 2188 0026 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 734:u8g/u8g_font.c ****   h = u8g->glyph_height;
 2189              		.loc 1 734 0
 2190 0028 97F81F90 		ldrb	r9, [r7, #31]	@ zero_extendqisi2
 741:u8g/u8g_font.c ****     return u8g->glyph_dx;
 2191              		.loc 1 741 0
 2192 002c A4EB0805 		sub	r5, r4, r8
 739:u8g/u8g_font.c ****   
 2193              		.loc 1 739 0
 2194 0030 ABEB020B 		sub	fp, fp, r2
 741:u8g/u8g_font.c ****     return u8g->glyph_dx;
 2195              		.loc 1 741 0
 2196 0034 ED1A     		subs	r5, r5, r3
 739:u8g/u8g_font.c ****   
 2197              		.loc 1 739 0
 2198 0036 5FFA8BFB 		uxtb	fp, fp
 741:u8g/u8g_font.c ****     return u8g->glyph_dx;
 2199              		.loc 1 741 0
 2200 003a C9F10102 		rsb	r2, r9, #1
 2201 003e EDB2     		uxtb	r5, r5
 2202 0040 5A44     		add	r2, r2, fp
 2203              	.LBB182:
 2204              	.LBB179:
 2205              	.LBB177:
 203:u8g/u8g_font.c **** }
 2206              		.loc 1 203 0
 2207 0042 0646     		mov	r6, r0
 2208              	.LVL235:
 2209              	.LBE177:
 2210              	.LBE179:
 2211              	.LBE182:
 741:u8g/u8g_font.c ****     return u8g->glyph_dx;
 2212              		.loc 1 741 0
 2213 0044 2946     		mov	r1, r5
 2214 0046 CDF80090 		str	r9, [sp]
 2215              	.LVL236:
 2216 004a D2B2     		uxtb	r2, r2
 2217 004c 4346     		mov	r3, r8
 2218              	.LVL237:
 2219 004e 3846     		mov	r0, r7
 2220 0050 1E4C     		ldr	r4, .L183+8
 2221 0052 A047     		blx	r4
 2222              	.LVL238:
 2223 0054 70B3     		cbz	r0, .L171
 746:u8g/u8g_font.c ****   w /= 8;  
 2224              		.loc 1 746 0
 2225 0056 09F10709 		add	r9, r9, #7
 2226              	.LVL239:
 747:u8g/u8g_font.c ****       
 2227              		.loc 1 747 0
 2228 005a C9F3C402 		ubfx	r2, r9, #3, #5
 2229 005e 0392     		str	r2, [sp, #12]
 2230              	.LVL240:
 753:u8g/u8g_font.c ****   {
 2231              		.loc 1 753 0
 2232 0060 B8F1000F 		cmp	r8, #0
 2233 0064 26D0     		beq	.L171
 2234 0066 A844     		add	r8, r8, r5
 2235              	.LVL241:
 2236 0068 531E     		subs	r3, r2, #1
 2237 006a ABEBC209 		sub	r9, fp, r2, lsl #3
 2238 006e 5FFA88F2 		uxtb	r2, r8
 2239              	.LVL242:
 2240 0072 B846     		mov	r8, r7
 2241 0074 DBB2     		uxtb	r3, r3
 2242 0076 0133     		adds	r3, r3, #1
 2243 0078 0492     		str	r2, [sp, #16]
 2244              	.LBB183:
 2245              	.LBB180:
 2246              	.LBB178:
 203:u8g/u8g_font.c **** }
 2247              		.loc 1 203 0
 2248 007a B244     		add	r10, r10, r6
 2249              	.LVL243:
 2250 007c 0593     		str	r3, [sp, #20]
 2251 007e 5FFA89F9 		uxtb	r9, r9
 2252              	.LVL244:
 2253              	.L172:
 2254              	.LBE178:
 2255              	.LBE180:
 2256              	.LBE183:
 756:u8g/u8g_font.c ****     {
 2257              		.loc 1 756 0
 2258 0082 039B     		ldr	r3, [sp, #12]
 2259 0084 83B1     		cbz	r3, .L174
 755:u8g/u8g_font.c ****     for( i = 0; i < w; i++ )
 2260              		.loc 1 755 0
 2261 0086 5C46     		mov	r4, fp
 756:u8g/u8g_font.c ****     {
 2262              		.loc 1 756 0
 2263 0088 5646     		mov	r6, r10
 2264 008a 114F     		ldr	r7, .L183+12
 2265              	.LVL245:
 2266              	.L173:
 758:u8g/u8g_font.c ****       data++;
 2267              		.loc 1 758 0 discriminator 3
 2268 008c 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 2269              	.LVL246:
 2270 0090 0323     		movs	r3, #3
 2271 0092 0092     		str	r2, [sp]
 2272 0094 2246     		mov	r2, r4
 760:u8g/u8g_font.c ****     }
 2273              		.loc 1 760 0 discriminator 3
 2274 0096 083C     		subs	r4, r4, #8
 2275              	.LVL247:
 758:u8g/u8g_font.c ****       data++;
 2276              		.loc 1 758 0 discriminator 3
 2277 0098 2946     		mov	r1, r5
 2278 009a 4046     		mov	r0, r8
 760:u8g/u8g_font.c ****     }
 2279              		.loc 1 760 0 discriminator 3
 2280 009c E4B2     		uxtb	r4, r4
 758:u8g/u8g_font.c ****       data++;
 2281              		.loc 1 758 0 discriminator 3
 2282 009e B847     		blx	r7
 2283              	.LVL248:
 756:u8g/u8g_font.c ****     {
 2284              		.loc 1 756 0 discriminator 3
 2285 00a0 4C45     		cmp	r4, r9
 2286 00a2 F3D1     		bne	.L173
 2287 00a4 059B     		ldr	r3, [sp, #20]
 2288 00a6 9A44     		add	r10, r10, r3
 2289              	.LVL249:
 2290              	.L174:
 762:u8g/u8g_font.c ****   }
 2291              		.loc 1 762 0 discriminator 2
 2292 00a8 0135     		adds	r5, r5, #1
 2293              	.LVL250:
 753:u8g/u8g_font.c ****   {
 2294              		.loc 1 753 0 discriminator 2
 2295 00aa 049B     		ldr	r3, [sp, #16]
 762:u8g/u8g_font.c ****   }
 2296              		.loc 1 762 0 discriminator 2
 2297 00ac EDB2     		uxtb	r5, r5
 2298              	.LVL251:
 753:u8g/u8g_font.c ****   {
 2299              		.loc 1 753 0 discriminator 2
 2300 00ae AB42     		cmp	r3, r5
 2301 00b0 E7D1     		bne	.L172
 2302 00b2 4746     		mov	r7, r8
 2303              	.LVL252:
 2304              	.L171:
 764:u8g/u8g_font.c **** }
 2305              		.loc 1 764 0
 2306 00b4 97F91C00 		ldrsb	r0, [r7, #28]
 765:u8g/u8g_font.c **** 
 2307              		.loc 1 765 0
 2308 00b8 07B0     		add	sp, sp, #28
 2309              	.LCFI29:
 2310              		.cfi_remember_state
 2311              		.cfi_def_cfa_offset 36
 2312              		@ sp needed
 2313 00ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2314              	.LVL253:
 2315              	.L175:
 2316              	.LCFI30:
 2317              		.cfi_restore_state
 2318 00be 07B0     		add	sp, sp, #28
 2319              	.LCFI31:
 2320              		.cfi_def_cfa_offset 36
 2321              		@ sp needed
 2322 00c0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2323              	.LVL254:
 2324              	.L184:
 2325              		.align	2
 2326              	.L183:
 2327 00c4 00000000 		.word	u8g_GetGlyph
 2328 00c8 00000000 		.word	u8g_font_GetFontGlyphStructureSize.isra.1
 2329 00cc 00000000 		.word	u8g_IsBBXIntersection
 2330 00d0 00000000 		.word	u8g_Draw8Pixel
 2331              		.cfi_endproc
 2332              	.LFE36:
 2334              		.section	.text.u8g_DrawGlyph270,"ax",%progbits
 2335              		.align	1
 2336              		.p2align 2,,3
 2337              		.global	u8g_DrawGlyph270
 2338              		.syntax unified
 2339              		.thumb
 2340              		.thumb_func
 2341              		.fpu softvfp
 2343              	u8g_DrawGlyph270:
 2344              	.LFB37:
 768:u8g/u8g_font.c ****   x += u8g->font_calc_vref(u8g);
 2345              		.loc 1 768 0
 2346              		.cfi_startproc
 2347              		@ args = 0, pretend = 0, frame = 0
 2348              		@ frame_needed = 0, uses_anonymous_args = 0
 2349              	.LVL255:
 2350 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2351              	.LCFI32:
 2352              		.cfi_def_cfa_offset 24
 2353              		.cfi_offset 4, -24
 2354              		.cfi_offset 5, -20
 2355              		.cfi_offset 6, -16
 2356              		.cfi_offset 7, -12
 2357              		.cfi_offset 8, -8
 2358              		.cfi_offset 14, -4
 769:u8g/u8g_font.c ****   return u8g_draw_glyph270(u8g, x, y, encoding);
 2359              		.loc 1 769 0
 2360 0004 476A     		ldr	r7, [r0, #36]
 768:u8g/u8g_font.c ****   x += u8g->font_calc_vref(u8g);
 2361              		.loc 1 768 0
 2362 0006 0546     		mov	r5, r0
 2363 0008 0C46     		mov	r4, r1
 2364 000a 1646     		mov	r6, r2
 2365 000c 9846     		mov	r8, r3
 769:u8g/u8g_font.c ****   return u8g_draw_glyph270(u8g, x, y, encoding);
 2366              		.loc 1 769 0
 2367 000e B847     		blx	r7
 2368              	.LVL256:
 2369 0010 0119     		adds	r1, r0, r4
 770:u8g/u8g_font.c **** }
 2370              		.loc 1 770 0
 2371 0012 044C     		ldr	r4, .L187
 2372              	.LVL257:
 2373 0014 4346     		mov	r3, r8
 2374 0016 3246     		mov	r2, r6
 2375 0018 2846     		mov	r0, r5
 2376 001a A446     		mov	ip, r4
 771:u8g/u8g_font.c **** 
 2377              		.loc 1 771 0
 2378 001c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2379              	.LCFI33:
 2380              		.cfi_restore 14
 2381              		.cfi_restore 8
 2382              		.cfi_restore 7
 2383              		.cfi_restore 6
 2384              		.cfi_restore 5
 2385              		.cfi_restore 4
 2386              		.cfi_def_cfa_offset 0
 2387              	.LVL258:
 770:u8g/u8g_font.c **** }
 2388              		.loc 1 770 0
 2389 0020 C9B2     		uxtb	r1, r1
 2390 0022 6047     		bx	ip
 2391              	.LVL259:
 2392              	.L188:
 2393              		.align	2
 2394              	.L187:
 2395 0024 00000000 		.word	u8g_draw_glyph270
 2396              		.cfi_endproc
 2397              	.LFE37:
 2399              		.section	.text.u8g_DrawStr,"ax",%progbits
 2400              		.align	1
 2401              		.p2align 2,,3
 2402              		.global	u8g_DrawStr
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
 2406              		.fpu softvfp
 2408              	u8g_DrawStr:
 2409              	.LFB38:
 794:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2410              		.loc 1 794 0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 0
 2413              		@ frame_needed = 0, uses_anonymous_args = 0
 2414              	.LVL260:
 2415 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2416              	.LCFI34:
 2417              		.cfi_def_cfa_offset 32
 2418              		.cfi_offset 3, -32
 2419              		.cfi_offset 4, -28
 2420              		.cfi_offset 5, -24
 2421              		.cfi_offset 6, -20
 2422              		.cfi_offset 7, -16
 2423              		.cfi_offset 8, -12
 2424              		.cfi_offset 9, -8
 2425              		.cfi_offset 14, -4
 794:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2426              		.loc 1 794 0
 2427 0004 1D46     		mov	r5, r3
 801:u8g/u8g_font.c ****   
 2428              		.loc 1 801 0
 2429 0006 436A     		ldr	r3, [r0, #36]
 2430              	.LVL261:
 794:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2431              		.loc 1 794 0
 2432 0008 1646     		mov	r6, r2
 2433 000a 0746     		mov	r7, r0
 2434 000c 0C46     		mov	r4, r1
 801:u8g/u8g_font.c ****   
 2435              		.loc 1 801 0
 2436 000e 9847     		blx	r3
 2437              	.LVL262:
 803:u8g/u8g_font.c ****   {
 2438              		.loc 1 803 0
 2439 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 801:u8g/u8g_font.c ****   
 2440              		.loc 1 801 0
 2441 0012 0644     		add	r6, r6, r0
 2442              	.LVL263:
 803:u8g/u8g_font.c ****   {
 2443              		.loc 1 803 0
 2444 0014 ABB1     		cbz	r3, .L192
 795:u8g/u8g_font.c ****   int8_t d;
 2445              		.loc 1 795 0
 2446 0016 4FF00009 		mov	r9, #0
 2447 001a DFF83080 		ldr	r8, .L195
 2448 001e F6B2     		uxtb	r6, r6
 2449              	.LVL264:
 2450              	.L191:
 805:u8g/u8g_font.c ****     x += d;
 2451              		.loc 1 805 0
 2452 0020 2146     		mov	r1, r4
 2453 0022 3246     		mov	r2, r6
 2454 0024 3846     		mov	r0, r7
 2455 0026 C047     		blx	r8
 2456              	.LVL265:
 803:u8g/u8g_font.c ****   {
 2457              		.loc 1 803 0
 2458 0028 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 2459              	.LVL266:
 806:u8g/u8g_font.c ****     t += d;
 2460              		.loc 1 806 0
 2461 002c C0B2     		uxtb	r0, r0
 2462 002e 0444     		add	r4, r4, r0
 2463              	.LVL267:
 807:u8g/u8g_font.c ****     s++;
 2464              		.loc 1 807 0
 2465 0030 4844     		add	r0, r0, r9
 2466              	.LVL268:
 806:u8g/u8g_font.c ****     t += d;
 2467              		.loc 1 806 0
 2468 0032 E4B2     		uxtb	r4, r4
 2469              	.LVL269:
 807:u8g/u8g_font.c ****     s++;
 2470              		.loc 1 807 0
 2471 0034 5FFA80F9 		uxtb	r9, r0
 2472              	.LVL270:
 803:u8g/u8g_font.c ****   {
 2473              		.loc 1 803 0
 2474 0038 002B     		cmp	r3, #0
 2475 003a F1D1     		bne	.L191
 811:u8g/u8g_font.c **** 
 2476              		.loc 1 811 0
 2477 003c 4846     		mov	r0, r9
 2478 003e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2479              	.LVL271:
 2480              	.L192:
 795:u8g/u8g_font.c ****   int8_t d;
 2481              		.loc 1 795 0
 2482 0042 9946     		mov	r9, r3
 811:u8g/u8g_font.c **** 
 2483              		.loc 1 811 0
 2484 0044 4846     		mov	r0, r9
 2485 0046 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2486              	.LVL272:
 2487              	.L196:
 2488 004a 00BF     		.align	2
 2489              	.L195:
 2490 004c 00000000 		.word	u8g_draw_glyph
 2491              		.cfi_endproc
 2492              	.LFE38:
 2494              		.section	.text.u8g_DrawStr90,"ax",%progbits
 2495              		.align	1
 2496              		.p2align 2,,3
 2497              		.global	u8g_DrawStr90
 2498              		.syntax unified
 2499              		.thumb
 2500              		.thumb_func
 2501              		.fpu softvfp
 2503              	u8g_DrawStr90:
 2504              	.LFB39:
 814:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2505              		.loc 1 814 0
 2506              		.cfi_startproc
 2507              		@ args = 0, pretend = 0, frame = 0
 2508              		@ frame_needed = 0, uses_anonymous_args = 0
 2509              	.LVL273:
 2510 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2511              	.LCFI35:
 2512              		.cfi_def_cfa_offset 32
 2513              		.cfi_offset 3, -32
 2514              		.cfi_offset 4, -28
 2515              		.cfi_offset 5, -24
 2516              		.cfi_offset 6, -20
 2517              		.cfi_offset 7, -16
 2518              		.cfi_offset 8, -12
 2519              		.cfi_offset 9, -8
 2520              		.cfi_offset 14, -4
 814:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2521              		.loc 1 814 0
 2522 0004 1D46     		mov	r5, r3
 818:u8g/u8g_font.c **** 
 2523              		.loc 1 818 0
 2524 0006 436A     		ldr	r3, [r0, #36]
 2525              	.LVL274:
 814:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2526              		.loc 1 814 0
 2527 0008 0E46     		mov	r6, r1
 2528 000a 0746     		mov	r7, r0
 2529 000c 1446     		mov	r4, r2
 818:u8g/u8g_font.c **** 
 2530              		.loc 1 818 0
 2531 000e 9847     		blx	r3
 2532              	.LVL275:
 820:u8g/u8g_font.c ****   {
 2533              		.loc 1 820 0
 2534 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 818:u8g/u8g_font.c **** 
 2535              		.loc 1 818 0
 2536 0012 361A     		subs	r6, r6, r0
 2537              	.LVL276:
 820:u8g/u8g_font.c ****   {
 2538              		.loc 1 820 0
 2539 0014 ABB1     		cbz	r3, .L200
 815:u8g/u8g_font.c ****   int8_t d;
 2540              		.loc 1 815 0
 2541 0016 4FF00009 		mov	r9, #0
 2542 001a DFF83080 		ldr	r8, .L203
 2543 001e F6B2     		uxtb	r6, r6
 2544              	.LVL277:
 2545              	.L199:
 822:u8g/u8g_font.c ****     y += d;
 2546              		.loc 1 822 0
 2547 0020 2246     		mov	r2, r4
 2548 0022 3146     		mov	r1, r6
 2549 0024 3846     		mov	r0, r7
 2550 0026 C047     		blx	r8
 2551              	.LVL278:
 820:u8g/u8g_font.c ****   {
 2552              		.loc 1 820 0
 2553 0028 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 2554              	.LVL279:
 823:u8g/u8g_font.c ****     t += d;
 2555              		.loc 1 823 0
 2556 002c C0B2     		uxtb	r0, r0
 2557 002e 0444     		add	r4, r4, r0
 2558              	.LVL280:
 824:u8g/u8g_font.c ****     s++;
 2559              		.loc 1 824 0
 2560 0030 4844     		add	r0, r0, r9
 2561              	.LVL281:
 823:u8g/u8g_font.c ****     t += d;
 2562              		.loc 1 823 0
 2563 0032 E4B2     		uxtb	r4, r4
 2564              	.LVL282:
 824:u8g/u8g_font.c ****     s++;
 2565              		.loc 1 824 0
 2566 0034 5FFA80F9 		uxtb	r9, r0
 2567              	.LVL283:
 820:u8g/u8g_font.c ****   {
 2568              		.loc 1 820 0
 2569 0038 002B     		cmp	r3, #0
 2570 003a F1D1     		bne	.L199
 828:u8g/u8g_font.c **** 
 2571              		.loc 1 828 0
 2572 003c 4846     		mov	r0, r9
 2573 003e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2574              	.LVL284:
 2575              	.L200:
 815:u8g/u8g_font.c ****   int8_t d;
 2576              		.loc 1 815 0
 2577 0042 9946     		mov	r9, r3
 828:u8g/u8g_font.c **** 
 2578              		.loc 1 828 0
 2579 0044 4846     		mov	r0, r9
 2580 0046 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2581              	.LVL285:
 2582              	.L204:
 2583 004a 00BF     		.align	2
 2584              	.L203:
 2585 004c 00000000 		.word	u8g_draw_glyph90
 2586              		.cfi_endproc
 2587              	.LFE39:
 2589              		.section	.text.u8g_DrawStr180,"ax",%progbits
 2590              		.align	1
 2591              		.p2align 2,,3
 2592              		.global	u8g_DrawStr180
 2593              		.syntax unified
 2594              		.thumb
 2595              		.thumb_func
 2596              		.fpu softvfp
 2598              	u8g_DrawStr180:
 2599              	.LFB40:
 831:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2600              		.loc 1 831 0
 2601              		.cfi_startproc
 2602              		@ args = 0, pretend = 0, frame = 0
 2603              		@ frame_needed = 0, uses_anonymous_args = 0
 2604              	.LVL286:
 2605 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2606              	.LCFI36:
 2607              		.cfi_def_cfa_offset 32
 2608              		.cfi_offset 3, -32
 2609              		.cfi_offset 4, -28
 2610              		.cfi_offset 5, -24
 2611              		.cfi_offset 6, -20
 2612              		.cfi_offset 7, -16
 2613              		.cfi_offset 8, -12
 2614              		.cfi_offset 9, -8
 2615              		.cfi_offset 14, -4
 831:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2616              		.loc 1 831 0
 2617 0004 1D46     		mov	r5, r3
 835:u8g/u8g_font.c ****   
 2618              		.loc 1 835 0
 2619 0006 436A     		ldr	r3, [r0, #36]
 2620              	.LVL287:
 831:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2621              		.loc 1 831 0
 2622 0008 1646     		mov	r6, r2
 2623 000a 0746     		mov	r7, r0
 2624 000c 0C46     		mov	r4, r1
 835:u8g/u8g_font.c ****   
 2625              		.loc 1 835 0
 2626 000e 9847     		blx	r3
 2627              	.LVL288:
 837:u8g/u8g_font.c ****   {
 2628              		.loc 1 837 0
 2629 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 835:u8g/u8g_font.c ****   
 2630              		.loc 1 835 0
 2631 0012 361A     		subs	r6, r6, r0
 2632              	.LVL289:
 837:u8g/u8g_font.c ****   {
 2633              		.loc 1 837 0
 2634 0014 ABB1     		cbz	r3, .L208
 832:u8g/u8g_font.c ****   int8_t d;
 2635              		.loc 1 832 0
 2636 0016 4FF00009 		mov	r9, #0
 2637 001a DFF83080 		ldr	r8, .L211
 2638 001e F6B2     		uxtb	r6, r6
 2639              	.LVL290:
 2640              	.L207:
 839:u8g/u8g_font.c ****     x -= d;
 2641              		.loc 1 839 0
 2642 0020 2146     		mov	r1, r4
 2643 0022 3246     		mov	r2, r6
 2644 0024 3846     		mov	r0, r7
 2645 0026 C047     		blx	r8
 2646              	.LVL291:
 837:u8g/u8g_font.c ****   {
 2647              		.loc 1 837 0
 2648 0028 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 2649              	.LVL292:
 840:u8g/u8g_font.c ****     t += d;
 2650              		.loc 1 840 0
 2651 002c C0B2     		uxtb	r0, r0
 2652 002e 241A     		subs	r4, r4, r0
 2653              	.LVL293:
 841:u8g/u8g_font.c ****     s++;
 2654              		.loc 1 841 0
 2655 0030 4844     		add	r0, r0, r9
 2656              	.LVL294:
 840:u8g/u8g_font.c ****     t += d;
 2657              		.loc 1 840 0
 2658 0032 E4B2     		uxtb	r4, r4
 2659              	.LVL295:
 841:u8g/u8g_font.c ****     s++;
 2660              		.loc 1 841 0
 2661 0034 5FFA80F9 		uxtb	r9, r0
 2662              	.LVL296:
 837:u8g/u8g_font.c ****   {
 2663              		.loc 1 837 0
 2664 0038 002B     		cmp	r3, #0
 2665 003a F1D1     		bne	.L207
 845:u8g/u8g_font.c **** 
 2666              		.loc 1 845 0
 2667 003c 4846     		mov	r0, r9
 2668 003e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2669              	.LVL297:
 2670              	.L208:
 832:u8g/u8g_font.c ****   int8_t d;
 2671              		.loc 1 832 0
 2672 0042 9946     		mov	r9, r3
 845:u8g/u8g_font.c **** 
 2673              		.loc 1 845 0
 2674 0044 4846     		mov	r0, r9
 2675 0046 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2676              	.LVL298:
 2677              	.L212:
 2678 004a 00BF     		.align	2
 2679              	.L211:
 2680 004c 00000000 		.word	u8g_draw_glyph180
 2681              		.cfi_endproc
 2682              	.LFE40:
 2684              		.section	.text.u8g_DrawStr270,"ax",%progbits
 2685              		.align	1
 2686              		.p2align 2,,3
 2687              		.global	u8g_DrawStr270
 2688              		.syntax unified
 2689              		.thumb
 2690              		.thumb_func
 2691              		.fpu softvfp
 2693              	u8g_DrawStr270:
 2694              	.LFB41:
 848:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2695              		.loc 1 848 0
 2696              		.cfi_startproc
 2697              		@ args = 0, pretend = 0, frame = 0
 2698              		@ frame_needed = 0, uses_anonymous_args = 0
 2699              	.LVL299:
 2700 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2701              	.LCFI37:
 2702              		.cfi_def_cfa_offset 32
 2703              		.cfi_offset 3, -32
 2704              		.cfi_offset 4, -28
 2705              		.cfi_offset 5, -24
 2706              		.cfi_offset 6, -20
 2707              		.cfi_offset 7, -16
 2708              		.cfi_offset 8, -12
 2709              		.cfi_offset 9, -8
 2710              		.cfi_offset 14, -4
 848:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2711              		.loc 1 848 0
 2712 0004 1D46     		mov	r5, r3
 852:u8g/u8g_font.c **** 
 2713              		.loc 1 852 0
 2714 0006 436A     		ldr	r3, [r0, #36]
 2715              	.LVL300:
 848:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2716              		.loc 1 848 0
 2717 0008 0E46     		mov	r6, r1
 2718 000a 0746     		mov	r7, r0
 2719 000c 1446     		mov	r4, r2
 852:u8g/u8g_font.c **** 
 2720              		.loc 1 852 0
 2721 000e 9847     		blx	r3
 2722              	.LVL301:
 854:u8g/u8g_font.c ****   {
 2723              		.loc 1 854 0
 2724 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 852:u8g/u8g_font.c **** 
 2725              		.loc 1 852 0
 2726 0012 0644     		add	r6, r6, r0
 2727              	.LVL302:
 854:u8g/u8g_font.c ****   {
 2728              		.loc 1 854 0
 2729 0014 ABB1     		cbz	r3, .L216
 849:u8g/u8g_font.c ****   int8_t d;
 2730              		.loc 1 849 0
 2731 0016 4FF00009 		mov	r9, #0
 2732 001a DFF83080 		ldr	r8, .L219
 2733 001e F6B2     		uxtb	r6, r6
 2734              	.LVL303:
 2735              	.L215:
 856:u8g/u8g_font.c ****     y -= d;
 2736              		.loc 1 856 0
 2737 0020 2246     		mov	r2, r4
 2738 0022 3146     		mov	r1, r6
 2739 0024 3846     		mov	r0, r7
 2740 0026 C047     		blx	r8
 2741              	.LVL304:
 854:u8g/u8g_font.c ****   {
 2742              		.loc 1 854 0
 2743 0028 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 2744              	.LVL305:
 857:u8g/u8g_font.c ****     t += d;
 2745              		.loc 1 857 0
 2746 002c C0B2     		uxtb	r0, r0
 2747 002e 241A     		subs	r4, r4, r0
 2748              	.LVL306:
 858:u8g/u8g_font.c ****     s++;
 2749              		.loc 1 858 0
 2750 0030 4844     		add	r0, r0, r9
 2751              	.LVL307:
 857:u8g/u8g_font.c ****     t += d;
 2752              		.loc 1 857 0
 2753 0032 E4B2     		uxtb	r4, r4
 2754              	.LVL308:
 858:u8g/u8g_font.c ****     s++;
 2755              		.loc 1 858 0
 2756 0034 5FFA80F9 		uxtb	r9, r0
 2757              	.LVL309:
 854:u8g/u8g_font.c ****   {
 2758              		.loc 1 854 0
 2759 0038 002B     		cmp	r3, #0
 2760 003a F1D1     		bne	.L215
 862:u8g/u8g_font.c **** 
 2761              		.loc 1 862 0
 2762 003c 4846     		mov	r0, r9
 2763 003e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2764              	.LVL310:
 2765              	.L216:
 849:u8g/u8g_font.c ****   int8_t d;
 2766              		.loc 1 849 0
 2767 0042 9946     		mov	r9, r3
 862:u8g/u8g_font.c **** 
 2768              		.loc 1 862 0
 2769 0044 4846     		mov	r0, r9
 2770 0046 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2771              	.LVL311:
 2772              	.L220:
 2773 004a 00BF     		.align	2
 2774              	.L219:
 2775 004c 00000000 		.word	u8g_draw_glyph270
 2776              		.cfi_endproc
 2777              	.LFE41:
 2779              		.section	.text.u8g_DrawStrDir,"ax",%progbits
 2780              		.align	1
 2781              		.p2align 2,,3
 2782              		.global	u8g_DrawStrDir
 2783              		.syntax unified
 2784              		.thumb
 2785              		.thumb_func
 2786              		.fpu softvfp
 2788              	u8g_DrawStrDir:
 2789              	.LFB42:
 865:u8g/u8g_font.c ****   switch(dir)
 2790              		.loc 1 865 0
 2791              		.cfi_startproc
 2792              		@ args = 4, pretend = 0, frame = 0
 2793              		@ frame_needed = 0, uses_anonymous_args = 0
 2794              		@ link register save eliminated.
 2795              	.LVL312:
 2796 0000 10B4     		push	{r4}
 2797              	.LCFI38:
 2798              		.cfi_def_cfa_offset 4
 2799              		.cfi_offset 4, -4
 865:u8g/u8g_font.c ****   switch(dir)
 2800              		.loc 1 865 0
 2801 0002 019C     		ldr	r4, [sp, #4]
 866:u8g/u8g_font.c ****   {
 2802              		.loc 1 866 0
 2803 0004 032B     		cmp	r3, #3
 2804 0006 17D8     		bhi	.L222
 2805 0008 DFE803F0 		tbb	[pc, r3]
 2806              	.L224:
 2807 000c 11       		.byte	(.L223-.L224)/2
 2808 000d 0C       		.byte	(.L225-.L224)/2
 2809 000e 07       		.byte	(.L226-.L224)/2
 2810 000f 02       		.byte	(.L227-.L224)/2
 2811              		.p2align 1
 2812              	.L227:
 875:u8g/u8g_font.c ****   }
 2813              		.loc 1 875 0
 2814 0010 2346     		mov	r3, r4
 2815              	.LVL313:
 2816 0012 0B4C     		ldr	r4, .L229
 2817 0014 A446     		mov	ip, r4
 878:u8g/u8g_font.c **** 
 2818              		.loc 1 878 0
 2819 0016 10BC     		pop	{r4}
 2820              	.LCFI39:
 2821              		.cfi_remember_state
 2822              		.cfi_restore 4
 2823              		.cfi_def_cfa_offset 0
 2824              	.LVL314:
 875:u8g/u8g_font.c ****   }
 2825              		.loc 1 875 0
 2826 0018 6047     		bx	ip
 2827              	.LVL315:
 2828              	.L226:
 2829              	.LCFI40:
 2830              		.cfi_restore_state
 873:u8g/u8g_font.c ****     case 3:
 2831              		.loc 1 873 0
 2832 001a 2346     		mov	r3, r4
 2833              	.LVL316:
 2834 001c 094C     		ldr	r4, .L229+4
 2835 001e A446     		mov	ip, r4
 878:u8g/u8g_font.c **** 
 2836              		.loc 1 878 0
 2837 0020 10BC     		pop	{r4}
 2838              	.LCFI41:
 2839              		.cfi_remember_state
 2840              		.cfi_restore 4
 2841              		.cfi_def_cfa_offset 0
 2842              	.LVL317:
 873:u8g/u8g_font.c ****     case 3:
 2843              		.loc 1 873 0
 2844 0022 6047     		bx	ip
 2845              	.LVL318:
 2846              	.L225:
 2847              	.LCFI42:
 2848              		.cfi_restore_state
 871:u8g/u8g_font.c ****     case 2:
 2849              		.loc 1 871 0
 2850 0024 2346     		mov	r3, r4
 2851              	.LVL319:
 2852 0026 084C     		ldr	r4, .L229+8
 2853 0028 A446     		mov	ip, r4
 878:u8g/u8g_font.c **** 
 2854              		.loc 1 878 0
 2855 002a 10BC     		pop	{r4}
 2856              	.LCFI43:
 2857              		.cfi_remember_state
 2858              		.cfi_restore 4
 2859              		.cfi_def_cfa_offset 0
 2860              	.LVL320:
 871:u8g/u8g_font.c ****     case 2:
 2861              		.loc 1 871 0
 2862 002c 6047     		bx	ip
 2863              	.LVL321:
 2864              	.L223:
 2865              	.LCFI44:
 2866              		.cfi_restore_state
 869:u8g/u8g_font.c ****     case 1:
 2867              		.loc 1 869 0
 2868 002e 2346     		mov	r3, r4
 2869              	.LVL322:
 2870 0030 064C     		ldr	r4, .L229+12
 2871 0032 A446     		mov	ip, r4
 878:u8g/u8g_font.c **** 
 2872              		.loc 1 878 0
 2873 0034 10BC     		pop	{r4}
 2874              	.LCFI45:
 2875              		.cfi_restore 4
 2876              		.cfi_def_cfa_offset 0
 2877              	.LVL323:
 869:u8g/u8g_font.c ****     case 1:
 2878              		.loc 1 869 0
 2879 0036 6047     		bx	ip
 2880              	.LVL324:
 2881              	.L222:
 878:u8g/u8g_font.c **** 
 2882              		.loc 1 878 0
 2883 0038 0020     		movs	r0, #0
 2884              	.LVL325:
 2885 003a 10BC     		pop	{r4}
 2886              	.LVL326:
 2887 003c 7047     		bx	lr
 2888              	.L230:
 2889 003e 00BF     		.align	2
 2890              	.L229:
 2891 0040 00000000 		.word	u8g_DrawStr270
 2892 0044 00000000 		.word	u8g_DrawStr180
 2893 0048 00000000 		.word	u8g_DrawStr90
 2894 004c 00000000 		.word	u8g_DrawStr
 2895              		.cfi_endproc
 2896              	.LFE42:
 2898              		.section	.text.u8g_DrawStrP,"ax",%progbits
 2899              		.align	1
 2900              		.p2align 2,,3
 2901              		.global	u8g_DrawStrP
 2902              		.syntax unified
 2903              		.thumb
 2904              		.thumb_func
 2905              		.fpu softvfp
 2907              	u8g_DrawStrP:
 2908              	.LFB43:
 881:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2909              		.loc 1 881 0
 2910              		.cfi_startproc
 2911              		@ args = 0, pretend = 0, frame = 0
 2912              		@ frame_needed = 0, uses_anonymous_args = 0
 2913              	.LVL327:
 2914 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2915              	.LCFI46:
 2916              		.cfi_def_cfa_offset 32
 2917              		.cfi_offset 3, -32
 2918              		.cfi_offset 4, -28
 2919              		.cfi_offset 5, -24
 2920              		.cfi_offset 6, -20
 2921              		.cfi_offset 7, -16
 2922              		.cfi_offset 8, -12
 2923              		.cfi_offset 9, -8
 2924              		.cfi_offset 14, -4
 881:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2925              		.loc 1 881 0
 2926 0004 1D46     		mov	r5, r3
 886:u8g/u8g_font.c ****   
 2927              		.loc 1 886 0
 2928 0006 436A     		ldr	r3, [r0, #36]
 2929              	.LVL328:
 881:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 2930              		.loc 1 881 0
 2931 0008 1646     		mov	r6, r2
 2932 000a 0746     		mov	r7, r0
 2933 000c 0C46     		mov	r4, r1
 886:u8g/u8g_font.c ****   
 2934              		.loc 1 886 0
 2935 000e 9847     		blx	r3
 2936              	.LVL329:
 890:u8g/u8g_font.c ****     if ( c == '\0' )
 2937              		.loc 1 890 0
 2938 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 886:u8g/u8g_font.c ****   
 2939              		.loc 1 886 0
 2940 0012 0644     		add	r6, r6, r0
 2941              	.LVL330:
 891:u8g/u8g_font.c ****       break;
 2942              		.loc 1 891 0
 2943 0014 ABB1     		cbz	r3, .L234
 882:u8g/u8g_font.c ****   int8_t d;
 2944              		.loc 1 882 0
 2945 0016 4FF00009 		mov	r9, #0
 2946 001a DFF83080 		ldr	r8, .L237
 2947 001e F6B2     		uxtb	r6, r6
 2948              	.LVL331:
 2949              	.L233:
 893:u8g/u8g_font.c ****     x += d;
 2950              		.loc 1 893 0
 2951 0020 2146     		mov	r1, r4
 2952 0022 3246     		mov	r2, r6
 2953 0024 3846     		mov	r0, r7
 2954 0026 C047     		blx	r8
 2955              	.LVL332:
 890:u8g/u8g_font.c ****     if ( c == '\0' )
 2956              		.loc 1 890 0
 2957 0028 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 2958              	.LVL333:
 894:u8g/u8g_font.c ****     t += d;
 2959              		.loc 1 894 0
 2960 002c C0B2     		uxtb	r0, r0
 2961 002e 0444     		add	r4, r4, r0
 2962              	.LVL334:
 895:u8g/u8g_font.c ****     s++;
 2963              		.loc 1 895 0
 2964 0030 4844     		add	r0, r0, r9
 2965              	.LVL335:
 894:u8g/u8g_font.c ****     t += d;
 2966              		.loc 1 894 0
 2967 0032 E4B2     		uxtb	r4, r4
 2968              	.LVL336:
 895:u8g/u8g_font.c ****     s++;
 2969              		.loc 1 895 0
 2970 0034 5FFA80F9 		uxtb	r9, r0
 2971              	.LVL337:
 891:u8g/u8g_font.c ****       break;
 2972              		.loc 1 891 0
 2973 0038 002B     		cmp	r3, #0
 2974 003a F1D1     		bne	.L233
 899:u8g/u8g_font.c **** 
 2975              		.loc 1 899 0
 2976 003c 4846     		mov	r0, r9
 2977 003e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2978              	.LVL338:
 2979              	.L234:
 882:u8g/u8g_font.c ****   int8_t d;
 2980              		.loc 1 882 0
 2981 0042 9946     		mov	r9, r3
 899:u8g/u8g_font.c **** 
 2982              		.loc 1 899 0
 2983 0044 4846     		mov	r0, r9
 2984 0046 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2985              	.LVL339:
 2986              	.L238:
 2987 004a 00BF     		.align	2
 2988              	.L237:
 2989 004c 00000000 		.word	u8g_draw_glyph
 2990              		.cfi_endproc
 2991              	.LFE43:
 2993              		.section	.text.u8g_DrawStr90P,"ax",%progbits
 2994              		.align	1
 2995              		.p2align 2,,3
 2996              		.global	u8g_DrawStr90P
 2997              		.syntax unified
 2998              		.thumb
 2999              		.thumb_func
 3000              		.fpu softvfp
 3002              	u8g_DrawStr90P:
 3003              	.LFB44:
 902:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 3004              		.loc 1 902 0
 3005              		.cfi_startproc
 3006              		@ args = 0, pretend = 0, frame = 0
 3007              		@ frame_needed = 0, uses_anonymous_args = 0
 3008              	.LVL340:
 3009 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3010              	.LCFI47:
 3011              		.cfi_def_cfa_offset 32
 3012              		.cfi_offset 4, -32
 3013              		.cfi_offset 5, -28
 3014              		.cfi_offset 6, -24
 3015              		.cfi_offset 7, -20
 3016              		.cfi_offset 8, -16
 3017              		.cfi_offset 9, -12
 3018              		.cfi_offset 10, -8
 3019              		.cfi_offset 14, -4
 902:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 3020              		.loc 1 902 0
 3021 0004 1F46     		mov	r7, r3
 906:u8g/u8g_font.c **** 
 3022              		.loc 1 906 0
 3023 0006 436A     		ldr	r3, [r0, #36]
 3024              	.LVL341:
 902:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 3025              		.loc 1 902 0
 3026 0008 8846     		mov	r8, r1
 3027 000a 0646     		mov	r6, r0
 3028 000c 1446     		mov	r4, r2
 906:u8g/u8g_font.c **** 
 3029              		.loc 1 906 0
 3030 000e 9847     		blx	r3
 3031              	.LVL342:
 908:u8g/u8g_font.c ****   {
 3032              		.loc 1 908 0
 3033 0010 3D78     		ldrb	r5, [r7]	@ zero_extendqisi2
 906:u8g/u8g_font.c **** 
 3034              		.loc 1 906 0
 3035 0012 A8EB0008 		sub	r8, r8, r0
 3036              	.LVL343:
 908:u8g/u8g_font.c ****   {
 3037              		.loc 1 908 0
 3038 0016 E5B1     		cbz	r5, .L242
 903:u8g/u8g_font.c ****   int8_t d;
 3039              		.loc 1 903 0
 3040 0018 4FF0000A 		mov	r10, #0
 3041 001c DFF83C90 		ldr	r9, .L245
 3042 0020 5FFA88F8 		uxtb	r8, r8
 3043              	.LVL344:
 3044              	.L241:
 3045              	.LBB184:
 3046              	.LBB185:
 663:u8g/u8g_font.c ****   return u8g_draw_glyph90(u8g, x, y, encoding);
 3047              		.loc 1 663 0
 3048 0024 736A     		ldr	r3, [r6, #36]
 3049 0026 3046     		mov	r0, r6
 3050 0028 9847     		blx	r3
 3051              	.LVL345:
 3052 002a A8EB0001 		sub	r1, r8, r0
 664:u8g/u8g_font.c **** }
 3053              		.loc 1 664 0
 3054 002e 2B46     		mov	r3, r5
 3055 0030 2246     		mov	r2, r4
 3056 0032 C9B2     		uxtb	r1, r1
 3057 0034 3046     		mov	r0, r6
 3058              	.LVL346:
 3059 0036 C847     		blx	r9
 3060              	.LVL347:
 3061              	.LBE185:
 3062              	.LBE184:
 908:u8g/u8g_font.c ****   {
 3063              		.loc 1 908 0
 3064 0038 17F8015F 		ldrb	r5, [r7, #1]!	@ zero_extendqisi2
 3065              	.LVL348:
 911:u8g/u8g_font.c ****     t += d;
 3066              		.loc 1 911 0
 3067 003c C0B2     		uxtb	r0, r0
 3068 003e 0444     		add	r4, r4, r0
 3069              	.LVL349:
 912:u8g/u8g_font.c ****     s++;
 3070              		.loc 1 912 0
 3071 0040 5044     		add	r0, r0, r10
 911:u8g/u8g_font.c ****     t += d;
 3072              		.loc 1 911 0
 3073 0042 E4B2     		uxtb	r4, r4
 3074              	.LVL350:
 912:u8g/u8g_font.c ****     s++;
 3075              		.loc 1 912 0
 3076 0044 5FFA80FA 		uxtb	r10, r0
 3077              	.LVL351:
 908:u8g/u8g_font.c ****   {
 3078              		.loc 1 908 0
 3079 0048 002D     		cmp	r5, #0
 3080 004a EBD1     		bne	.L241
 916:u8g/u8g_font.c **** 
 3081              		.loc 1 916 0
 3082 004c 5046     		mov	r0, r10
 3083 004e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3084              	.LVL352:
 3085              	.L242:
 903:u8g/u8g_font.c ****   int8_t d;
 3086              		.loc 1 903 0
 3087 0052 AA46     		mov	r10, r5
 916:u8g/u8g_font.c **** 
 3088              		.loc 1 916 0
 3089 0054 5046     		mov	r0, r10
 3090 0056 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3091              	.LVL353:
 3092              	.L246:
 3093 005a 00BF     		.align	2
 3094              	.L245:
 3095 005c 00000000 		.word	u8g_draw_glyph90
 3096              		.cfi_endproc
 3097              	.LFE44:
 3099              		.section	.text.u8g_DrawStr180P,"ax",%progbits
 3100              		.align	1
 3101              		.p2align 2,,3
 3102              		.global	u8g_DrawStr180P
 3103              		.syntax unified
 3104              		.thumb
 3105              		.thumb_func
 3106              		.fpu softvfp
 3108              	u8g_DrawStr180P:
 3109              	.LFB45:
 919:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 3110              		.loc 1 919 0
 3111              		.cfi_startproc
 3112              		@ args = 0, pretend = 0, frame = 0
 3113              		@ frame_needed = 0, uses_anonymous_args = 0
 3114              	.LVL354:
 3115 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3116              	.LCFI48:
 3117              		.cfi_def_cfa_offset 32
 3118              		.cfi_offset 4, -32
 3119              		.cfi_offset 5, -28
 3120              		.cfi_offset 6, -24
 3121              		.cfi_offset 7, -20
 3122              		.cfi_offset 8, -16
 3123              		.cfi_offset 9, -12
 3124              		.cfi_offset 10, -8
 3125              		.cfi_offset 14, -4
 919:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 3126              		.loc 1 919 0
 3127 0004 1F46     		mov	r7, r3
 923:u8g/u8g_font.c ****   
 3128              		.loc 1 923 0
 3129 0006 436A     		ldr	r3, [r0, #36]
 3130              	.LVL355:
 919:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 3131              		.loc 1 919 0
 3132 0008 9046     		mov	r8, r2
 3133 000a 0646     		mov	r6, r0
 3134 000c 0C46     		mov	r4, r1
 923:u8g/u8g_font.c ****   
 3135              		.loc 1 923 0
 3136 000e 9847     		blx	r3
 3137              	.LVL356:
 925:u8g/u8g_font.c ****   {
 3138              		.loc 1 925 0
 3139 0010 3D78     		ldrb	r5, [r7]	@ zero_extendqisi2
 923:u8g/u8g_font.c ****   
 3140              		.loc 1 923 0
 3141 0012 A8EB0008 		sub	r8, r8, r0
 3142              	.LVL357:
 925:u8g/u8g_font.c ****   {
 3143              		.loc 1 925 0
 3144 0016 E5B1     		cbz	r5, .L250
 920:u8g/u8g_font.c ****   int8_t d;
 3145              		.loc 1 920 0
 3146 0018 4FF0000A 		mov	r10, #0
 3147 001c DFF83C90 		ldr	r9, .L253
 3148 0020 5FFA88F8 		uxtb	r8, r8
 3149              	.LVL358:
 3150              	.L249:
 3151              	.LBB186:
 3152              	.LBB187:
 715:u8g/u8g_font.c ****   return u8g_draw_glyph180(u8g, x, y, encoding);
 3153              		.loc 1 715 0
 3154 0024 736A     		ldr	r3, [r6, #36]
 3155 0026 3046     		mov	r0, r6
 3156 0028 9847     		blx	r3
 3157              	.LVL359:
 3158 002a A8EB0002 		sub	r2, r8, r0
 716:u8g/u8g_font.c **** }
 3159              		.loc 1 716 0
 3160 002e 2B46     		mov	r3, r5
 3161 0030 2146     		mov	r1, r4
 3162 0032 D2B2     		uxtb	r2, r2
 3163 0034 3046     		mov	r0, r6
 3164              	.LVL360:
 3165 0036 C847     		blx	r9
 3166              	.LVL361:
 3167              	.LBE187:
 3168              	.LBE186:
 925:u8g/u8g_font.c ****   {
 3169              		.loc 1 925 0
 3170 0038 17F8015F 		ldrb	r5, [r7, #1]!	@ zero_extendqisi2
 3171              	.LVL362:
 928:u8g/u8g_font.c ****     t += d;
 3172              		.loc 1 928 0
 3173 003c C0B2     		uxtb	r0, r0
 3174 003e 241A     		subs	r4, r4, r0
 3175              	.LVL363:
 929:u8g/u8g_font.c ****     s++;
 3176              		.loc 1 929 0
 3177 0040 5044     		add	r0, r0, r10
 928:u8g/u8g_font.c ****     t += d;
 3178              		.loc 1 928 0
 3179 0042 E4B2     		uxtb	r4, r4
 3180              	.LVL364:
 929:u8g/u8g_font.c ****     s++;
 3181              		.loc 1 929 0
 3182 0044 5FFA80FA 		uxtb	r10, r0
 3183              	.LVL365:
 925:u8g/u8g_font.c ****   {
 3184              		.loc 1 925 0
 3185 0048 002D     		cmp	r5, #0
 3186 004a EBD1     		bne	.L249
 933:u8g/u8g_font.c **** 
 3187              		.loc 1 933 0
 3188 004c 5046     		mov	r0, r10
 3189 004e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3190              	.LVL366:
 3191              	.L250:
 920:u8g/u8g_font.c ****   int8_t d;
 3192              		.loc 1 920 0
 3193 0052 AA46     		mov	r10, r5
 933:u8g/u8g_font.c **** 
 3194              		.loc 1 933 0
 3195 0054 5046     		mov	r0, r10
 3196 0056 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3197              	.LVL367:
 3198              	.L254:
 3199 005a 00BF     		.align	2
 3200              	.L253:
 3201 005c 00000000 		.word	u8g_draw_glyph180
 3202              		.cfi_endproc
 3203              	.LFE45:
 3205              		.section	.text.u8g_DrawStr270P,"ax",%progbits
 3206              		.align	1
 3207              		.p2align 2,,3
 3208              		.global	u8g_DrawStr270P
 3209              		.syntax unified
 3210              		.thumb
 3211              		.thumb_func
 3212              		.fpu softvfp
 3214              	u8g_DrawStr270P:
 3215              	.LFB46:
 936:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 3216              		.loc 1 936 0
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 0
 3219              		@ frame_needed = 0, uses_anonymous_args = 0
 3220              	.LVL368:
 3221 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3222              	.LCFI49:
 3223              		.cfi_def_cfa_offset 32
 3224              		.cfi_offset 4, -32
 3225              		.cfi_offset 5, -28
 3226              		.cfi_offset 6, -24
 3227              		.cfi_offset 7, -20
 3228              		.cfi_offset 8, -16
 3229              		.cfi_offset 9, -12
 3230              		.cfi_offset 10, -8
 3231              		.cfi_offset 14, -4
 936:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 3232              		.loc 1 936 0
 3233 0004 1F46     		mov	r7, r3
 940:u8g/u8g_font.c **** 
 3234              		.loc 1 940 0
 3235 0006 436A     		ldr	r3, [r0, #36]
 3236              	.LVL369:
 936:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 3237              		.loc 1 936 0
 3238 0008 8846     		mov	r8, r1
 3239 000a 0646     		mov	r6, r0
 3240 000c 1446     		mov	r4, r2
 940:u8g/u8g_font.c **** 
 3241              		.loc 1 940 0
 3242 000e 9847     		blx	r3
 3243              	.LVL370:
 942:u8g/u8g_font.c ****   {
 3244              		.loc 1 942 0
 3245 0010 3D78     		ldrb	r5, [r7]	@ zero_extendqisi2
 940:u8g/u8g_font.c **** 
 3246              		.loc 1 940 0
 3247 0012 8044     		add	r8, r8, r0
 3248              	.LVL371:
 942:u8g/u8g_font.c ****   {
 3249              		.loc 1 942 0
 3250 0014 E5B1     		cbz	r5, .L258
 937:u8g/u8g_font.c ****   int8_t d;
 3251              		.loc 1 937 0
 3252 0016 4FF0000A 		mov	r10, #0
 3253 001a DFF83C90 		ldr	r9, .L261
 3254 001e 5FFA88F8 		uxtb	r8, r8
 3255              	.LVL372:
 3256              	.L257:
 3257              	.LBB188:
 3258              	.LBB189:
 769:u8g/u8g_font.c ****   return u8g_draw_glyph270(u8g, x, y, encoding);
 3259              		.loc 1 769 0
 3260 0022 736A     		ldr	r3, [r6, #36]
 3261 0024 3046     		mov	r0, r6
 3262 0026 9847     		blx	r3
 3263              	.LVL373:
 3264 0028 08EB0001 		add	r1, r8, r0
 770:u8g/u8g_font.c **** }
 3265              		.loc 1 770 0
 3266 002c 2B46     		mov	r3, r5
 3267 002e 2246     		mov	r2, r4
 3268 0030 C9B2     		uxtb	r1, r1
 3269 0032 3046     		mov	r0, r6
 3270              	.LVL374:
 3271 0034 C847     		blx	r9
 3272              	.LVL375:
 3273              	.LBE189:
 3274              	.LBE188:
 942:u8g/u8g_font.c ****   {
 3275              		.loc 1 942 0
 3276 0036 17F8015F 		ldrb	r5, [r7, #1]!	@ zero_extendqisi2
 3277              	.LVL376:
 945:u8g/u8g_font.c ****     t += d;
 3278              		.loc 1 945 0
 3279 003a C0B2     		uxtb	r0, r0
 3280 003c 241A     		subs	r4, r4, r0
 3281              	.LVL377:
 946:u8g/u8g_font.c ****     s++;
 3282              		.loc 1 946 0
 3283 003e 5044     		add	r0, r0, r10
 945:u8g/u8g_font.c ****     t += d;
 3284              		.loc 1 945 0
 3285 0040 E4B2     		uxtb	r4, r4
 3286              	.LVL378:
 946:u8g/u8g_font.c ****     s++;
 3287              		.loc 1 946 0
 3288 0042 5FFA80FA 		uxtb	r10, r0
 3289              	.LVL379:
 942:u8g/u8g_font.c ****   {
 3290              		.loc 1 942 0
 3291 0046 002D     		cmp	r5, #0
 3292 0048 EBD1     		bne	.L257
 950:u8g/u8g_font.c **** 
 3293              		.loc 1 950 0
 3294 004a 5046     		mov	r0, r10
 3295 004c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3296              	.LVL380:
 3297              	.L258:
 937:u8g/u8g_font.c ****   int8_t d;
 3298              		.loc 1 937 0
 3299 0050 AA46     		mov	r10, r5
 950:u8g/u8g_font.c **** 
 3300              		.loc 1 950 0
 3301 0052 5046     		mov	r0, r10
 3302 0054 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3303              	.LVL381:
 3304              	.L262:
 3305              		.align	2
 3306              	.L261:
 3307 0058 00000000 		.word	u8g_draw_glyph270
 3308              		.cfi_endproc
 3309              	.LFE46:
 3311              		.section	.text.u8g_DrawStrFontBBX,"ax",%progbits
 3312              		.align	1
 3313              		.p2align 2,,3
 3314              		.global	u8g_DrawStrFontBBX
 3315              		.syntax unified
 3316              		.thumb
 3317              		.thumb_func
 3318              		.fpu softvfp
 3320              	u8g_DrawStrFontBBX:
 3321              	.LFB47:
 953:u8g/u8g_font.c ****   x -= u8g_GetFontBBXOffX(u8g);
 3322              		.loc 1 953 0
 3323              		.cfi_startproc
 3324              		@ args = 4, pretend = 0, frame = 0
 3325              		@ frame_needed = 0, uses_anonymous_args = 0
 3326              	.LVL382:
 3327 0000 70B5     		push	{r4, r5, r6, lr}
 3328              	.LCFI50:
 3329              		.cfi_def_cfa_offset 16
 3330              		.cfi_offset 4, -16
 3331              		.cfi_offset 5, -12
 3332              		.cfi_offset 6, -8
 3333              		.cfi_offset 14, -4
 954:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 3334              		.loc 1 954 0
 3335 0002 094E     		ldr	r6, .L265
 953:u8g/u8g_font.c ****   x -= u8g_GetFontBBXOffX(u8g);
 3336              		.loc 1 953 0
 3337 0004 1D46     		mov	r5, r3
 3338 0006 0446     		mov	r4, r0
 954:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 3339              		.loc 1 954 0
 3340 0008 B047     		blx	r6
 3341              	.LVL383:
 955:u8g/u8g_font.c ****   return u8g_DrawStrDir(u8g, x, y, dir, s);
 3342              		.loc 1 955 0
 3343 000a 084B     		ldr	r3, .L265+4
 954:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 3344              		.loc 1 954 0
 3345 000c 091A     		subs	r1, r1, r0
 3346              	.LVL384:
 955:u8g/u8g_font.c ****   return u8g_DrawStrDir(u8g, x, y, dir, s);
 3347              		.loc 1 955 0
 3348 000e 2046     		mov	r0, r4
 954:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 3349              		.loc 1 954 0
 3350 0010 C9B2     		uxtb	r1, r1
 3351              	.LVL385:
 955:u8g/u8g_font.c ****   return u8g_DrawStrDir(u8g, x, y, dir, s);
 3352              		.loc 1 955 0
 3353 0012 9847     		blx	r3
 3354              	.LVL386:
 3355 0014 0244     		add	r2, r2, r0
 3356              	.LVL387:
 956:u8g/u8g_font.c **** }
 3357              		.loc 1 956 0
 3358 0016 2046     		mov	r0, r4
 3359              	.LVL388:
 3360 0018 054C     		ldr	r4, .L265+8
 3361              	.LVL389:
 3362 001a 2B46     		mov	r3, r5
 3363 001c A446     		mov	ip, r4
 957:u8g/u8g_font.c **** 
 3364              		.loc 1 957 0
 3365 001e BDE87040 		pop	{r4, r5, r6, lr}
 3366              	.LCFI51:
 3367              		.cfi_restore 14
 3368              		.cfi_restore 6
 3369              		.cfi_restore 5
 3370              		.cfi_restore 4
 3371              		.cfi_def_cfa_offset 0
 3372              	.LVL390:
 956:u8g/u8g_font.c **** }
 3373              		.loc 1 956 0
 3374 0022 D2B2     		uxtb	r2, r2
 3375 0024 6047     		bx	ip
 3376              	.LVL391:
 3377              	.L266:
 3378 0026 00BF     		.align	2
 3379              	.L265:
 3380 0028 00000000 		.word	u8g_GetFontBBXOffX
 3381 002c 00000000 		.word	u8g_GetFontBBXOffY
 3382 0030 00000000 		.word	u8g_DrawStrDir
 3383              		.cfi_endproc
 3384              	.LFE47:
 3386              		.section	.text.u8g_DrawGlyphFontBBX,"ax",%progbits
 3387              		.align	1
 3388              		.p2align 2,,3
 3389              		.global	u8g_DrawGlyphFontBBX
 3390              		.syntax unified
 3391              		.thumb
 3392              		.thumb_func
 3393              		.fpu softvfp
 3395              	u8g_DrawGlyphFontBBX:
 3396              	.LFB48:
 961:u8g/u8g_font.c ****   x -= u8g_GetFontBBXOffX(u8g);
 3397              		.loc 1 961 0
 3398              		.cfi_startproc
 3399              		@ args = 4, pretend = 0, frame = 0
 3400              		@ frame_needed = 0, uses_anonymous_args = 0
 3401              	.LVL392:
 3402 0000 10B5     		push	{r4, lr}
 3403              	.LCFI52:
 3404              		.cfi_def_cfa_offset 8
 3405              		.cfi_offset 4, -8
 3406              		.cfi_offset 14, -4
 962:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 3407              		.loc 1 962 0
 3408 0002 084B     		ldr	r3, .L269
 3409              	.LVL393:
 961:u8g/u8g_font.c ****   x -= u8g_GetFontBBXOffX(u8g);
 3410              		.loc 1 961 0
 3411 0004 0446     		mov	r4, r0
 962:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 3412              		.loc 1 962 0
 3413 0006 9847     		blx	r3
 3414              	.LVL394:
 963:u8g/u8g_font.c ****   u8g_draw_glyph(u8g, x, y, encoding);
 3415              		.loc 1 963 0
 3416 0008 074B     		ldr	r3, .L269+4
 962:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 3417              		.loc 1 962 0
 3418 000a 091A     		subs	r1, r1, r0
 3419              	.LVL395:
 963:u8g/u8g_font.c ****   u8g_draw_glyph(u8g, x, y, encoding);
 3420              		.loc 1 963 0
 3421 000c 2046     		mov	r0, r4
 962:u8g/u8g_font.c ****   y += u8g_GetFontBBXOffY(u8g);
 3422              		.loc 1 962 0
 3423 000e C9B2     		uxtb	r1, r1
 3424              	.LVL396:
 963:u8g/u8g_font.c ****   u8g_draw_glyph(u8g, x, y, encoding);
 3425              		.loc 1 963 0
 3426 0010 9847     		blx	r3
 3427              	.LVL397:
 3428 0012 0244     		add	r2, r2, r0
 3429              	.LVL398:
 961:u8g/u8g_font.c ****   x -= u8g_GetFontBBXOffX(u8g);
 3430              		.loc 1 961 0
 3431 0014 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 964:u8g/u8g_font.c ****   return 0;
 3432              		.loc 1 964 0
 3433 0018 D2B2     		uxtb	r2, r2
 3434 001a 2046     		mov	r0, r4
 3435              	.LVL399:
 3436 001c 034C     		ldr	r4, .L269+8
 3437              	.LVL400:
 3438 001e A047     		blx	r4
 3439              	.LVL401:
 966:u8g/u8g_font.c **** 
 3440              		.loc 1 966 0
 3441 0020 0020     		movs	r0, #0
 3442 0022 10BD     		pop	{r4, pc}
 3443              	.LVL402:
 3444              	.L270:
 3445              		.align	2
 3446              	.L269:
 3447 0024 00000000 		.word	u8g_GetFontBBXOffX
 3448 0028 00000000 		.word	u8g_GetFontBBXOffY
 3449 002c 00000000 		.word	u8g_draw_glyph
 3450              		.cfi_endproc
 3451              	.LFE48:
 3453              		.section	.text.u8g_UpdateRefHeight,"ax",%progbits
 3454              		.align	1
 3455              		.p2align 2,,3
 3456              		.global	u8g_UpdateRefHeight
 3457              		.syntax unified
 3458              		.thumb
 3459              		.thumb_func
 3460              		.fpu softvfp
 3462              	u8g_UpdateRefHeight:
 3463              	.LFB49:
 973:u8g/u8g_font.c ****   uint16_t ls;
 3464              		.loc 1 973 0
 3465              		.cfi_startproc
 3466              		@ args = 0, pretend = 0, frame = 0
 3467              		@ frame_needed = 0, uses_anonymous_args = 0
 3468              		@ link register save eliminated.
 3469              	.LVL403:
 975:u8g/u8g_font.c ****     return;
 3470              		.loc 1 975 0
 3471 0000 8268     		ldr	r2, [r0, #8]
 3472 0002 C2B1     		cbz	r2, .L271
 977:u8g/u8g_font.c ****   {
 3473              		.loc 1 977 0
 3474 0004 90F82830 		ldrb	r3, [r0, #40]	@ zero_extendqisi2
 3475 0008 B3B1     		cbz	r3, .L283
 982:u8g/u8g_font.c ****   {
 3476              		.loc 1 982 0
 3477 000a 012B     		cmp	r3, #1
 3478 000c 1DD0     		beq	.L284
 3479              	.LVL404:
 3480              	.LBB190:
 3481              	.LBB191:
 181:u8g/u8g_font.c **** }
 3482              		.loc 1 181 0
 3483 000e 92F90D30 		ldrsb	r3, [r2, #13]
 3484              	.LVL405:
 3485              	.LBE191:
 3486              	.LBE190:
 989:u8g/u8g_font.c ****     u8g->font_ref_descent = u8g_font_GetFontDescent(u8g->font);
 3487              		.loc 1 989 0
 3488 0012 80F82930 		strb	r3, [r0, #41]
 3489              	.LVL406:
 3490              	.LBB192:
 3491              	.LBB193:
 186:u8g/u8g_font.c **** }
 3492              		.loc 1 186 0
 3493 0016 92F90E10 		ldrsb	r1, [r2, #14]
 3494              	.LVL407:
 3495              	.LBE193:
 3496              	.LBE192:
 990:u8g/u8g_font.c ****   }
 3497              		.loc 1 990 0
 3498 001a 80F82A10 		strb	r1, [r0, #42]
 3499              	.L274:
 994:u8g/u8g_font.c ****   {
 3500              		.loc 1 994 0
 3501 001e 90F82B20 		ldrb	r2, [r0, #43]	@ zero_extendqisi2
 993:u8g/u8g_font.c ****   if ( u8g->font_line_spacing_factor != 64 )
 3502              		.loc 1 993 0
 3503 0022 5B1A     		subs	r3, r3, r1
 994:u8g/u8g_font.c ****   {
 3504              		.loc 1 994 0
 3505 0024 402A     		cmp	r2, #64
 993:u8g/u8g_font.c ****   if ( u8g->font_line_spacing_factor != 64 )
 3506              		.loc 1 993 0
 3507 0026 9BB2     		uxth	r3, r3
 3508              	.LVL408:
 994:u8g/u8g_font.c ****   {
 3509              		.loc 1 994 0
 3510 0028 03D0     		beq	.L276
 996:u8g/u8g_font.c ****     ls *= u8g->font_line_spacing_factor;
 3511              		.loc 1 996 0
 3512 002a DBB2     		uxtb	r3, r3
 3513              	.LVL409:
 997:u8g/u8g_font.c ****     ls >>= 6;
 3514              		.loc 1 997 0
 3515 002c 02FB03F3 		mul	r3, r2, r3
 3516              	.LVL410:
 998:u8g/u8g_font.c ****   }
 3517              		.loc 1 998 0
 3518 0030 9B09     		lsrs	r3, r3, #6
 3519              	.LVL411:
 3520              	.L276:
1000:u8g/u8g_font.c **** }
 3521              		.loc 1 1000 0
 3522 0032 80F82C30 		strb	r3, [r0, #44]
 3523              	.LVL412:
 3524              	.L271:
1001:u8g/u8g_font.c **** 
 3525              		.loc 1 1001 0
 3526 0036 7047     		bx	lr
 3527              	.L283:
 979:u8g/u8g_font.c ****     u8g->font_ref_descent = u8g_font_GetLowerGDescent(u8g->font);
 3528              		.loc 1 979 0
 3529 0038 92F90530 		ldrsb	r3, [r2, #5]
 3530 003c 80F82930 		strb	r3, [r0, #41]
 3531              	.LVL413:
 3532              	.LBB194:
 3533              	.LBB195:
 176:u8g/u8g_font.c **** }
 3534              		.loc 1 176 0
 3535 0040 92F90C10 		ldrsb	r1, [r2, #12]
 3536              	.LVL414:
 3537              	.LBE195:
 3538              	.LBE194:
 980:u8g/u8g_font.c ****   }
 3539              		.loc 1 980 0
 3540 0044 80F82A10 		strb	r1, [r0, #42]
 3541 0048 E9E7     		b	.L274
 3542              	.L284:
 3543              	.LVL415:
 3544              	.LBB196:
 3545              	.LBB197:
 191:u8g/u8g_font.c **** }
 3546              		.loc 1 191 0
 3547 004a 92F90F30 		ldrsb	r3, [r2, #15]
 3548              	.LVL416:
 3549              	.LBE197:
 3550              	.LBE196:
 984:u8g/u8g_font.c ****     u8g->font_ref_descent = u8g_font_GetFontXDescent(u8g->font);
 3551              		.loc 1 984 0
 3552 004e 80F82930 		strb	r3, [r0, #41]
 3553              	.LVL417:
 3554              	.LBB198:
 3555              	.LBB199:
 196:u8g/u8g_font.c **** }
 3556              		.loc 1 196 0
 3557 0052 92F91010 		ldrsb	r1, [r2, #16]
 3558              	.LVL418:
 3559              	.LBE199:
 3560              	.LBE198:
 985:u8g/u8g_font.c ****   }
 3561              		.loc 1 985 0
 3562 0056 80F82A10 		strb	r1, [r0, #42]
 3563 005a E0E7     		b	.L274
 3564              		.cfi_endproc
 3565              	.LFE49:
 3567              		.section	.text.u8g_SetFontRefHeightText,"ax",%progbits
 3568              		.align	1
 3569              		.p2align 2,,3
 3570              		.global	u8g_SetFontRefHeightText
 3571              		.syntax unified
 3572              		.thumb
 3573              		.thumb_func
 3574              		.fpu softvfp
 3576              	u8g_SetFontRefHeightText:
 3577              	.LFB50:
1004:u8g/u8g_font.c ****   u8g->font_height_mode = U8G_FONT_HEIGHT_MODE_TEXT;
 3578              		.loc 1 1004 0
 3579              		.cfi_startproc
 3580              		@ args = 0, pretend = 0, frame = 0
 3581              		@ frame_needed = 0, uses_anonymous_args = 0
 3582              		@ link register save eliminated.
 3583              	.LVL419:
1005:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
 3584              		.loc 1 1005 0
 3585 0000 0021     		movs	r1, #0
1006:u8g/u8g_font.c **** }
 3586              		.loc 1 1006 0
 3587 0002 024B     		ldr	r3, .L286
1005:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
 3588              		.loc 1 1005 0
 3589 0004 80F82810 		strb	r1, [r0, #40]
1006:u8g/u8g_font.c **** }
 3590              		.loc 1 1006 0
 3591 0008 1847     		bx	r3	@ indirect register sibling call
 3592              	.LVL420:
 3593              	.L287:
 3594 000a 00BF     		.align	2
 3595              	.L286:
 3596 000c 00000000 		.word	u8g_UpdateRefHeight
 3597              		.cfi_endproc
 3598              	.LFE50:
 3600              		.section	.text.u8g_SetFontRefHeightExtendedText,"ax",%progbits
 3601              		.align	1
 3602              		.p2align 2,,3
 3603              		.global	u8g_SetFontRefHeightExtendedText
 3604              		.syntax unified
 3605              		.thumb
 3606              		.thumb_func
 3607              		.fpu softvfp
 3609              	u8g_SetFontRefHeightExtendedText:
 3610              	.LFB51:
1010:u8g/u8g_font.c ****   u8g->font_height_mode = U8G_FONT_HEIGHT_MODE_XTEXT;
 3611              		.loc 1 1010 0
 3612              		.cfi_startproc
 3613              		@ args = 0, pretend = 0, frame = 0
 3614              		@ frame_needed = 0, uses_anonymous_args = 0
 3615              		@ link register save eliminated.
 3616              	.LVL421:
1011:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
 3617              		.loc 1 1011 0
 3618 0000 0122     		movs	r2, #1
1012:u8g/u8g_font.c **** }
 3619              		.loc 1 1012 0
 3620 0002 024B     		ldr	r3, .L289
1011:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
 3621              		.loc 1 1011 0
 3622 0004 80F82820 		strb	r2, [r0, #40]
1012:u8g/u8g_font.c **** }
 3623              		.loc 1 1012 0
 3624 0008 1847     		bx	r3	@ indirect register sibling call
 3625              	.LVL422:
 3626              	.L290:
 3627 000a 00BF     		.align	2
 3628              	.L289:
 3629 000c 00000000 		.word	u8g_UpdateRefHeight
 3630              		.cfi_endproc
 3631              	.LFE51:
 3633              		.section	.text.u8g_SetFontRefHeightAll,"ax",%progbits
 3634              		.align	1
 3635              		.p2align 2,,3
 3636              		.global	u8g_SetFontRefHeightAll
 3637              		.syntax unified
 3638              		.thumb
 3639              		.thumb_func
 3640              		.fpu softvfp
 3642              	u8g_SetFontRefHeightAll:
 3643              	.LFB52:
1017:u8g/u8g_font.c ****   u8g->font_height_mode = U8G_FONT_HEIGHT_MODE_ALL;
 3644              		.loc 1 1017 0
 3645              		.cfi_startproc
 3646              		@ args = 0, pretend = 0, frame = 0
 3647              		@ frame_needed = 0, uses_anonymous_args = 0
 3648              		@ link register save eliminated.
 3649              	.LVL423:
1018:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
 3650              		.loc 1 1018 0
 3651 0000 0222     		movs	r2, #2
1019:u8g/u8g_font.c **** }
 3652              		.loc 1 1019 0
 3653 0002 024B     		ldr	r3, .L292
1018:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
 3654              		.loc 1 1018 0
 3655 0004 80F82820 		strb	r2, [r0, #40]
1019:u8g/u8g_font.c **** }
 3656              		.loc 1 1019 0
 3657 0008 1847     		bx	r3	@ indirect register sibling call
 3658              	.LVL424:
 3659              	.L293:
 3660 000a 00BF     		.align	2
 3661              	.L292:
 3662 000c 00000000 		.word	u8g_UpdateRefHeight
 3663              		.cfi_endproc
 3664              	.LFE52:
 3666              		.section	.text.u8g_SetFontLineSpacingFactor,"ax",%progbits
 3667              		.align	1
 3668              		.p2align 2,,3
 3669              		.global	u8g_SetFontLineSpacingFactor
 3670              		.syntax unified
 3671              		.thumb
 3672              		.thumb_func
 3673              		.fpu softvfp
 3675              	u8g_SetFontLineSpacingFactor:
 3676              	.LFB53:
1024:u8g/u8g_font.c ****   u8g->font_line_spacing_factor = factor;
 3677              		.loc 1 1024 0
 3678              		.cfi_startproc
 3679              		@ args = 0, pretend = 0, frame = 0
 3680              		@ frame_needed = 0, uses_anonymous_args = 0
 3681              		@ link register save eliminated.
 3682              	.LVL425:
1025:u8g/u8g_font.c ****   u8g_UpdateRefHeight(u8g);
 3683              		.loc 1 1025 0
 3684 0000 80F82B10 		strb	r1, [r0, #43]
1026:u8g/u8g_font.c **** }
 3685              		.loc 1 1026 0
 3686 0004 004B     		ldr	r3, .L295
 3687 0006 1847     		bx	r3	@ indirect register sibling call
 3688              	.LVL426:
 3689              	.L296:
 3690              		.align	2
 3691              	.L295:
 3692 0008 00000000 		.word	u8g_UpdateRefHeight
 3693              		.cfi_endproc
 3694              	.LFE53:
 3696              		.section	.text.u8g_SetFontPosBaseline,"ax",%progbits
 3697              		.align	1
 3698              		.p2align 2,,3
 3699              		.global	u8g_SetFontPosBaseline
 3700              		.syntax unified
 3701              		.thumb
 3702              		.thumb_func
 3703              		.fpu softvfp
 3705              	u8g_SetFontPosBaseline:
 3706              	.LFB55:
1040:u8g/u8g_font.c ****   u8g->font_calc_vref = u8g_font_calc_vref_font;
 3707              		.loc 1 1040 0
 3708              		.cfi_startproc
 3709              		@ args = 0, pretend = 0, frame = 0
 3710              		@ frame_needed = 0, uses_anonymous_args = 0
 3711              		@ link register save eliminated.
 3712              	.LVL427:
1041:u8g/u8g_font.c **** }
 3713              		.loc 1 1041 0
 3714 0000 014B     		ldr	r3, .L298
 3715 0002 4362     		str	r3, [r0, #36]
1042:u8g/u8g_font.c **** 
 3716              		.loc 1 1042 0
 3717 0004 7047     		bx	lr
 3718              	.L299:
 3719 0006 00BF     		.align	2
 3720              	.L298:
 3721 0008 00000000 		.word	u8g_font_calc_vref_font
 3722              		.cfi_endproc
 3723              	.LFE55:
 3725              		.section	.text.u8g_SetFontPosBottom,"ax",%progbits
 3726              		.align	1
 3727              		.p2align 2,,3
 3728              		.global	u8g_SetFontPosBottom
 3729              		.syntax unified
 3730              		.thumb
 3731              		.thumb_func
 3732              		.fpu softvfp
 3734              	u8g_SetFontPosBottom:
 3735              	.LFB57:
1052:u8g/u8g_font.c ****   u8g->font_calc_vref = u8g_font_calc_vref_bottom;
 3736              		.loc 1 1052 0
 3737              		.cfi_startproc
 3738              		@ args = 0, pretend = 0, frame = 0
 3739              		@ frame_needed = 0, uses_anonymous_args = 0
 3740              		@ link register save eliminated.
 3741              	.LVL428:
1053:u8g/u8g_font.c **** }
 3742              		.loc 1 1053 0
 3743 0000 014B     		ldr	r3, .L301
 3744 0002 4362     		str	r3, [r0, #36]
1054:u8g/u8g_font.c **** 
 3745              		.loc 1 1054 0
 3746 0004 7047     		bx	lr
 3747              	.L302:
 3748 0006 00BF     		.align	2
 3749              	.L301:
 3750 0008 00000000 		.word	u8g_font_calc_vref_bottom
 3751              		.cfi_endproc
 3752              	.LFE57:
 3754              		.section	.text.u8g_SetFontPosTop,"ax",%progbits
 3755              		.align	1
 3756              		.p2align 2,,3
 3757              		.global	u8g_SetFontPosTop
 3758              		.syntax unified
 3759              		.thumb
 3760              		.thumb_func
 3761              		.fpu softvfp
 3763              	u8g_SetFontPosTop:
 3764              	.LFB59:
1071:u8g/u8g_font.c ****   u8g->font_calc_vref = u8g_font_calc_vref_top;
 3765              		.loc 1 1071 0
 3766              		.cfi_startproc
 3767              		@ args = 0, pretend = 0, frame = 0
 3768              		@ frame_needed = 0, uses_anonymous_args = 0
 3769              		@ link register save eliminated.
 3770              	.LVL429:
1072:u8g/u8g_font.c **** }
 3771              		.loc 1 1072 0
 3772 0000 014B     		ldr	r3, .L304
 3773 0002 4362     		str	r3, [r0, #36]
1073:u8g/u8g_font.c **** 
 3774              		.loc 1 1073 0
 3775 0004 7047     		bx	lr
 3776              	.L305:
 3777 0006 00BF     		.align	2
 3778              	.L304:
 3779 0008 00000000 		.word	u8g_font_calc_vref_top
 3780              		.cfi_endproc
 3781              	.LFE59:
 3783              		.section	.text.u8g_SetFontPosCenter,"ax",%progbits
 3784              		.align	1
 3785              		.p2align 2,,3
 3786              		.global	u8g_SetFontPosCenter
 3787              		.syntax unified
 3788              		.thumb
 3789              		.thumb_func
 3790              		.fpu softvfp
 3792              	u8g_SetFontPosCenter:
 3793              	.LFB61:
1087:u8g/u8g_font.c ****   u8g->font_calc_vref = u8g_font_calc_vref_center;
 3794              		.loc 1 1087 0
 3795              		.cfi_startproc
 3796              		@ args = 0, pretend = 0, frame = 0
 3797              		@ frame_needed = 0, uses_anonymous_args = 0
 3798              		@ link register save eliminated.
 3799              	.LVL430:
1088:u8g/u8g_font.c **** }
 3800              		.loc 1 1088 0
 3801 0000 014B     		ldr	r3, .L307
 3802 0002 4362     		str	r3, [r0, #36]
1089:u8g/u8g_font.c **** 
 3803              		.loc 1 1089 0
 3804 0004 7047     		bx	lr
 3805              	.L308:
 3806 0006 00BF     		.align	2
 3807              	.L307:
 3808 0008 00000000 		.word	u8g_font_calc_vref_center
 3809              		.cfi_endproc
 3810              	.LFE61:
 3812              		.section	.text.u8g_font_calc_str_pixel_width,"ax",%progbits
 3813              		.align	1
 3814              		.p2align 2,,3
 3815              		.global	u8g_font_calc_str_pixel_width
 3816              		.syntax unified
 3817              		.thumb
 3818              		.thumb_func
 3819              		.fpu softvfp
 3821              	u8g_font_calc_str_pixel_width:
 3822              	.LFB64:
1108:u8g/u8g_font.c ****   u8g_uint_t  w;
 3823              		.loc 1 1108 0
 3824              		.cfi_startproc
 3825              		@ args = 0, pretend = 0, frame = 0
 3826              		@ frame_needed = 0, uses_anonymous_args = 0
 3827              	.LVL431:
 3828 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3829              	.LCFI53:
 3830              		.cfi_def_cfa_offset 32
 3831              		.cfi_offset 3, -32
 3832              		.cfi_offset 4, -28
 3833              		.cfi_offset 5, -24
 3834              		.cfi_offset 6, -20
 3835              		.cfi_offset 7, -16
 3836              		.cfi_offset 8, -12
 3837              		.cfi_offset 9, -8
 3838              		.cfi_offset 14, -4
1108:u8g/u8g_font.c ****   u8g_uint_t  w;
 3839              		.loc 1 1108 0
 3840 0004 8046     		mov	r8, r0
1115:u8g/u8g_font.c ****   
 3841              		.loc 1 1115 0
 3842 0006 0846     		mov	r0, r1
 3843              	.LVL432:
1108:u8g/u8g_font.c ****   u8g_uint_t  w;
 3844              		.loc 1 1108 0
 3845 0008 0C46     		mov	r4, r1
 3846 000a 1746     		mov	r7, r2
1115:u8g/u8g_font.c ****   
 3847              		.loc 1 1115 0
 3848 000c 9047     		blx	r2
 3849              	.LVL433:
1118:u8g/u8g_font.c ****   {
 3850              		.loc 1 1118 0
 3851 000e 0546     		mov	r5, r0
 3852 0010 08B9     		cbnz	r0, .L316
1167:u8g/u8g_font.c **** 
 3853              		.loc 1 1167 0
 3854 0012 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3855              	.LVL434:
 3856              	.L316:
1125:u8g/u8g_font.c **** 
 3857              		.loc 1 1125 0
 3858 0016 0146     		mov	r1, r0
 3859 0018 DFF84890 		ldr	r9, .L318
 3860 001c 4046     		mov	r0, r8
 3861              	.LVL435:
 3862 001e C847     		blx	r9
 3863              	.LVL436:
1133:u8g/u8g_font.c ****   for(;;)
 3864              		.loc 1 1133 0
 3865 0020 98F81D00 		ldrb	r0, [r8, #29]	@ zero_extendqisi2
 3866 0024 4042     		negs	r0, r0
 3867 0026 C6B2     		uxtb	r6, r0
 3868              	.LVL437:
 3869 0028 09E0     		b	.L312
 3870              	.L317:
1146:u8g/u8g_font.c ****     
 3871              		.loc 1 1146 0
 3872 002a 2046     		mov	r0, r4
1143:u8g/u8g_font.c ****     
 3873              		.loc 1 1143 0
 3874 002c 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
1146:u8g/u8g_font.c ****     
 3875              		.loc 1 1146 0
 3876 0030 B847     		blx	r7
 3877              	.LVL438:
1143:u8g/u8g_font.c ****     
 3878              		.loc 1 1143 0
 3879 0032 3544     		add	r5, r5, r6
 3880 0034 EEB2     		uxtb	r6, r5
 3881              	.LVL439:
1149:u8g/u8g_font.c ****   }
 3882              		.loc 1 1149 0
 3883 0036 0146     		mov	r1, r0
1146:u8g/u8g_font.c ****     
 3884              		.loc 1 1146 0
 3885 0038 0546     		mov	r5, r0
 3886              	.LVL440:
1149:u8g/u8g_font.c ****   }
 3887              		.loc 1 1149 0
 3888 003a 4046     		mov	r0, r8
 3889              	.LVL441:
 3890 003c C847     		blx	r9
 3891              	.LVL442:
 3892              	.L312:
1138:u8g/u8g_font.c ****     if ( get_char(s) == '\0' )
 3893              		.loc 1 1138 0
 3894 003e 0134     		adds	r4, r4, #1
 3895              	.LVL443:
1139:u8g/u8g_font.c ****       break;
 3896              		.loc 1 1139 0
 3897 0040 2046     		mov	r0, r4
 3898 0042 B847     		blx	r7
 3899              	.LVL444:
 3900 0044 0028     		cmp	r0, #0
 3901 0046 F0D1     		bne	.L317
1154:u8g/u8g_font.c ****   {
 3902              		.loc 1 1154 0
 3903 0048 202D     		cmp	r5, #32
 3904              	.LVL445:
1158:u8g/u8g_font.c ****   }
 3905              		.loc 1 1158 0
 3906 004a 1BBF     		ittet	ne
 3907 004c 98F81F00 		ldrbne	r0, [r8, #31]	@ zero_extendqisi2
 3908 0050 98F81D50 		ldrbne	r5, [r8, #29]	@ zero_extendqisi2
1162:u8g/u8g_font.c ****   }
 3909              		.loc 1 1162 0
 3910 0054 98F81C00 		ldrbeq	r0, [r8, #28]	@ zero_extendqisi2
1158:u8g/u8g_font.c ****   }
 3911              		.loc 1 1158 0
 3912 0058 4019     		addne	r0, r0, r5
1162:u8g/u8g_font.c ****   }
 3913              		.loc 1 1162 0
 3914 005a 3044     		add	r0, r0, r6
 3915 005c C0B2     		uxtb	r0, r0
 3916              	.LVL446:
1167:u8g/u8g_font.c **** 
 3917              		.loc 1 1167 0
 3918 005e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3919              	.LVL447:
 3920              	.L319:
 3921 0062 00BF     		.align	2
 3922              	.L318:
 3923 0064 00000000 		.word	u8g_GetGlyph
 3924              		.cfi_endproc
 3925              	.LFE64:
 3927              		.section	.text.u8g_GetStrPixelWidth,"ax",%progbits
 3928              		.align	1
 3929              		.p2align 2,,3
 3930              		.global	u8g_GetStrPixelWidth
 3931              		.syntax unified
 3932              		.thumb
 3933              		.thumb_func
 3934              		.fpu softvfp
 3936              	u8g_GetStrPixelWidth:
 3937              	.LFB65:
1170:u8g/u8g_font.c ****   return u8g_font_calc_str_pixel_width(u8g, s, u8g_font_get_char);
 3938              		.loc 1 1170 0
 3939              		.cfi_startproc
 3940              		@ args = 0, pretend = 0, frame = 0
 3941              		@ frame_needed = 0, uses_anonymous_args = 0
 3942              		@ link register save eliminated.
 3943              	.LVL448:
1171:u8g/u8g_font.c **** }
 3944              		.loc 1 1171 0
 3945 0000 014A     		ldr	r2, .L321
 3946 0002 024B     		ldr	r3, .L321+4
 3947 0004 1847     		bx	r3
 3948              	.LVL449:
 3949              	.L322:
 3950 0006 00BF     		.align	2
 3951              	.L321:
 3952 0008 00000000 		.word	u8g_font_get_char
 3953 000c 00000000 		.word	u8g_font_calc_str_pixel_width
 3954              		.cfi_endproc
 3955              	.LFE65:
 3957              		.section	.text.u8g_GetStrPixelWidthP,"ax",%progbits
 3958              		.align	1
 3959              		.p2align 2,,3
 3960              		.global	u8g_GetStrPixelWidthP
 3961              		.syntax unified
 3962              		.thumb
 3963              		.thumb_func
 3964              		.fpu softvfp
 3966              	u8g_GetStrPixelWidthP:
 3967              	.LFB66:
1175:u8g/u8g_font.c ****   return u8g_font_calc_str_pixel_width(u8g, (const char *)s, u8g_font_get_charP);
 3968              		.loc 1 1175 0
 3969              		.cfi_startproc
 3970              		@ args = 0, pretend = 0, frame = 0
 3971              		@ frame_needed = 0, uses_anonymous_args = 0
 3972              		@ link register save eliminated.
 3973              	.LVL450:
1176:u8g/u8g_font.c **** }
 3974              		.loc 1 1176 0
 3975 0000 014A     		ldr	r2, .L324
 3976 0002 024B     		ldr	r3, .L324+4
 3977 0004 1847     		bx	r3
 3978              	.LVL451:
 3979              	.L325:
 3980 0006 00BF     		.align	2
 3981              	.L324:
 3982 0008 00000000 		.word	u8g_font_get_charP
 3983 000c 00000000 		.word	u8g_font_calc_str_pixel_width
 3984              		.cfi_endproc
 3985              	.LFE66:
 3987              		.section	.text.u8g_GetStrX,"ax",%progbits
 3988              		.align	1
 3989              		.p2align 2,,3
 3990              		.global	u8g_GetStrX
 3991              		.syntax unified
 3992              		.thumb
 3993              		.thumb_func
 3994              		.fpu softvfp
 3996              	u8g_GetStrX:
 3997              	.LFB67:
1180:u8g/u8g_font.c ****   u8g_GetGlyph(u8g, *s);
 3998              		.loc 1 1180 0
 3999              		.cfi_startproc
 4000              		@ args = 0, pretend = 0, frame = 0
 4001              		@ frame_needed = 0, uses_anonymous_args = 0
 4002              	.LVL452:
 4003 0000 10B5     		push	{r4, lr}
 4004              	.LCFI54:
 4005              		.cfi_def_cfa_offset 8
 4006              		.cfi_offset 4, -8
 4007              		.cfi_offset 14, -4
1180:u8g/u8g_font.c ****   u8g_GetGlyph(u8g, *s);
 4008              		.loc 1 1180 0
 4009 0002 0446     		mov	r4, r0
1181:u8g/u8g_font.c ****   return u8g->glyph_x;  
 4010              		.loc 1 1181 0
 4011 0004 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4012              	.LVL453:
 4013 0006 024B     		ldr	r3, .L328
 4014 0008 9847     		blx	r3
 4015              	.LVL454:
1183:u8g/u8g_font.c **** 
 4016              		.loc 1 1183 0
 4017 000a 94F91D00 		ldrsb	r0, [r4, #29]
 4018 000e 10BD     		pop	{r4, pc}
 4019              	.LVL455:
 4020              	.L329:
 4021              		.align	2
 4022              	.L328:
 4023 0010 00000000 		.word	u8g_GetGlyph
 4024              		.cfi_endproc
 4025              	.LFE67:
 4027              		.section	.text.u8g_GetStrXP,"ax",%progbits
 4028              		.align	1
 4029              		.p2align 2,,3
 4030              		.global	u8g_GetStrXP
 4031              		.syntax unified
 4032              		.thumb
 4033              		.thumb_func
 4034              		.fpu softvfp
 4036              	u8g_GetStrXP:
 4037              	.LFB68:
1186:u8g/u8g_font.c ****   u8g_GetGlyph(u8g, u8g_pgm_read(s));
 4038              		.loc 1 1186 0
 4039              		.cfi_startproc
 4040              		@ args = 0, pretend = 0, frame = 0
 4041              		@ frame_needed = 0, uses_anonymous_args = 0
 4042              	.LVL456:
 4043 0000 10B5     		push	{r4, lr}
 4044              	.LCFI55:
 4045              		.cfi_def_cfa_offset 8
 4046              		.cfi_offset 4, -8
 4047              		.cfi_offset 14, -4
1186:u8g/u8g_font.c ****   u8g_GetGlyph(u8g, u8g_pgm_read(s));
 4048              		.loc 1 1186 0
 4049 0002 0446     		mov	r4, r0
1187:u8g/u8g_font.c ****   return u8g->glyph_x;  
 4050              		.loc 1 1187 0
 4051 0004 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4052              	.LVL457:
 4053 0006 024B     		ldr	r3, .L332
 4054 0008 9847     		blx	r3
 4055              	.LVL458:
1189:u8g/u8g_font.c **** 
 4056              		.loc 1 1189 0
 4057 000a 94F91D00 		ldrsb	r0, [r4, #29]
 4058 000e 10BD     		pop	{r4, pc}
 4059              	.LVL459:
 4060              	.L333:
 4061              		.align	2
 4062              	.L332:
 4063 0010 00000000 		.word	u8g_GetGlyph
 4064              		.cfi_endproc
 4065              	.LFE68:
 4067              		.section	.text.u8g_GetStrWidth,"ax",%progbits
 4068              		.align	1
 4069              		.p2align 2,,3
 4070              		.global	u8g_GetStrWidth
 4071              		.syntax unified
 4072              		.thumb
 4073              		.thumb_func
 4074              		.fpu softvfp
 4076              	u8g_GetStrWidth:
 4077              	.LFB69:
1195:u8g/u8g_font.c ****   u8g_uint_t  w;
 4078              		.loc 1 1195 0
 4079              		.cfi_startproc
 4080              		@ args = 0, pretend = 0, frame = 0
 4081              		@ frame_needed = 0, uses_anonymous_args = 0
 4082              	.LVL460:
 4083 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4084              	.LCFI56:
 4085              		.cfi_def_cfa_offset 24
 4086              		.cfi_offset 3, -24
 4087              		.cfi_offset 4, -20
 4088              		.cfi_offset 5, -16
 4089              		.cfi_offset 6, -12
 4090              		.cfi_offset 7, -8
 4091              		.cfi_offset 14, -4
1195:u8g/u8g_font.c ****   u8g_uint_t  w;
 4092              		.loc 1 1195 0
 4093 0002 0D46     		mov	r5, r1
1204:u8g/u8g_font.c ****     if ( encoding == 0 )
 4094              		.loc 1 1204 0
 4095 0004 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4096              	.LVL461:
1205:u8g/u8g_font.c ****       break;
 4097              		.loc 1 1205 0
 4098 0006 69B1     		cbz	r1, .L337
 4099 0008 0646     		mov	r6, r0
1200:u8g/u8g_font.c ****   
 4100              		.loc 1 1200 0
 4101 000a 0024     		movs	r4, #0
 4102 000c 074F     		ldr	r7, .L340
 4103              	.LVL462:
 4104              	.L336:
1209:u8g/u8g_font.c ****     w += u8g->glyph_dx;    
 4105              		.loc 1 1209 0
 4106 000e 3046     		mov	r0, r6
 4107 0010 B847     		blx	r7
 4108              	.LVL463:
1210:u8g/u8g_font.c ****     
 4109              		.loc 1 1210 0
 4110 0012 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
1204:u8g/u8g_font.c ****     if ( encoding == 0 )
 4111              		.loc 1 1204 0
 4112 0014 15F8011F 		ldrb	r1, [r5, #1]!	@ zero_extendqisi2
 4113              	.LVL464:
1210:u8g/u8g_font.c ****     
 4114              		.loc 1 1210 0
 4115 0018 1C44     		add	r4, r4, r3
 4116              	.LVL465:
 4117 001a E4B2     		uxtb	r4, r4
 4118              	.LVL466:
1205:u8g/u8g_font.c ****       break;
 4119              		.loc 1 1205 0
 4120 001c 0029     		cmp	r1, #0
 4121 001e F6D1     		bne	.L336
1217:u8g/u8g_font.c **** 
 4122              		.loc 1 1217 0
 4123 0020 2046     		mov	r0, r4
 4124 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4125              	.LVL467:
 4126              	.L337:
1200:u8g/u8g_font.c ****   
 4127              		.loc 1 1200 0
 4128 0024 0C46     		mov	r4, r1
1217:u8g/u8g_font.c **** 
 4129              		.loc 1 1217 0
 4130 0026 2046     		mov	r0, r4
 4131              	.LVL468:
 4132 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4133              	.LVL469:
 4134              	.L341:
 4135 002a 00BF     		.align	2
 4136              	.L340:
 4137 002c 00000000 		.word	u8g_GetGlyph
 4138              		.cfi_endproc
 4139              	.LFE69:
 4141              		.section	.text.u8g_GetStrWidthP,"ax",%progbits
 4142              		.align	1
 4143              		.p2align 2,,3
 4144              		.global	u8g_GetStrWidthP
 4145              		.syntax unified
 4146              		.thumb
 4147              		.thumb_func
 4148              		.fpu softvfp
 4150              	u8g_GetStrWidthP:
 4151              	.LFB70:
1221:u8g/u8g_font.c ****   u8g_uint_t  w;
 4152              		.loc 1 1221 0
 4153              		.cfi_startproc
 4154              		@ args = 0, pretend = 0, frame = 0
 4155              		@ frame_needed = 0, uses_anonymous_args = 0
 4156              	.LVL470:
 4157 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4158              	.LCFI57:
 4159              		.cfi_def_cfa_offset 24
 4160              		.cfi_offset 3, -24
 4161              		.cfi_offset 4, -20
 4162              		.cfi_offset 5, -16
 4163              		.cfi_offset 6, -12
 4164              		.cfi_offset 7, -8
 4165              		.cfi_offset 14, -4
1221:u8g/u8g_font.c ****   u8g_uint_t  w;
 4166              		.loc 1 1221 0
 4167 0002 0D46     		mov	r5, r1
1230:u8g/u8g_font.c ****     if ( encoding == 0 )
 4168              		.loc 1 1230 0
 4169 0004 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4170              	.LVL471:
1231:u8g/u8g_font.c ****       break;
 4171              		.loc 1 1231 0
 4172 0006 69B1     		cbz	r1, .L345
 4173 0008 0646     		mov	r6, r0
1226:u8g/u8g_font.c ****   
 4174              		.loc 1 1226 0
 4175 000a 0024     		movs	r4, #0
 4176 000c 074F     		ldr	r7, .L348
 4177              	.LVL472:
 4178              	.L344:
1235:u8g/u8g_font.c ****     w += u8g->glyph_dx;    
 4179              		.loc 1 1235 0
 4180 000e 3046     		mov	r0, r6
 4181 0010 B847     		blx	r7
 4182              	.LVL473:
1236:u8g/u8g_font.c ****     
 4183              		.loc 1 1236 0
 4184 0012 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
1230:u8g/u8g_font.c ****     if ( encoding == 0 )
 4185              		.loc 1 1230 0
 4186 0014 15F8011F 		ldrb	r1, [r5, #1]!	@ zero_extendqisi2
 4187              	.LVL474:
1236:u8g/u8g_font.c ****     
 4188              		.loc 1 1236 0
 4189 0018 1C44     		add	r4, r4, r3
 4190              	.LVL475:
 4191 001a E4B2     		uxtb	r4, r4
 4192              	.LVL476:
1231:u8g/u8g_font.c ****       break;
 4193              		.loc 1 1231 0
 4194 001c 0029     		cmp	r1, #0
 4195 001e F6D1     		bne	.L344
1243:u8g/u8g_font.c **** 
 4196              		.loc 1 1243 0
 4197 0020 2046     		mov	r0, r4
 4198 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4199              	.LVL477:
 4200              	.L345:
1226:u8g/u8g_font.c ****   
 4201              		.loc 1 1226 0
 4202 0024 0C46     		mov	r4, r1
1243:u8g/u8g_font.c **** 
 4203              		.loc 1 1243 0
 4204 0026 2046     		mov	r0, r4
 4205              	.LVL478:
 4206 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4207              	.LVL479:
 4208              	.L349:
 4209 002a 00BF     		.align	2
 4210              	.L348:
 4211 002c 00000000 		.word	u8g_GetGlyph
 4212              		.cfi_endproc
 4213              	.LFE70:
 4215              		.section	.text.u8g_font_box_min,"ax",%progbits
 4216              		.align	1
 4217              		.p2align 2,,3
 4218              		.global	u8g_font_box_min
 4219              		.syntax unified
 4220              		.thumb
 4221              		.thumb_func
 4222              		.fpu softvfp
 4224              	u8g_font_box_min:
 4225              	.LFB72:
1341:u8g/u8g_font.c **** 
1342:u8g/u8g_font.c **** /* calculate minimal box */
1343:u8g/u8g_font.c **** void u8g_font_box_min(u8g_t *u8g, const char *s, u8g_str_size_t *buf)
1344:u8g/u8g_font.c **** {
 4226              		.loc 1 1344 0
 4227              		.cfi_startproc
 4228              		@ args = 0, pretend = 0, frame = 0
 4229              		@ frame_needed = 0, uses_anonymous_args = 0
 4230              		@ link register save eliminated.
 4231              	.LVL480:
 4232 0000 10B4     		push	{r4}
 4233              	.LCFI58:
 4234              		.cfi_def_cfa_offset 4
 4235              		.cfi_offset 4, -4
 4236              	.LBB200:
 4237              	.LBB201:
1273:u8g/u8g_font.c ****     
 4238              		.loc 1 1273 0
 4239 0002 0024     		movs	r4, #0
 4240 0004 1471     		strb	r4, [r2, #4]
1276:u8g/u8g_font.c ****   {
 4241              		.loc 1 1276 0
 4242 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 4243 0008 2CB9     		cbnz	r4, .L351
1278:u8g/u8g_font.c ****     buf->y_max = 0;
 4244              		.loc 1 1278 0
 4245 000a 1470     		strb	r4, [r2]
1279:u8g/u8g_font.c ****     buf->x = 0;
 4246              		.loc 1 1279 0
 4247 000c 5470     		strb	r4, [r2, #1]
1280:u8g/u8g_font.c ****     buf->y = 0;
 4248              		.loc 1 1280 0
 4249 000e 9470     		strb	r4, [r2, #2]
1281:u8g/u8g_font.c ****     return;
 4250              		.loc 1 1281 0
 4251 0010 D470     		strb	r4, [r2, #3]
 4252              	.LBE201:
 4253              	.LBE200:
1345:u8g/u8g_font.c ****   u8g_font_calc_str_min_box(u8g, s, buf);
1346:u8g/u8g_font.c **** }
 4254              		.loc 1 1346 0
 4255 0012 10BC     		pop	{r4}
 4256              	.LCFI59:
 4257              		.cfi_remember_state
 4258              		.cfi_restore 4
 4259              		.cfi_def_cfa_offset 0
 4260 0014 7047     		bx	lr
 4261              	.L351:
 4262              	.LCFI60:
 4263              		.cfi_restore_state
 4264              	.LBB204:
 4265              	.LBB202:
 4266 0016 014B     		ldr	r3, .L355
 4267              	.LBE202:
 4268              	.LBE204:
 4269 0018 10BC     		pop	{r4}
 4270              	.LCFI61:
 4271              		.cfi_restore 4
 4272              		.cfi_def_cfa_offset 0
 4273              	.LBB205:
 4274              	.LBB203:
 4275 001a 1847     		bx	r3	@ indirect register sibling call
 4276              	.LVL481:
 4277              	.L356:
 4278              		.align	2
 4279              	.L355:
 4280 001c 00000000 		.word	u8g_font_calc_str_min_box.part.2
 4281              	.LBE203:
 4282              	.LBE205:
 4283              		.cfi_endproc
 4284              	.LFE72:
 4286              		.section	.text.u8g_font_box_left_gA,"ax",%progbits
 4287              		.align	1
 4288              		.p2align 2,,3
 4289              		.global	u8g_font_box_left_gA
 4290              		.syntax unified
 4291              		.thumb
 4292              		.thumb_func
 4293              		.fpu softvfp
 4295              	u8g_font_box_left_gA:
 4296              	.LFB73:
1347:u8g/u8g_font.c **** 
1348:u8g/u8g_font.c **** /* calculate gA box, but do not calculate the overall width */
1349:u8g/u8g_font.c **** void u8g_font_box_left_gA(u8g_t *u8g, const char *s, u8g_str_size_t *buf)
1350:u8g/u8g_font.c **** {
 4297              		.loc 1 1350 0
 4298              		.cfi_startproc
 4299              		@ args = 0, pretend = 0, frame = 0
 4300              		@ frame_needed = 0, uses_anonymous_args = 0
 4301              		@ link register save eliminated.
 4302              	.LVL482:
1351:u8g/u8g_font.c ****   
1352:u8g/u8g_font.c **** }
 4303              		.loc 1 1352 0
 4304 0000 7047     		bx	lr
 4305              		.cfi_endproc
 4306              	.LFE73:
 4308 0002 00BF     		.section	.text.u8g_font_box_all_gA,"ax",%progbits
 4309              		.align	1
 4310              		.p2align 2,,3
 4311              		.global	u8g_font_box_all_gA
 4312              		.syntax unified
 4313              		.thumb
 4314              		.thumb_func
 4315              		.fpu softvfp
 4317              	u8g_font_box_all_gA:
 4318              	.LFB89:
 4319              		.cfi_startproc
 4320              		@ args = 0, pretend = 0, frame = 0
 4321              		@ frame_needed = 0, uses_anonymous_args = 0
 4322              		@ link register save eliminated.
 4323 0000 7047     		bx	lr
 4324              		.cfi_endproc
 4325              	.LFE89:
 4327 0002 00BF     		.section	.text.u8g_GetStrMinBox,"ax",%progbits
 4328              		.align	1
 4329              		.p2align 2,,3
 4330              		.global	u8g_GetStrMinBox
 4331              		.syntax unified
 4332              		.thumb
 4333              		.thumb_func
 4334              		.fpu softvfp
 4336              	u8g_GetStrMinBox:
 4337              	.LFB76:
1353:u8g/u8g_font.c **** 
1354:u8g/u8g_font.c **** /* calculate gA box, including overall width */
1355:u8g/u8g_font.c **** void u8g_font_box_all_gA(u8g_t *u8g, const char *s, u8g_str_size_t *buf)
1356:u8g/u8g_font.c **** {
1357:u8g/u8g_font.c ****   
1358:u8g/u8g_font.c **** }
1359:u8g/u8g_font.c **** 
1360:u8g/u8g_font.c **** 
1361:u8g/u8g_font.c **** static void u8g_font_get_str_box_fill_args(u8g_t *u8g, const char *s, u8g_str_size_t *buf, u8g_uint
1362:u8g/u8g_font.c **** {
1363:u8g/u8g_font.c ****   /*
1364:u8g/u8g_font.c ****   u8g_glyph_t g;
1365:u8g/u8g_font.c ****   g =
1366:u8g/u8g_font.c ****   */  
1367:u8g/u8g_font.c ****   u8g_GetGlyph(u8g, *s);
1368:u8g/u8g_font.c ****   *x += u8g->glyph_x;
1369:u8g/u8g_font.c ****   *width = buf->w;
1370:u8g/u8g_font.c ****   *y -= buf->y_max;
1371:u8g/u8g_font.c ****   /* +1 because y_max is a height, this compensates the next step */
1372:u8g/u8g_font.c ****   //*y += 1;                      
1373:u8g/u8g_font.c ****   /* because the reference point is one below the string, this compensates the previous step */
1374:u8g/u8g_font.c ****   //*y -= 1;
1375:u8g/u8g_font.c ****   *height = buf->y_max;
1376:u8g/u8g_font.c ****   *height -= buf->y_min;
1377:u8g/u8g_font.c **** }
1378:u8g/u8g_font.c **** 
1379:u8g/u8g_font.c **** 
1380:u8g/u8g_font.c **** void u8g_GetStrMinBox(u8g_t *u8g, const char *s, u8g_uint_t *x, u8g_uint_t *y, u8g_uint_t *width, u
1381:u8g/u8g_font.c **** {
 4338              		.loc 1 1381 0
 4339              		.cfi_startproc
 4340              		@ args = 8, pretend = 0, frame = 8
 4341              		@ frame_needed = 0, uses_anonymous_args = 0
 4342              	.LVL483:
 4343              		.loc 1 1381 0
 4344 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4345              	.LCFI62:
 4346              		.cfi_def_cfa_offset 20
 4347              		.cfi_offset 4, -20
 4348              		.cfi_offset 5, -16
 4349              		.cfi_offset 6, -12
 4350              		.cfi_offset 7, -8
 4351              		.cfi_offset 14, -4
1382:u8g/u8g_font.c ****   u8g_str_size_t buf;
1383:u8g/u8g_font.c ****   
1384:u8g/u8g_font.c ****   if ( *s == '\0' )
 4352              		.loc 1 1384 0
 4353 0002 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
1381:u8g/u8g_font.c ****   u8g_str_size_t buf;
 4354              		.loc 1 1381 0
 4355 0004 83B0     		sub	sp, sp, #12
 4356              	.LCFI63:
 4357              		.cfi_def_cfa_offset 32
 4358              		.loc 1 1384 0
 4359 0006 2CB9     		cbnz	r4, .L360
1385:u8g/u8g_font.c ****   {
1386:u8g/u8g_font.c ****     *width= 0;
 4360              		.loc 1 1386 0
 4361 0008 089B     		ldr	r3, [sp, #32]
 4362              	.LVL484:
 4363 000a 1C70     		strb	r4, [r3]
1387:u8g/u8g_font.c ****     *height = 0;
 4364              		.loc 1 1387 0
 4365 000c 099B     		ldr	r3, [sp, #36]
 4366 000e 1C70     		strb	r4, [r3]
1388:u8g/u8g_font.c ****     return;
1389:u8g/u8g_font.c ****   }
1390:u8g/u8g_font.c ****   
1391:u8g/u8g_font.c ****   u8g_font_calc_str_min_box(u8g, s, &buf);
1392:u8g/u8g_font.c ****   u8g_font_get_str_box_fill_args(u8g, s, &buf, x, y, width, height);
1393:u8g/u8g_font.c **** }
 4367              		.loc 1 1393 0
 4368 0010 03B0     		add	sp, sp, #12
 4369              	.LCFI64:
 4370              		.cfi_remember_state
 4371              		.cfi_def_cfa_offset 20
 4372              		@ sp needed
 4373 0012 F0BD     		pop	{r4, r5, r6, r7, pc}
 4374              	.LVL485:
 4375              	.L360:
 4376              	.LCFI65:
 4377              		.cfi_restore_state
 4378 0014 0746     		mov	r7, r0
 4379              	.LVL486:
 4380              	.LBB206:
 4381              	.LBB207:
1273:u8g/u8g_font.c ****     
 4382              		.loc 1 1273 0
 4383 0016 4FF0000C 		mov	ip, #0
 4384 001a 0D46     		mov	r5, r1
 4385              	.LVL487:
 4386 001c 1646     		mov	r6, r2
 4387 001e 1C46     		mov	r4, r3
 4388 0020 6A46     		mov	r2, sp
 4389              	.LVL488:
 4390 0022 0E4B     		ldr	r3, .L363
 4391              	.LVL489:
 4392 0024 8DF804C0 		strb	ip, [sp, #4]
 4393 0028 9847     		blx	r3
 4394              	.LVL490:
 4395              	.LBE207:
 4396              	.LBE206:
 4397              	.LBB208:
 4398              	.LBB209:
1367:u8g/u8g_font.c ****   *x += u8g->glyph_x;
 4399              		.loc 1 1367 0
 4400 002a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 4401 002c 3846     		mov	r0, r7
 4402 002e 0C4B     		ldr	r3, .L363+4
 4403 0030 9847     		blx	r3
 4404              	.LVL491:
1368:u8g/u8g_font.c ****   *width = buf->w;
 4405              		.loc 1 1368 0
 4406 0032 797F     		ldrb	r1, [r7, #29]	@ zero_extendqisi2
 4407 0034 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
1369:u8g/u8g_font.c ****   *y -= buf->y_max;
 4408              		.loc 1 1369 0
 4409 0036 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
1368:u8g/u8g_font.c ****   *width = buf->w;
 4410              		.loc 1 1368 0
 4411 003a 0B44     		add	r3, r3, r1
 4412 003c 3370     		strb	r3, [r6]
1369:u8g/u8g_font.c ****   *y -= buf->y_max;
 4413              		.loc 1 1369 0
 4414 003e 089B     		ldr	r3, [sp, #32]
1376:u8g/u8g_font.c **** }
 4415              		.loc 1 1376 0
 4416 0040 9DF80010 		ldrb	r1, [sp]	@ zero_extendqisi2
1369:u8g/u8g_font.c ****   *y -= buf->y_max;
 4417              		.loc 1 1369 0
 4418 0044 1A70     		strb	r2, [r3]
1370:u8g/u8g_font.c ****   /* +1 because y_max is a height, this compensates the next step */
 4419              		.loc 1 1370 0
 4420 0046 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 4421 0048 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 4422 004c D21A     		subs	r2, r2, r3
 4423 004e 2270     		strb	r2, [r4]
1376:u8g/u8g_font.c **** }
 4424              		.loc 1 1376 0
 4425 0050 099A     		ldr	r2, [sp, #36]
 4426 0052 5B1A     		subs	r3, r3, r1
 4427 0054 1370     		strb	r3, [r2]
 4428              	.LVL492:
 4429              	.LBE209:
 4430              	.LBE208:
 4431              		.loc 1 1393 0
 4432 0056 03B0     		add	sp, sp, #12
 4433              	.LCFI66:
 4434              		.cfi_def_cfa_offset 20
 4435              		@ sp needed
 4436 0058 F0BD     		pop	{r4, r5, r6, r7, pc}
 4437              	.LVL493:
 4438              	.L364:
 4439 005a 00BF     		.align	2
 4440              	.L363:
 4441 005c 00000000 		.word	u8g_font_calc_str_min_box.part.2
 4442 0060 00000000 		.word	u8g_GetGlyph
 4443              		.cfi_endproc
 4444              	.LFE76:
 4446              		.section	.text.u8g_GetStrAMinBox,"ax",%progbits
 4447              		.align	1
 4448              		.p2align 2,,3
 4449              		.global	u8g_GetStrAMinBox
 4450              		.syntax unified
 4451              		.thumb
 4452              		.thumb_func
 4453              		.fpu softvfp
 4455              	u8g_GetStrAMinBox:
 4456              	.LFB77:
1394:u8g/u8g_font.c **** 
1395:u8g/u8g_font.c **** 
1396:u8g/u8g_font.c **** void u8g_GetStrAMinBox(u8g_t *u8g, const char *s, u8g_uint_t *x, u8g_uint_t *y, u8g_uint_t *width, 
1397:u8g/u8g_font.c **** {
 4457              		.loc 1 1397 0
 4458              		.cfi_startproc
 4459              		@ args = 8, pretend = 0, frame = 8
 4460              		@ frame_needed = 0, uses_anonymous_args = 0
 4461              	.LVL494:
 4462 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4463              	.LCFI67:
 4464              		.cfi_def_cfa_offset 28
 4465              		.cfi_offset 4, -28
 4466              		.cfi_offset 5, -24
 4467              		.cfi_offset 6, -20
 4468              		.cfi_offset 7, -16
 4469              		.cfi_offset 8, -12
 4470              		.cfi_offset 9, -8
 4471              		.cfi_offset 14, -4
1398:u8g/u8g_font.c ****   u8g_str_size_t buf;
1399:u8g/u8g_font.c ****   uint8_t cap_a;
1400:u8g/u8g_font.c ****   
1401:u8g/u8g_font.c ****   if ( *s == '\0' )
 4472              		.loc 1 1401 0
 4473 0004 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
1397:u8g/u8g_font.c ****   u8g_str_size_t buf;
 4474              		.loc 1 1397 0
 4475 0006 83B0     		sub	sp, sp, #12
 4476              	.LCFI68:
 4477              		.cfi_def_cfa_offset 40
 4478              		.loc 1 1401 0
 4479 0008 34B9     		cbnz	r4, .L366
1402:u8g/u8g_font.c ****   {
1403:u8g/u8g_font.c ****     *width= 0;
 4480              		.loc 1 1403 0
 4481 000a 0A9B     		ldr	r3, [sp, #40]
 4482              	.LVL495:
 4483 000c 1C70     		strb	r4, [r3]
1404:u8g/u8g_font.c ****     *height = 0;
 4484              		.loc 1 1404 0
 4485 000e 0B9B     		ldr	r3, [sp, #44]
 4486 0010 1C70     		strb	r4, [r3]
1405:u8g/u8g_font.c ****     return;
1406:u8g/u8g_font.c ****   }
1407:u8g/u8g_font.c ****   
1408:u8g/u8g_font.c ****   cap_a = u8g_font_GetCapitalAHeight(u8g->font);
1409:u8g/u8g_font.c ****   u8g_font_calc_str_min_box(u8g, s, &buf);
1410:u8g/u8g_font.c ****   if ( buf.y_max < cap_a )
1411:u8g/u8g_font.c ****     buf.y_max = cap_a;
1412:u8g/u8g_font.c ****   u8g_font_get_str_box_fill_args(u8g, s, &buf, x, y, width, height);
1413:u8g/u8g_font.c **** }
 4487              		.loc 1 1413 0
 4488 0012 03B0     		add	sp, sp, #12
 4489              	.LCFI69:
 4490              		.cfi_remember_state
 4491              		.cfi_def_cfa_offset 28
 4492              		@ sp needed
 4493 0014 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4494              	.LVL496:
 4495              	.L366:
 4496              	.LCFI70:
 4497              		.cfi_restore_state
 4498              	.LBB210:
 4499              	.LBB211:
1273:u8g/u8g_font.c ****     
 4500              		.loc 1 1273 0
 4501 0018 4FF0000C 		mov	ip, #0
 4502 001c 0446     		mov	r4, r0
 4503 001e 0D46     		mov	r5, r1
 4504 0020 1746     		mov	r7, r2
 4505 0022 1E46     		mov	r6, r3
 4506              	.LBE211:
 4507              	.LBE210:
 4508              	.LBB214:
 4509              	.LBB215:
 4510              	.LBB216:
  91:u8g/u8g_font.c **** }
 4511              		.loc 1 91 0
 4512 0024 8368     		ldr	r3, [r0, #8]
 4513              	.LVL497:
 4514              	.LBE216:
 4515              	.LBE215:
 4516              	.LBE214:
 4517              	.LBB219:
 4518              	.LBB212:
 4519 0026 6A46     		mov	r2, sp
 4520              	.LVL498:
 4521 0028 DFF84C90 		ldr	r9, .L370+4
 4522              	.LBE212:
 4523              	.LBE219:
 4524              	.LBB220:
 4525              	.LBB218:
 4526              	.LBB217:
 4527 002c 93F80580 		ldrb	r8, [r3, #5]	@ zero_extendqisi2
 4528              	.LVL499:
 4529              	.LBE217:
 4530              	.LBE218:
 4531              	.LBE220:
 4532              	.LBB221:
 4533              	.LBB213:
1273:u8g/u8g_font.c ****     
 4534              		.loc 1 1273 0
 4535 0030 8DF804C0 		strb	ip, [sp, #4]
 4536 0034 C847     		blx	r9
 4537              	.LVL500:
 4538              	.LBE213:
 4539              	.LBE221:
1410:u8g/u8g_font.c ****     buf.y_max = cap_a;
 4540              		.loc 1 1410 0
 4541 0036 9DF90130 		ldrsb	r3, [sp, #1]
 4542              	.LBB222:
 4543              	.LBB223:
1367:u8g/u8g_font.c ****   *x += u8g->glyph_x;
 4544              		.loc 1 1367 0
 4545 003a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 4546              	.LBE223:
 4547              	.LBE222:
1410:u8g/u8g_font.c ****     buf.y_max = cap_a;
 4548              		.loc 1 1410 0
 4549 003c 4345     		cmp	r3, r8
 4550              	.LBB226:
 4551              	.LBB224:
1367:u8g/u8g_font.c ****   *x += u8g->glyph_x;
 4552              		.loc 1 1367 0
 4553 003e 2046     		mov	r0, r4
 4554 0040 0C4B     		ldr	r3, .L370
 4555              	.LBE224:
 4556              	.LBE226:
1411:u8g/u8g_font.c ****   u8g_font_get_str_box_fill_args(u8g, s, &buf, x, y, width, height);
 4557              		.loc 1 1411 0
 4558 0042 B8BF     		it	lt
 4559 0044 8DF80180 		strblt	r8, [sp, #1]
 4560              	.LBB227:
 4561              	.LBB225:
1367:u8g/u8g_font.c ****   *x += u8g->glyph_x;
 4562              		.loc 1 1367 0
 4563 0048 9847     		blx	r3
 4564              	.LVL501:
1368:u8g/u8g_font.c ****   *width = buf->w;
 4565              		.loc 1 1368 0
 4566 004a 617F     		ldrb	r1, [r4, #29]	@ zero_extendqisi2
 4567 004c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
1369:u8g/u8g_font.c ****   *y -= buf->y_max;
 4568              		.loc 1 1369 0
 4569 004e 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
1368:u8g/u8g_font.c ****   *width = buf->w;
 4570              		.loc 1 1368 0
 4571 0052 0B44     		add	r3, r3, r1
 4572 0054 3B70     		strb	r3, [r7]
1369:u8g/u8g_font.c ****   *y -= buf->y_max;
 4573              		.loc 1 1369 0
 4574 0056 0A9B     		ldr	r3, [sp, #40]
1376:u8g/u8g_font.c **** }
 4575              		.loc 1 1376 0
 4576 0058 9DF80010 		ldrb	r1, [sp]	@ zero_extendqisi2
1369:u8g/u8g_font.c ****   *y -= buf->y_max;
 4577              		.loc 1 1369 0
 4578 005c 1A70     		strb	r2, [r3]
1370:u8g/u8g_font.c ****   /* +1 because y_max is a height, this compensates the next step */
 4579              		.loc 1 1370 0
 4580 005e 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 4581 0060 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 4582 0064 D21A     		subs	r2, r2, r3
 4583 0066 3270     		strb	r2, [r6]
1376:u8g/u8g_font.c **** }
 4584              		.loc 1 1376 0
 4585 0068 0B9A     		ldr	r2, [sp, #44]
 4586 006a 5B1A     		subs	r3, r3, r1
 4587 006c 1370     		strb	r3, [r2]
 4588              	.LVL502:
 4589              	.LBE225:
 4590              	.LBE227:
 4591              		.loc 1 1413 0
 4592 006e 03B0     		add	sp, sp, #12
 4593              	.LCFI71:
 4594              		.cfi_def_cfa_offset 28
 4595              		@ sp needed
 4596 0070 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4597              	.LVL503:
 4598              	.L371:
 4599              		.align	2
 4600              	.L370:
 4601 0074 00000000 		.word	u8g_GetGlyph
 4602 0078 00000000 		.word	u8g_font_calc_str_min_box.part.2
 4603              		.cfi_endproc
 4604              	.LFE77:
 4606              		.section	.text.u8g_SetFont,"ax",%progbits
 4607              		.align	1
 4608              		.p2align 2,,3
 4609              		.global	u8g_SetFont
 4610              		.syntax unified
 4611              		.thumb
 4612              		.thumb_func
 4613              		.fpu softvfp
 4615              	u8g_SetFont:
 4616              	.LFB78:
1414:u8g/u8g_font.c **** 
1415:u8g/u8g_font.c **** void u8g_SetFont(u8g_t *u8g, const u8g_fntpgm_uint8_t  *font)
1416:u8g/u8g_font.c **** {
 4617              		.loc 1 1416 0
 4618              		.cfi_startproc
 4619              		@ args = 0, pretend = 0, frame = 0
 4620              		@ frame_needed = 0, uses_anonymous_args = 0
 4621              	.LVL504:
1417:u8g/u8g_font.c ****   if ( u8g->font != font )
 4622              		.loc 1 1417 0
 4623 0000 8268     		ldr	r2, [r0, #8]
 4624 0002 8A42     		cmp	r2, r1
 4625 0004 06D0     		beq	.L375
1418:u8g/u8g_font.c ****   {
1419:u8g/u8g_font.c ****     u8g->font = font;
1420:u8g/u8g_font.c ****     u8g_UpdateRefHeight(u8g);
 4626              		.loc 1 1420 0
 4627 0006 044B     		ldr	r3, .L378
1416:u8g/u8g_font.c ****   if ( u8g->font != font )
 4628              		.loc 1 1416 0
 4629 0008 10B5     		push	{r4, lr}
 4630              	.LCFI72:
 4631              		.cfi_def_cfa_offset 8
 4632              		.cfi_offset 4, -8
 4633              		.cfi_offset 14, -4
1419:u8g/u8g_font.c ****     u8g_UpdateRefHeight(u8g);
 4634              		.loc 1 1419 0
 4635 000a 8160     		str	r1, [r0, #8]
 4636              		.loc 1 1420 0
 4637 000c 9847     		blx	r3
 4638              	.LVL505:
 4639              	.LBB228:
 4640              	.LBB229:
1041:u8g/u8g_font.c **** }
 4641              		.loc 1 1041 0
 4642 000e 034B     		ldr	r3, .L378+4
 4643 0010 4362     		str	r3, [r0, #36]
 4644              	.LBE229:
 4645              	.LBE228:
1421:u8g/u8g_font.c ****     u8g_SetFontPosBaseline(u8g);
1422:u8g/u8g_font.c ****   }
1423:u8g/u8g_font.c **** }
 4646              		.loc 1 1423 0
 4647 0012 10BD     		pop	{r4, pc}
 4648              	.LVL506:
 4649              	.L375:
 4650              	.LCFI73:
 4651              		.cfi_def_cfa_offset 0
 4652              		.cfi_restore 4
 4653              		.cfi_restore 14
 4654 0014 7047     		bx	lr
 4655              	.L379:
 4656 0016 00BF     		.align	2
 4657              	.L378:
 4658 0018 00000000 		.word	u8g_UpdateRefHeight
 4659 001c 00000000 		.word	u8g_font_calc_vref_font
 4660              		.cfi_endproc
 4661              	.LFE78:
 4663              		.section	.text.u8g_draw_aa_glyph,"ax",%progbits
 4664              		.align	1
 4665              		.p2align 2,,3
 4666              		.global	u8g_draw_aa_glyph
 4667              		.syntax unified
 4668              		.thumb
 4669              		.thumb_func
 4670              		.fpu softvfp
 4672              	u8g_draw_aa_glyph:
 4673              	.LFB79:
1424:u8g/u8g_font.c **** 
1425:u8g/u8g_font.c **** /*========================================================================*/
1426:u8g/u8g_font.c **** /* anti aliasing fonts */
1427:u8g/u8g_font.c **** 
1428:u8g/u8g_font.c **** int8_t u8g_draw_aa_glyph(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t encoding)
1429:u8g/u8g_font.c **** {
 4674              		.loc 1 1429 0
 4675              		.cfi_startproc
 4676              		@ args = 0, pretend = 0, frame = 16
 4677              		@ frame_needed = 0, uses_anonymous_args = 0
 4678              	.LVL507:
 4679 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4680              	.LCFI74:
 4681              		.cfi_def_cfa_offset 36
 4682              		.cfi_offset 4, -36
 4683              		.cfi_offset 5, -32
 4684              		.cfi_offset 6, -28
 4685              		.cfi_offset 7, -24
 4686              		.cfi_offset 8, -20
 4687              		.cfi_offset 9, -16
 4688              		.cfi_offset 10, -12
 4689              		.cfi_offset 11, -8
 4690              		.cfi_offset 14, -4
 4691 0004 8B46     		mov	fp, r1
 4692 0006 87B0     		sub	sp, sp, #28
 4693              	.LCFI75:
 4694              		.cfi_def_cfa_offset 64
 4695              	.LBB230:
1430:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
1431:u8g/u8g_font.c ****   uint8_t w, h;
1432:u8g/u8g_font.c ****   uint8_t i, j;
1433:u8g/u8g_font.c ****   u8g_uint_t ix, iy;
1434:u8g/u8g_font.c **** 
1435:u8g/u8g_font.c ****   {
1436:u8g/u8g_font.c ****     u8g_glyph_t g = u8g_GetGlyph(u8g, encoding);
 4696              		.loc 1 1436 0
 4697 0008 2C4D     		ldr	r5, .L395
 4698 000a 1946     		mov	r1, r3
 4699              	.LVL508:
 4700              	.LBE230:
1429:u8g/u8g_font.c ****   const u8g_pgm_uint8_t *data;
 4701              		.loc 1 1429 0
 4702 000c 1446     		mov	r4, r2
 4703 000e 0746     		mov	r7, r0
 4704              	.LBB237:
 4705              		.loc 1 1436 0
 4706 0010 A847     		blx	r5
 4707              	.LVL509:
1437:u8g/u8g_font.c ****     if ( g == NULL  )
 4708              		.loc 1 1437 0
 4709 0012 8246     		mov	r10, r0
 4710 0014 0028     		cmp	r0, #0
 4711 0016 4DD0     		beq	.L387
 4712              	.LVL510:
 4713              	.LBB231:
 4714              	.LBB232:
 203:u8g/u8g_font.c **** }
 4715              		.loc 1 203 0
 4716 0018 BA68     		ldr	r2, [r7, #8]
 4717 001a 294B     		ldr	r3, .L395+4
 4718 001c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4719              	.LVL511:
 4720 001e 9847     		blx	r3
 4721              	.LVL512:
 4722              	.LBE232:
 4723              	.LBE231:
 4724              	.LBE237:
1438:u8g/u8g_font.c ****       return 0;
1439:u8g/u8g_font.c ****     data = u8g_font_GetGlyphDataStart(u8g->font, g);
1440:u8g/u8g_font.c ****   }
1441:u8g/u8g_font.c ****   
1442:u8g/u8g_font.c ****   w = u8g->glyph_width;
1443:u8g/u8g_font.c ****   h = u8g->glyph_height;
 4725              		.loc 1 1443 0
 4726 0020 97F82080 		ldrb	r8, [r7, #32]	@ zero_extendqisi2
1444:u8g/u8g_font.c ****   
1445:u8g/u8g_font.c ****   x += u8g->glyph_x;
1446:u8g/u8g_font.c ****   y -= u8g->glyph_y;
1447:u8g/u8g_font.c ****   y--;
1448:u8g/u8g_font.c ****   
1449:u8g/u8g_font.c ****   if ( u8g_IsBBXIntersection(u8g, x, y-h+1, w, h) == 0 )
 4727              		.loc 1 1449 0
 4728 0024 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 4729              	.LVL513:
1445:u8g/u8g_font.c ****   y -= u8g->glyph_y;
 4730              		.loc 1 1445 0
 4731 0026 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 4732              		.loc 1 1449 0
 4733 0028 A4EB0805 		sub	r5, r4, r8
 4734 002c AD1A     		subs	r5, r5, r2
1445:u8g/u8g_font.c ****   y -= u8g->glyph_y;
 4735              		.loc 1 1445 0
 4736 002e 9B44     		add	fp, fp, r3
1442:u8g/u8g_font.c ****   h = u8g->glyph_height;
 4737              		.loc 1 1442 0
 4738 0030 FC7F     		ldrb	r4, [r7, #31]	@ zero_extendqisi2
 4739              		.loc 1 1449 0
 4740 0032 EDB2     		uxtb	r5, r5
1445:u8g/u8g_font.c ****   y -= u8g->glyph_y;
 4741              		.loc 1 1445 0
 4742 0034 5FFA8BFB 		uxtb	fp, fp
 4743              	.LBB238:
 4744              	.LBB235:
 4745              	.LBB233:
 203:u8g/u8g_font.c **** }
 4746              		.loc 1 203 0
 4747 0038 0646     		mov	r6, r0
 4748              	.LVL514:
 4749              	.LBE233:
 4750              	.LBE235:
 4751              	.LBE238:
 4752              		.loc 1 1449 0
 4753 003a CDF80080 		str	r8, [sp]
 4754 003e 2A46     		mov	r2, r5
 4755 0040 5946     		mov	r1, fp
 4756 0042 2346     		mov	r3, r4
 4757 0044 3846     		mov	r0, r7
 4758 0046 DFF88090 		ldr	r9, .L395+12
 4759 004a C847     		blx	r9
 4760              	.LVL515:
 4761 004c 68B3     		cbz	r0, .L383
1450:u8g/u8g_font.c ****     return u8g->glyph_dx;
1451:u8g/u8g_font.c **** 
1452:u8g/u8g_font.c ****   /* now, w is reused as bytes per line */
1453:u8g/u8g_font.c ****   w += 3;
 4762              		.loc 1 1453 0
 4763 004e 0334     		adds	r4, r4, #3
 4764              	.LVL516:
1454:u8g/u8g_font.c ****   w /= 4;
 4765              		.loc 1 1454 0
 4766 0050 C4F38502 		ubfx	r2, r4, #2, #6
 4767 0054 0392     		str	r2, [sp, #12]
 4768              	.LVL517:
1455:u8g/u8g_font.c ****   
1456:u8g/u8g_font.c ****   iy = y;
1457:u8g/u8g_font.c ****   iy -= h;
1458:u8g/u8g_font.c ****   iy++;
1459:u8g/u8g_font.c **** 
1460:u8g/u8g_font.c ****   for( j = 0; j < h; j++ )
 4769              		.loc 1 1460 0
 4770 0056 B8F1000F 		cmp	r8, #0
 4771 005a 26D0     		beq	.L383
 4772 005c A844     		add	r8, r8, r5
 4773              	.LVL518:
 4774 005e 531E     		subs	r3, r2, #1
 4775 0060 0BEB8209 		add	r9, fp, r2, lsl #2
 4776 0064 5FFA88F2 		uxtb	r2, r8
 4777              	.LVL519:
 4778 0068 B846     		mov	r8, r7
 4779 006a DBB2     		uxtb	r3, r3
 4780 006c 0133     		adds	r3, r3, #1
 4781 006e 0492     		str	r2, [sp, #16]
 4782              	.LBB239:
 4783              	.LBB236:
 4784              	.LBB234:
 203:u8g/u8g_font.c **** }
 4785              		.loc 1 203 0
 4786 0070 B244     		add	r10, r10, r6
 4787              	.LVL520:
 4788 0072 0593     		str	r3, [sp, #20]
 4789 0074 5FFA89F9 		uxtb	r9, r9
 4790              	.LVL521:
 4791              	.L384:
 4792              	.LBE234:
 4793              	.LBE236:
 4794              	.LBE239:
1461:u8g/u8g_font.c ****   {
1462:u8g/u8g_font.c ****     ix = x;
1463:u8g/u8g_font.c ****     for( i = 0; i < w; i++ )
 4795              		.loc 1 1463 0
 4796 0078 039B     		ldr	r3, [sp, #12]
 4797 007a 83B1     		cbz	r3, .L386
1462:u8g/u8g_font.c ****     for( i = 0; i < w; i++ )
 4798              		.loc 1 1462 0
 4799 007c 5C46     		mov	r4, fp
 4800              		.loc 1 1463 0
 4801 007e 5646     		mov	r6, r10
 4802 0080 104F     		ldr	r7, .L395+8
 4803              	.LVL522:
 4804              	.L385:
1464:u8g/u8g_font.c ****     {
1465:u8g/u8g_font.c ****       u8g_Draw4TPixel(u8g, ix, iy, 0, u8g_pgm_read(data));
 4805              		.loc 1 1465 0 discriminator 3
 4806 0082 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 4807              	.LVL523:
 4808 0086 2146     		mov	r1, r4
1466:u8g/u8g_font.c ****       data++;
1467:u8g/u8g_font.c ****       ix+=4;
 4809              		.loc 1 1467 0 discriminator 3
 4810 0088 0434     		adds	r4, r4, #4
 4811              	.LVL524:
1465:u8g/u8g_font.c ****       data++;
 4812              		.loc 1 1465 0 discriminator 3
 4813 008a 0092     		str	r2, [sp]
 4814 008c 0023     		movs	r3, #0
 4815 008e 2A46     		mov	r2, r5
 4816 0090 4046     		mov	r0, r8
 4817              		.loc 1 1467 0 discriminator 3
 4818 0092 E4B2     		uxtb	r4, r4
1465:u8g/u8g_font.c ****       data++;
 4819              		.loc 1 1465 0 discriminator 3
 4820 0094 B847     		blx	r7
 4821              	.LVL525:
1463:u8g/u8g_font.c ****     {
 4822              		.loc 1 1463 0 discriminator 3
 4823 0096 4C45     		cmp	r4, r9
 4824 0098 F3D1     		bne	.L385
 4825 009a 059B     		ldr	r3, [sp, #20]
 4826 009c 9A44     		add	r10, r10, r3
 4827              	.LVL526:
 4828              	.L386:
1468:u8g/u8g_font.c ****     }
1469:u8g/u8g_font.c ****     iy++;
 4829              		.loc 1 1469 0 discriminator 2
 4830 009e 0135     		adds	r5, r5, #1
 4831              	.LVL527:
1460:u8g/u8g_font.c ****   {
 4832              		.loc 1 1460 0 discriminator 2
 4833 00a0 049B     		ldr	r3, [sp, #16]
 4834              		.loc 1 1469 0 discriminator 2
 4835 00a2 EDB2     		uxtb	r5, r5
 4836              	.LVL528:
1460:u8g/u8g_font.c ****   {
 4837              		.loc 1 1460 0 discriminator 2
 4838 00a4 AB42     		cmp	r3, r5
 4839 00a6 E7D1     		bne	.L384
 4840 00a8 4746     		mov	r7, r8
 4841              	.LVL529:
 4842              	.L383:
1470:u8g/u8g_font.c ****   }
1471:u8g/u8g_font.c ****   return u8g->glyph_dx;
 4843              		.loc 1 1471 0
 4844 00aa 97F91C00 		ldrsb	r0, [r7, #28]
1472:u8g/u8g_font.c **** }
 4845              		.loc 1 1472 0
 4846 00ae 07B0     		add	sp, sp, #28
 4847              	.LCFI76:
 4848              		.cfi_remember_state
 4849              		.cfi_def_cfa_offset 36
 4850              		@ sp needed
 4851 00b0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4852              	.LVL530:
 4853              	.L387:
 4854              	.LCFI77:
 4855              		.cfi_restore_state
 4856 00b4 07B0     		add	sp, sp, #28
 4857              	.LCFI78:
 4858              		.cfi_def_cfa_offset 36
 4859              		@ sp needed
 4860 00b6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4861              	.LVL531:
 4862              	.L396:
 4863 00ba 00BF     		.align	2
 4864              	.L395:
 4865 00bc 00000000 		.word	u8g_GetGlyph
 4866 00c0 00000000 		.word	u8g_font_GetFontGlyphStructureSize.isra.1
 4867 00c4 00000000 		.word	u8g_Draw4TPixel
 4868 00c8 00000000 		.word	u8g_IsBBXIntersection
 4869              		.cfi_endproc
 4870              	.LFE79:
 4872              		.section	.text.u8g_DrawAAGlyph,"ax",%progbits
 4873              		.align	1
 4874              		.p2align 2,,3
 4875              		.global	u8g_DrawAAGlyph
 4876              		.syntax unified
 4877              		.thumb
 4878              		.thumb_func
 4879              		.fpu softvfp
 4881              	u8g_DrawAAGlyph:
 4882              	.LFB80:
1473:u8g/u8g_font.c **** 
1474:u8g/u8g_font.c **** int8_t u8g_DrawAAGlyph(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, uint8_t encoding)
1475:u8g/u8g_font.c **** {
 4883              		.loc 1 1475 0
 4884              		.cfi_startproc
 4885              		@ args = 0, pretend = 0, frame = 0
 4886              		@ frame_needed = 0, uses_anonymous_args = 0
 4887              	.LVL532:
 4888 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4889              	.LCFI79:
 4890              		.cfi_def_cfa_offset 24
 4891              		.cfi_offset 4, -24
 4892              		.cfi_offset 5, -20
 4893              		.cfi_offset 6, -16
 4894              		.cfi_offset 7, -12
 4895              		.cfi_offset 8, -8
 4896              		.cfi_offset 14, -4
1476:u8g/u8g_font.c ****   y += u8g->font_calc_vref(u8g);
 4897              		.loc 1 1476 0
 4898 0004 476A     		ldr	r7, [r0, #36]
1475:u8g/u8g_font.c ****   y += u8g->font_calc_vref(u8g);
 4899              		.loc 1 1475 0
 4900 0006 0546     		mov	r5, r0
 4901 0008 0E46     		mov	r6, r1
 4902 000a 1446     		mov	r4, r2
 4903 000c 9846     		mov	r8, r3
 4904              		.loc 1 1476 0
 4905 000e B847     		blx	r7
 4906              	.LVL533:
 4907 0010 0219     		adds	r2, r0, r4
1477:u8g/u8g_font.c ****   return u8g_draw_aa_glyph(u8g, x, y, encoding);
 4908              		.loc 1 1477 0
 4909 0012 044C     		ldr	r4, .L399
 4910              	.LVL534:
 4911 0014 4346     		mov	r3, r8
 4912 0016 3146     		mov	r1, r6
 4913 0018 2846     		mov	r0, r5
 4914 001a A446     		mov	ip, r4
1478:u8g/u8g_font.c **** }
 4915              		.loc 1 1478 0
 4916 001c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 4917              	.LCFI80:
 4918              		.cfi_restore 14
 4919              		.cfi_restore 8
 4920              		.cfi_restore 7
 4921              		.cfi_restore 6
 4922              		.cfi_restore 5
 4923              		.cfi_restore 4
 4924              		.cfi_def_cfa_offset 0
 4925              	.LVL535:
1477:u8g/u8g_font.c ****   return u8g_draw_aa_glyph(u8g, x, y, encoding);
 4926              		.loc 1 1477 0
 4927 0020 D2B2     		uxtb	r2, r2
 4928 0022 6047     		bx	ip
 4929              	.LVL536:
 4930              	.L400:
 4931              		.align	2
 4932              	.L399:
 4933 0024 00000000 		.word	u8g_draw_aa_glyph
 4934              		.cfi_endproc
 4935              	.LFE80:
 4937              		.section	.text.u8g_DrawAAStr,"ax",%progbits
 4938              		.align	1
 4939              		.p2align 2,,3
 4940              		.global	u8g_DrawAAStr
 4941              		.syntax unified
 4942              		.thumb
 4943              		.thumb_func
 4944              		.fpu softvfp
 4946              	u8g_DrawAAStr:
 4947              	.LFB81:
1479:u8g/u8g_font.c **** 
1480:u8g/u8g_font.c **** u8g_uint_t u8g_DrawAAStr(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, const char *s)
1481:u8g/u8g_font.c **** {
 4948              		.loc 1 1481 0
 4949              		.cfi_startproc
 4950              		@ args = 0, pretend = 0, frame = 0
 4951              		@ frame_needed = 0, uses_anonymous_args = 0
 4952              	.LVL537:
 4953 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4954              	.LCFI81:
 4955              		.cfi_def_cfa_offset 32
 4956              		.cfi_offset 3, -32
 4957              		.cfi_offset 4, -28
 4958              		.cfi_offset 5, -24
 4959              		.cfi_offset 6, -20
 4960              		.cfi_offset 7, -16
 4961              		.cfi_offset 8, -12
 4962              		.cfi_offset 9, -8
 4963              		.cfi_offset 14, -4
 4964              		.loc 1 1481 0
 4965 0004 0746     		mov	r7, r0
1482:u8g/u8g_font.c ****   u8g_uint_t t = 0;
1483:u8g/u8g_font.c ****   int8_t d;
1484:u8g/u8g_font.c **** 
1485:u8g/u8g_font.c ****   if ( u8g_font_GetFormat(u8g->font)  != 2 )
 4966              		.loc 1 1485 0
 4967 0006 8068     		ldr	r0, [r0, #8]
 4968              	.LVL538:
 4969 0008 DFF84880 		ldr	r8, .L410
 4970 000c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4971 000e C047     		blx	r8
 4972              	.LVL539:
 4973 0010 0228     		cmp	r0, #2
1482:u8g/u8g_font.c ****   u8g_uint_t t = 0;
 4974              		.loc 1 1482 0
 4975 0012 4FF00009 		mov	r9, #0
 4976              		.loc 1 1485 0
 4977 0016 19D1     		bne	.L404
 4978 0018 1D46     		mov	r5, r3
1486:u8g/u8g_font.c ****     return 0;
1487:u8g/u8g_font.c ****   //u8g_uint_t u8g_GetStrWidth(u8g, s);
1488:u8g/u8g_font.c ****   //u8g_font_GetFontAscent(u8g->font)-u8g_font_GetFontDescent(u8g->font);
1489:u8g/u8g_font.c ****   
1490:u8g/u8g_font.c ****   y += u8g->font_calc_vref(u8g);
 4979              		.loc 1 1490 0
 4980 001a 3846     		mov	r0, r7
 4981 001c 7B6A     		ldr	r3, [r7, #36]
 4982              	.LVL540:
 4983 001e 1646     		mov	r6, r2
 4984 0020 0C46     		mov	r4, r1
 4985 0022 9847     		blx	r3
 4986              	.LVL541:
1491:u8g/u8g_font.c ****   
1492:u8g/u8g_font.c ****   while( *s != '\0' )
 4987              		.loc 1 1492 0
 4988 0024 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
1490:u8g/u8g_font.c ****   
 4989              		.loc 1 1490 0
 4990 0026 0644     		add	r6, r6, r0
 4991 0028 F6B2     		uxtb	r6, r6
 4992              	.LVL542:
 4993              		.loc 1 1492 0
 4994 002a 7BB1     		cbz	r3, .L404
 4995 002c DFF82880 		ldr	r8, .L410+4
 4996              	.LVL543:
 4997              	.L403:
1493:u8g/u8g_font.c ****   {
1494:u8g/u8g_font.c ****     d = u8g_draw_aa_glyph(u8g, x, y, *s);
 4998              		.loc 1 1494 0
 4999 0030 2146     		mov	r1, r4
 5000 0032 3246     		mov	r2, r6
 5001 0034 3846     		mov	r0, r7
 5002 0036 C047     		blx	r8
 5003              	.LVL544:
1492:u8g/u8g_font.c ****   {
 5004              		.loc 1 1492 0
 5005 0038 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 5006              	.LVL545:
1495:u8g/u8g_font.c ****     x += d;
 5007              		.loc 1 1495 0
 5008 003c C0B2     		uxtb	r0, r0
 5009 003e 0444     		add	r4, r4, r0
 5010              	.LVL546:
1496:u8g/u8g_font.c ****     t += d;
 5011              		.loc 1 1496 0
 5012 0040 4844     		add	r0, r0, r9
 5013              	.LVL547:
1495:u8g/u8g_font.c ****     x += d;
 5014              		.loc 1 1495 0
 5015 0042 E4B2     		uxtb	r4, r4
 5016              	.LVL548:
 5017              		.loc 1 1496 0
 5018 0044 5FFA80F9 		uxtb	r9, r0
 5019              	.LVL549:
1492:u8g/u8g_font.c ****   {
 5020              		.loc 1 1492 0
 5021 0048 002B     		cmp	r3, #0
 5022 004a F1D1     		bne	.L403
 5023              	.LVL550:
 5024              	.L404:
1497:u8g/u8g_font.c ****     s++;
1498:u8g/u8g_font.c ****   }
1499:u8g/u8g_font.c ****   return t;
1500:u8g/u8g_font.c **** }
 5025              		.loc 1 1500 0
 5026 004c 4846     		mov	r0, r9
 5027 004e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5028              	.LVL551:
 5029              	.L411:
 5030 0052 00BF     		.align	2
 5031              	.L410:
 5032 0054 00000000 		.word	u8g_font_GetFormat.isra.0
 5033 0058 00000000 		.word	u8g_draw_aa_glyph
 5034              		.cfi_endproc
 5035              	.LFE81:
 5037              		.text
 5038              	.Letext0:
 5039              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 5040              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5041              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5042              		.file 5 "u8g/u8g.h"
DEFINED SYMBOLS
                            *ABS*:00000000 u8g_font.c
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:16     .text.u8g_font_get_word:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:23     .text.u8g_font_get_word:00000000 u8g_font_get_word
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:51     .text.u8g_font_calc_vref_font:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:59     .text.u8g_font_calc_vref_font:00000000 u8g_font_calc_vref_font
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:75     .text.u8g_font_calc_vref_bottom:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:83     .text.u8g_font_calc_vref_bottom:00000000 u8g_font_calc_vref_bottom
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:99     .text.u8g_font_calc_vref_top:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:107    .text.u8g_font_calc_vref_top:00000000 u8g_font_calc_vref_top
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:129    .text.u8g_font_calc_vref_center:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:137    .text.u8g_font_calc_vref_center:00000000 u8g_font_calc_vref_center
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:165    .text.u8g_font_get_char:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:173    .text.u8g_font_get_char:00000000 u8g_font_get_char
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:189    .text.u8g_font_GetFormat.isra.0:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:196    .text.u8g_font_GetFormat.isra.0:00000000 u8g_font_GetFormat.isra.0
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:210    .text.u8g_font_GetFontGlyphStructureSize.isra.1:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:217    .text.u8g_font_GetFontGlyphStructureSize.isra.1:00000000 u8g_font_GetFontGlyphStructureSize.isra.1
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:248    .text.u8g_font_GetFontGlyphStructureSize.isra.1:00000014 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:253    .text.u8g_font_get_charP:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:261    .text.u8g_font_get_charP:00000000 u8g_font_get_charP
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:273    .text.u8g_font_GetCapitalAHeight:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:281    .text.u8g_font_GetCapitalAHeight:00000000 u8g_font_GetCapitalAHeight
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:297    .text.u8g_font_GetEncoding65Pos:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:305    .text.u8g_font_GetEncoding65Pos:00000000 u8g_font_GetEncoding65Pos
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:321    .text.u8g_font_GetEncoding65Pos:00000008 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:326    .text.u8g_font_GetEncoding97Pos:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:334    .text.u8g_font_GetEncoding97Pos:00000000 u8g_font_GetEncoding97Pos
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:350    .text.u8g_font_GetEncoding97Pos:00000008 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:355    .text.u8g_font_GetFontStartEncoding:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:363    .text.u8g_font_GetFontStartEncoding:00000000 u8g_font_GetFontStartEncoding
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:379    .text.u8g_font_GetFontEndEncoding:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:387    .text.u8g_font_GetFontEndEncoding:00000000 u8g_font_GetFontEndEncoding
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:403    .text.u8g_font_GetLowerGDescent:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:411    .text.u8g_font_GetLowerGDescent:00000000 u8g_font_GetLowerGDescent
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:427    .text.u8g_font_GetFontAscent:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:435    .text.u8g_font_GetFontAscent:00000000 u8g_font_GetFontAscent
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:451    .text.u8g_font_GetFontDescent:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:459    .text.u8g_font_GetFontDescent:00000000 u8g_font_GetFontDescent
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:475    .text.u8g_font_GetFontXAscent:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:483    .text.u8g_font_GetFontXAscent:00000000 u8g_font_GetFontXAscent
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:499    .text.u8g_font_GetFontXDescent:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:507    .text.u8g_font_GetFontXDescent:00000000 u8g_font_GetFontXDescent
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:523    .text.u8g_font_GetSize:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:531    .text.u8g_font_GetSize:00000000 u8g_font_GetSize
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:632    .text.u8g_font_GetSize:0000005c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:640    .text.u8g_GetFontBBXWidth:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:648    .text.u8g_GetFontBBXWidth:00000000 u8g_GetFontBBXWidth
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:672    .text.u8g_GetFontBBXHeight:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:680    .text.u8g_GetFontBBXHeight:00000000 u8g_GetFontBBXHeight
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:704    .text.u8g_GetFontBBXOffX:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:712    .text.u8g_GetFontBBXOffX:00000000 u8g_GetFontBBXOffX
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:738    .text.u8g_GetFontBBXOffY:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:746    .text.u8g_GetFontBBXOffY:00000000 u8g_GetFontBBXOffY
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:772    .text.u8g_GetFontCapitalAHeight:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:780    .text.u8g_GetFontCapitalAHeight:00000000 u8g_GetFontCapitalAHeight
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:804    .text.u8g_GetGlyph:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:812    .text.u8g_GetGlyph:00000000 u8g_GetGlyph
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1070   .text.u8g_GetGlyph:000000fc $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1080   .text.u8g_font_calc_str_min_box.part.2:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1087   .text.u8g_font_calc_str_min_box.part.2:00000000 u8g_font_calc_str_min_box.part.2
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1192   .text.u8g_font_calc_str_min_box.part.2:00000074 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1197   .text.u8g_IsGlyph:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1205   .text.u8g_IsGlyph:00000000 u8g_IsGlyph
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1229   .text.u8g_IsGlyph:00000010 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1234   .text.u8g_GetGlyphDeltaX:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1242   .text.u8g_GetGlyphDeltaX:00000000 u8g_GetGlyphDeltaX
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1271   .text.u8g_GetGlyphDeltaX:00000010 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1276   .text.u8g_draw_glyph:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1284   .text.u8g_draw_glyph:00000000 u8g_draw_glyph
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1477   .text.u8g_draw_glyph:000000bc $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1485   .text.u8g_DrawGlyph:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1493   .text.u8g_DrawGlyph:00000000 u8g_DrawGlyph
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1545   .text.u8g_DrawGlyph:00000024 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1550   .text.u8g_draw_glyph90:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1558   .text.u8g_draw_glyph90:00000000 u8g_draw_glyph90
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1762   .text.u8g_draw_glyph90:000000c4 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1770   .text.u8g_DrawGlyph90:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1778   .text.u8g_DrawGlyph90:00000000 u8g_DrawGlyph90
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1830   .text.u8g_DrawGlyph90:00000024 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1835   .text.u8g_draw_glyph180:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:1843   .text.u8g_draw_glyph180:00000000 u8g_draw_glyph180
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2048   .text.u8g_draw_glyph180:000000d0 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2056   .text.u8g_DrawGlyph180:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2064   .text.u8g_DrawGlyph180:00000000 u8g_DrawGlyph180
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2116   .text.u8g_DrawGlyph180:00000024 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2121   .text.u8g_draw_glyph270:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2129   .text.u8g_draw_glyph270:00000000 u8g_draw_glyph270
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2327   .text.u8g_draw_glyph270:000000c4 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2335   .text.u8g_DrawGlyph270:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2343   .text.u8g_DrawGlyph270:00000000 u8g_DrawGlyph270
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2395   .text.u8g_DrawGlyph270:00000024 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2400   .text.u8g_DrawStr:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2408   .text.u8g_DrawStr:00000000 u8g_DrawStr
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2490   .text.u8g_DrawStr:0000004c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2495   .text.u8g_DrawStr90:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2503   .text.u8g_DrawStr90:00000000 u8g_DrawStr90
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2585   .text.u8g_DrawStr90:0000004c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2590   .text.u8g_DrawStr180:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2598   .text.u8g_DrawStr180:00000000 u8g_DrawStr180
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2680   .text.u8g_DrawStr180:0000004c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2685   .text.u8g_DrawStr270:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2693   .text.u8g_DrawStr270:00000000 u8g_DrawStr270
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2775   .text.u8g_DrawStr270:0000004c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2780   .text.u8g_DrawStrDir:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2788   .text.u8g_DrawStrDir:00000000 u8g_DrawStrDir
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2807   .text.u8g_DrawStrDir:0000000c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2811   .text.u8g_DrawStrDir:00000010 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2891   .text.u8g_DrawStrDir:00000040 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2899   .text.u8g_DrawStrP:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2907   .text.u8g_DrawStrP:00000000 u8g_DrawStrP
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2989   .text.u8g_DrawStrP:0000004c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:2994   .text.u8g_DrawStr90P:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3002   .text.u8g_DrawStr90P:00000000 u8g_DrawStr90P
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3095   .text.u8g_DrawStr90P:0000005c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3100   .text.u8g_DrawStr180P:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3108   .text.u8g_DrawStr180P:00000000 u8g_DrawStr180P
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3201   .text.u8g_DrawStr180P:0000005c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3206   .text.u8g_DrawStr270P:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3214   .text.u8g_DrawStr270P:00000000 u8g_DrawStr270P
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3307   .text.u8g_DrawStr270P:00000058 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3312   .text.u8g_DrawStrFontBBX:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3320   .text.u8g_DrawStrFontBBX:00000000 u8g_DrawStrFontBBX
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3380   .text.u8g_DrawStrFontBBX:00000028 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3387   .text.u8g_DrawGlyphFontBBX:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3395   .text.u8g_DrawGlyphFontBBX:00000000 u8g_DrawGlyphFontBBX
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3447   .text.u8g_DrawGlyphFontBBX:00000024 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3454   .text.u8g_UpdateRefHeight:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3462   .text.u8g_UpdateRefHeight:00000000 u8g_UpdateRefHeight
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3568   .text.u8g_SetFontRefHeightText:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3576   .text.u8g_SetFontRefHeightText:00000000 u8g_SetFontRefHeightText
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3596   .text.u8g_SetFontRefHeightText:0000000c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3601   .text.u8g_SetFontRefHeightExtendedText:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3609   .text.u8g_SetFontRefHeightExtendedText:00000000 u8g_SetFontRefHeightExtendedText
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3629   .text.u8g_SetFontRefHeightExtendedText:0000000c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3634   .text.u8g_SetFontRefHeightAll:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3642   .text.u8g_SetFontRefHeightAll:00000000 u8g_SetFontRefHeightAll
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3662   .text.u8g_SetFontRefHeightAll:0000000c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3667   .text.u8g_SetFontLineSpacingFactor:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3675   .text.u8g_SetFontLineSpacingFactor:00000000 u8g_SetFontLineSpacingFactor
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3692   .text.u8g_SetFontLineSpacingFactor:00000008 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3697   .text.u8g_SetFontPosBaseline:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3705   .text.u8g_SetFontPosBaseline:00000000 u8g_SetFontPosBaseline
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3721   .text.u8g_SetFontPosBaseline:00000008 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3726   .text.u8g_SetFontPosBottom:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3734   .text.u8g_SetFontPosBottom:00000000 u8g_SetFontPosBottom
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3750   .text.u8g_SetFontPosBottom:00000008 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3755   .text.u8g_SetFontPosTop:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3763   .text.u8g_SetFontPosTop:00000000 u8g_SetFontPosTop
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3779   .text.u8g_SetFontPosTop:00000008 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3784   .text.u8g_SetFontPosCenter:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3792   .text.u8g_SetFontPosCenter:00000000 u8g_SetFontPosCenter
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3808   .text.u8g_SetFontPosCenter:00000008 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3813   .text.u8g_font_calc_str_pixel_width:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3821   .text.u8g_font_calc_str_pixel_width:00000000 u8g_font_calc_str_pixel_width
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3923   .text.u8g_font_calc_str_pixel_width:00000064 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3928   .text.u8g_GetStrPixelWidth:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3936   .text.u8g_GetStrPixelWidth:00000000 u8g_GetStrPixelWidth
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3952   .text.u8g_GetStrPixelWidth:00000008 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3958   .text.u8g_GetStrPixelWidthP:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3966   .text.u8g_GetStrPixelWidthP:00000000 u8g_GetStrPixelWidthP
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3982   .text.u8g_GetStrPixelWidthP:00000008 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3988   .text.u8g_GetStrX:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:3996   .text.u8g_GetStrX:00000000 u8g_GetStrX
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4023   .text.u8g_GetStrX:00000010 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4028   .text.u8g_GetStrXP:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4036   .text.u8g_GetStrXP:00000000 u8g_GetStrXP
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4063   .text.u8g_GetStrXP:00000010 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4068   .text.u8g_GetStrWidth:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4076   .text.u8g_GetStrWidth:00000000 u8g_GetStrWidth
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4137   .text.u8g_GetStrWidth:0000002c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4142   .text.u8g_GetStrWidthP:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4150   .text.u8g_GetStrWidthP:00000000 u8g_GetStrWidthP
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4211   .text.u8g_GetStrWidthP:0000002c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4216   .text.u8g_font_box_min:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4224   .text.u8g_font_box_min:00000000 u8g_font_box_min
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4280   .text.u8g_font_box_min:0000001c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4287   .text.u8g_font_box_left_gA:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4295   .text.u8g_font_box_left_gA:00000000 u8g_font_box_left_gA
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4309   .text.u8g_font_box_all_gA:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4317   .text.u8g_font_box_all_gA:00000000 u8g_font_box_all_gA
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4328   .text.u8g_GetStrMinBox:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4336   .text.u8g_GetStrMinBox:00000000 u8g_GetStrMinBox
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4441   .text.u8g_GetStrMinBox:0000005c $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4447   .text.u8g_GetStrAMinBox:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4455   .text.u8g_GetStrAMinBox:00000000 u8g_GetStrAMinBox
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4601   .text.u8g_GetStrAMinBox:00000074 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4607   .text.u8g_SetFont:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4615   .text.u8g_SetFont:00000000 u8g_SetFont
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4658   .text.u8g_SetFont:00000018 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4664   .text.u8g_draw_aa_glyph:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4672   .text.u8g_draw_aa_glyph:00000000 u8g_draw_aa_glyph
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4865   .text.u8g_draw_aa_glyph:000000bc $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4873   .text.u8g_DrawAAGlyph:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4881   .text.u8g_DrawAAGlyph:00000000 u8g_DrawAAGlyph
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4933   .text.u8g_DrawAAGlyph:00000024 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4938   .text.u8g_DrawAAStr:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:4946   .text.u8g_DrawAAStr:00000000 u8g_DrawAAStr
C:\Users\BOBAFW~1\AppData\Local\Temp\ccSzCjJf.s:5032   .text.u8g_DrawAAStr:00000054 $d

UNDEFINED SYMBOLS
u8g_Draw8Pixel
u8g_IsBBXIntersection
u8g_Draw4TPixel
