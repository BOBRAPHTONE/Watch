   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"utils.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.strlen,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	strlen
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	strlen:
  25              	.LFB0:
  26              		.file 1 "utils.c"
   1:utils.c       **** #include "utils.h"
   2:utils.c       **** #include <ctype.h>
   3:utils.c       **** 
   4:utils.c       **** char debug[15];
   5:utils.c       **** 
   6:utils.c       **** int strlen(char* string){
  27              		.loc 1 6 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 10B4     		push	{r4}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 4, -4
   7:utils.c       ****   unsigned char len = 0;
   8:utils.c       ****   while(*(string++)!=0){
  37              		.loc 1 8 0
  38 0002 0346     		mov	r3, r0
  39 0004 00F1FB04 		add	r4, r0, #251
  40 0008 01E0     		b	.L2
  41              	.LVL1:
  42              	.L4:
   9:utils.c       ****     len++;
  10:utils.c       ****     if(len>250)
  43              		.loc 1 10 0
  44 000a A342     		cmp	r3, r4
  45 000c 08D0     		beq	.L5
  46              	.LVL2:
  47              	.L2:
  48 000e 1A1A     		subs	r2, r3, r0
   8:utils.c       ****     len++;
  49              		.loc 1 8 0
  50 0010 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
  51 0014 D2B2     		uxtb	r2, r2
  52              	.LVL3:
  53 0016 0029     		cmp	r1, #0
  54 0018 F7D1     		bne	.L4
  55 001a 1046     		mov	r0, r2
  11:utils.c       ****       break;
  12:utils.c       ****   }
  13:utils.c       ****   return len;
  14:utils.c       **** }
  56              		.loc 1 14 0
  57 001c 10BC     		pop	{r4}
  58              	.LCFI1:
  59              		.cfi_remember_state
  60              		.cfi_restore 4
  61              		.cfi_def_cfa_offset 0
  62 001e 7047     		bx	lr
  63              	.L5:
  64              	.LCFI2:
  65              		.cfi_restore_state
  66 0020 FB20     		movs	r0, #251
  67              	.LVL4:
  68 0022 10BC     		pop	{r4}
  69              	.LCFI3:
  70              		.cfi_restore 4
  71              		.cfi_def_cfa_offset 0
  72 0024 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE0:
  76 0026 00BF     		.section	.text.strncpy,"ax",%progbits
  77              		.align	1
  78              		.p2align 2,,3
  79              		.global	strncpy
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	strncpy:
  86              	.LFB1:
  15:utils.c       **** 
  16:utils.c       **** 
  17:utils.c       **** char* strncpy(char* dest, char* src, int num){
  87              		.loc 1 17 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL5:
  18:utils.c       ****   int i;
  19:utils.c       ****   for(i=0;i<num;i++){
  93              		.loc 1 19 0
  94 0000 002A     		cmp	r2, #0
  17:utils.c       ****   int i;
  95              		.loc 1 17 0
  96 0002 30B4     		push	{r4, r5}
  97              	.LCFI4:
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 4, -8
 100              		.cfi_offset 5, -4
  17:utils.c       ****   int i;
 101              		.loc 1 17 0
 102 0004 0546     		mov	r5, r0
 103              	.LVL6:
 104              		.loc 1 19 0
 105 0006 08DD     		ble	.L10
 106 0008 0139     		subs	r1, r1, #1
 107              	.LVL7:
 108 000a 8C18     		adds	r4, r1, r2
 109 000c 431E     		subs	r3, r0, #1
 110              	.LVL8:
 111              	.L11:
  20:utils.c       ****     dest[i] = src[i];
 112              		.loc 1 20 0 discriminator 3
 113 000e 11F8010F 		ldrb	r0, [r1, #1]!	@ zero_extendqisi2
 114              	.LVL9:
  19:utils.c       ****     dest[i] = src[i];
 115              		.loc 1 19 0 discriminator 3
 116 0012 A142     		cmp	r1, r4
 117              		.loc 1 20 0 discriminator 3
 118 0014 03F8010F 		strb	r0, [r3, #1]!
 119              	.LVL10:
  19:utils.c       ****     dest[i] = src[i];
 120              		.loc 1 19 0 discriminator 3
 121 0018 F9D1     		bne	.L11
 122              	.LVL11:
 123              	.L10:
  21:utils.c       ****   }
  22:utils.c       ****   dest[num] = 0;
 124              		.loc 1 22 0
 125 001a 0023     		movs	r3, #0
 126 001c AB54     		strb	r3, [r5, r2]
  23:utils.c       ****   return dest;
  24:utils.c       **** }
 127              		.loc 1 24 0
 128 001e 2846     		mov	r0, r5
 129 0020 30BC     		pop	{r4, r5}
 130              	.LCFI5:
 131              		.cfi_restore 5
 132              		.cfi_restore 4
 133              		.cfi_def_cfa_offset 0
 134              	.LVL12:
 135 0022 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE1:
 139              		.section	.text.strchrn,"ax",%progbits
 140              		.align	1
 141              		.p2align 2,,3
 142              		.global	strchrn
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	strchrn:
 149              	.LFB2:
  25:utils.c       **** 
  26:utils.c       **** // Find position of char chr in string str before n characters if fails return n
  27:utils.c       **** int strchrn(char* str,char chr, int n)
  28:utils.c       **** {
 150              		.loc 1 28 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155              	.LVL13:
 156 0000 F0B4     		push	{r4, r5, r6, r7}
 157              	.LCFI6:
 158              		.cfi_def_cfa_offset 16
 159              		.cfi_offset 4, -16
 160              		.cfi_offset 5, -12
 161              		.cfi_offset 6, -8
 162              		.cfi_offset 7, -4
 163              		.loc 1 28 0
 164 0002 0346     		mov	r3, r0
 165 0004 00F1FB07 		add	r7, r0, #251
 166 0008 C6B2     		uxtb	r6, r0
 167 000a 01E0     		b	.L15
 168              	.LVL14:
 169              	.L17:
 170              	.LBB8:
 171              	.LBB9:
  10:utils.c       ****       break;
 172              		.loc 1 10 0
 173 000c BB42     		cmp	r3, r7
 174 000e 2CD0     		beq	.L27
 175              	.LVL15:
 176              	.L15:
 177 0010 9C1B     		subs	r4, r3, r6
   8:utils.c       ****     len++;
 178              		.loc 1 8 0
 179 0012 13F8015B 		ldrb	r5, [r3], #1	@ zero_extendqisi2
 180 0016 E4B2     		uxtb	r4, r4
 181              	.LVL16:
 182 0018 002D     		cmp	r5, #0
 183 001a F7D1     		bne	.L17
 184              	.LVL17:
 185              	.L16:
 186              	.LBE9:
 187              	.LBE8:
  29:utils.c       ****   char* ptr = str;
  30:utils.c       ****   if(strlen(str)<n)
 188              		.loc 1 30 0
 189 001c A242     		cmp	r2, r4
 190 001e 14DC     		bgt	.L28
 191 0020 1446     		mov	r4, r2
 192              	.LVL18:
 193              	.L19:
  31:utils.c       ****     n=strlen(str);
  32:utils.c       **** 
  33:utils.c       ****   for(ptr=str; ptr<str+n ;ptr++){
 194              		.loc 1 33 0
 195 0022 0444     		add	r4, r4, r0
 196 0024 A042     		cmp	r0, r4
 197 0026 0DD2     		bcs	.L14
  34:utils.c       ****     if(*ptr==chr)
 198              		.loc 1 34 0
 199 0028 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 200 002a 8B42     		cmp	r3, r1
 201 002c 18BF     		it	ne
 202 002e 431C     		addne	r3, r0, #1
 203 0030 04D1     		bne	.L25
 204 0032 1CE0     		b	.L36
 205              	.LVL19:
 206              	.L26:
 207 0034 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 208 0036 8E42     		cmp	r6, r1
 209 0038 13D0     		beq	.L37
 210 003a 2B46     		mov	r3, r5
 211              	.LVL20:
 212              	.L25:
  33:utils.c       ****     if(*ptr==chr)
 213              		.loc 1 33 0 discriminator 2
 214 003c A342     		cmp	r3, r4
 215 003e 03F10105 		add	r5, r3, #1
 216 0042 F7D1     		bne	.L26
 217              	.LVL21:
 218              	.L14:
  35:utils.c       ****       return (int)(ptr-str);
  36:utils.c       ****   }
  37:utils.c       ****   return n;
  38:utils.c       ****   
  39:utils.c       **** }
 219              		.loc 1 39 0
 220 0044 1046     		mov	r0, r2
 221              	.LVL22:
 222 0046 F0BC     		pop	{r4, r5, r6, r7}
 223              	.LCFI7:
 224              		.cfi_remember_state
 225              		.cfi_restore 7
 226              		.cfi_restore 6
 227              		.cfi_restore 5
 228              		.cfi_restore 4
 229              		.cfi_def_cfa_offset 0
 230              	.LVL23:
 231 0048 7047     		bx	lr
 232              	.LVL24:
 233              	.L28:
 234              	.LCFI8:
 235              		.cfi_restore_state
 236 004a 0346     		mov	r3, r0
 237 004c 01E0     		b	.L18
 238              	.LVL25:
 239              	.L21:
 240              	.LBB11:
 241              	.LBB12:
  10:utils.c       ****       break;
 242              		.loc 1 10 0
 243 004e BB42     		cmp	r3, r7
 244 0050 0FD0     		beq	.L38
 245              	.LVL26:
 246              	.L18:
 247 0052 9A1B     		subs	r2, r3, r6
   8:utils.c       ****     len++;
 248              		.loc 1 8 0
 249 0054 13F8014B 		ldrb	r4, [r3], #1	@ zero_extendqisi2
 250 0058 D2B2     		uxtb	r2, r2
 251              	.LVL27:
 252 005a 002C     		cmp	r4, #0
 253 005c F7D1     		bne	.L21
 254 005e 1446     		mov	r4, r2
 255 0060 DFE7     		b	.L19
 256              	.LVL28:
 257              	.L37:
 258 0062 1A1A     		subs	r2, r3, r0
 259              	.LVL29:
 260              	.LBE12:
 261              	.LBE11:
 262              		.loc 1 39 0
 263 0064 1046     		mov	r0, r2
 264              	.LVL30:
 265 0066 F0BC     		pop	{r4, r5, r6, r7}
 266              	.LCFI9:
 267              		.cfi_remember_state
 268              		.cfi_restore 7
 269              		.cfi_restore 6
 270              		.cfi_restore 5
 271              		.cfi_restore 4
 272              		.cfi_def_cfa_offset 0
 273              	.LVL31:
 274 0068 7047     		bx	lr
 275              	.LVL32:
 276              	.L27:
 277              	.LCFI10:
 278              		.cfi_restore_state
 279              	.LBB14:
 280              	.LBB10:
  10:utils.c       ****       break;
 281              		.loc 1 10 0
 282 006a FB24     		movs	r4, #251
 283              	.LVL33:
 284 006c D6E7     		b	.L16
 285              	.LVL34:
 286              	.L36:
 287              	.LBE10:
 288              	.LBE14:
  34:utils.c       ****       return (int)(ptr-str);
 289              		.loc 1 34 0
 290 006e 0022     		movs	r2, #0
 291              	.LVL35:
  35:utils.c       ****   }
 292              		.loc 1 35 0
 293 0070 E8E7     		b	.L14
 294              	.LVL36:
 295              	.L38:
 296              	.LBB15:
 297              	.LBB13:
  10:utils.c       ****       break;
 298              		.loc 1 10 0
 299 0072 FB24     		movs	r4, #251
 300 0074 2246     		mov	r2, r4
 301              	.LVL37:
 302 0076 D4E7     		b	.L19
 303              	.LBE13:
 304              	.LBE15:
 305              		.cfi_endproc
 306              	.LFE2:
 308              		.section	.text.intToStr2,"ax",%progbits
 309              		.align	1
 310              		.p2align 2,,3
 311              		.global	intToStr2
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	intToStr2:
 318              	.LFB3:
  40:utils.c       **** 
  41:utils.c       **** void intToStr2(int nb, char* str){
 319              		.loc 1 41 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 324              	.LVL38:
 325 0000 10B4     		push	{r4}
 326              	.LCFI11:
 327              		.cfi_def_cfa_offset 4
 328              		.cfi_offset 4, -4
  42:utils.c       ****   str[0] = '0'+nb/10;
  43:utils.c       ****   str[1] = '0'+nb%10;
  44:utils.c       ****   str[2] = 0;
 329              		.loc 1 44 0
 330 0002 0024     		movs	r4, #0
  42:utils.c       ****   str[0] = '0'+nb/10;
 331              		.loc 1 42 0
 332 0004 084A     		ldr	r2, .L41
 333 0006 C317     		asrs	r3, r0, #31
 334 0008 82FB00C2 		smull	ip, r2, r2, r0
 335 000c C3EBA203 		rsb	r3, r3, r2, asr #2
  43:utils.c       ****   str[2] = 0;
 336              		.loc 1 43 0
 337 0010 03EB8302 		add	r2, r3, r3, lsl #2
 338 0014 A0EB4200 		sub	r0, r0, r2, lsl #1
 339              	.LVL39:
  42:utils.c       ****   str[0] = '0'+nb/10;
 340              		.loc 1 42 0
 341 0018 3033     		adds	r3, r3, #48
  43:utils.c       ****   str[2] = 0;
 342              		.loc 1 43 0
 343 001a 3030     		adds	r0, r0, #48
 344              		.loc 1 44 0
 345 001c 8C70     		strb	r4, [r1, #2]
  42:utils.c       ****   str[0] = '0'+nb/10;
 346              		.loc 1 42 0
 347 001e 0B70     		strb	r3, [r1]
  43:utils.c       ****   str[2] = 0;
 348              		.loc 1 43 0
 349 0020 4870     		strb	r0, [r1, #1]
  45:utils.c       **** }
 350              		.loc 1 45 0
 351 0022 10BC     		pop	{r4}
 352              	.LCFI12:
 353              		.cfi_restore 4
 354              		.cfi_def_cfa_offset 0
 355 0024 7047     		bx	lr
 356              	.L42:
 357 0026 00BF     		.align	2
 358              	.L41:
 359 0028 67666666 		.word	1717986919
 360              		.cfi_endproc
 361              	.LFE3:
 363              		.section	.text.intToStr,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.global	intToStr
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu softvfp
 372              	intToStr:
 373              	.LFB4:
  46:utils.c       **** 
  47:utils.c       **** 
  48:utils.c       **** void intToStr(int nb, char* str)
  49:utils.c       **** {
 374              		.loc 1 49 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379              	.LVL40:
  50:utils.c       **** 	int i=0;
  51:utils.c       **** 	int cont=1;
  52:utils.c       **** 	int neg=0;
  53:utils.c       **** 	if(nb<0)
 380              		.loc 1 53 0
 381 0000 0028     		cmp	r0, #0
  49:utils.c       **** 	int i=0;
 382              		.loc 1 49 0
 383 0002 F0B4     		push	{r4, r5, r6, r7}
 384              	.LCFI13:
 385              		.cfi_def_cfa_offset 16
 386              		.cfi_offset 4, -16
 387              		.cfi_offset 5, -12
 388              		.cfi_offset 6, -8
 389              		.cfi_offset 7, -4
 390              		.loc 1 53 0
 391 0004 2CDB     		blt	.L56
  52:utils.c       **** 	if(nb<0)
 392              		.loc 1 52 0
 393 0006 0027     		movs	r7, #0
 394              	.LVL41:
 395              	.L44:
  54:utils.c       **** 	{
  55:utils.c       **** 		neg=1;
  56:utils.c       **** 		nb=-nb;
  57:utils.c       **** 	}
  58:utils.c       **** 	while(cont)
  59:utils.c       **** 	{
  60:utils.c       **** 		str[i++] = '0'+nb%10;
 396              		.loc 1 60 0
 397 0008 0025     		movs	r5, #0
 398 000a 174E     		ldr	r6, .L57
 399 000c 4C1E     		subs	r4, r1, #1
 400              	.LVL42:
 401              	.L46:
 402 000e 86FB0032 		smull	r3, r2, r6, r0
 403 0012 C317     		asrs	r3, r0, #31
 404 0014 C3EBA203 		rsb	r3, r3, r2, asr #2
 405 0018 03EB8302 		add	r2, r3, r3, lsl #2
 406 001c A0EB4200 		sub	r0, r0, r2, lsl #1
 407              	.LVL43:
 408 0020 3030     		adds	r0, r0, #48
 409 0022 04F8010F 		strb	r0, [r4, #1]!
 410 0026 6A1C     		adds	r2, r5, #1
 411              	.LVL44:
  61:utils.c       **** 		nb = nb/10;
  62:utils.c       **** 		if(nb==0) cont=0;
 412              		.loc 1 62 0
 413 0028 1846     		mov	r0, r3
 414 002a 0BB1     		cbz	r3, .L45
  60:utils.c       **** 		nb = nb/10;
 415              		.loc 1 60 0
 416 002c 1546     		mov	r5, r2
 417 002e EEE7     		b	.L46
 418              	.L45:
 419 0030 8C18     		adds	r4, r1, r2
 420              	.LVL45:
  63:utils.c       **** 	}
  64:utils.c       **** 	if(neg)
 421              		.loc 1 64 0
 422 0032 1FB1     		cbz	r7, .L47
  65:utils.c       **** 		str[i++]='-';
 423              		.loc 1 65 0
 424 0034 2D23     		movs	r3, #45
 425 0036 AA1C     		adds	r2, r5, #2
 426              	.LVL46:
 427 0038 2370     		strb	r3, [r4]
 428 003a 8C18     		adds	r4, r1, r2
 429              	.L47:
  66:utils.c       **** 	str[i] = 0;
 430              		.loc 1 66 0
 431 003c 0023     		movs	r3, #0
  67:utils.c       **** 	unsigned char temp;
  68:utils.c       **** 	unsigned char k;
  69:utils.c       **** 	for(k=0;k<i/2;k++)
 432              		.loc 1 69 0
 433 003e 5710     		asrs	r7, r2, #1
 434              	.LVL47:
 435 0040 9F42     		cmp	r7, r3
  66:utils.c       **** 	str[i] = 0;
 436              		.loc 1 66 0
 437 0042 2370     		strb	r3, [r4]
 438              	.LVL48:
 439              		.loc 1 69 0
 440 0044 0ADD     		ble	.L43
 441              	.LVL49:
 442              	.L49:
  70:utils.c       **** 	{
  71:utils.c       **** 		temp = str[k];
  72:utils.c       **** 		str[k] = str[i-k-1];
 443              		.loc 1 72 0 discriminator 3
 444 0046 101A     		subs	r0, r2, r0
 445 0048 0138     		subs	r0, r0, #1
 446 004a 0E5C     		ldrb	r6, [r1, r0]	@ zero_extendqisi2
  69:utils.c       **** 	{
 447              		.loc 1 69 0 discriminator 3
 448 004c 5D1C     		adds	r5, r3, #1
  71:utils.c       **** 		str[k] = str[i-k-1];
 449              		.loc 1 71 0 discriminator 3
 450 004e CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 451              	.LVL50:
 452              		.loc 1 72 0 discriminator 3
 453 0050 CE54     		strb	r6, [r1, r3]
  69:utils.c       **** 	{
 454              		.loc 1 69 0 discriminator 3
 455 0052 EBB2     		uxtb	r3, r5
 456              	.LVL51:
 457 0054 BB42     		cmp	r3, r7
  73:utils.c       **** 		str[i-k-1]=temp;
 458              		.loc 1 73 0 discriminator 3
 459 0056 0C54     		strb	r4, [r1, r0]
  69:utils.c       **** 	{
 460              		.loc 1 69 0 discriminator 3
 461 0058 1846     		mov	r0, r3
 462 005a F4DB     		blt	.L49
 463              	.LVL52:
 464              	.L43:
  74:utils.c       **** 	}
  75:utils.c       **** }
 465              		.loc 1 75 0
 466 005c F0BC     		pop	{r4, r5, r6, r7}
 467              	.LCFI14:
 468              		.cfi_remember_state
 469              		.cfi_restore 7
 470              		.cfi_restore 6
 471              		.cfi_restore 5
 472              		.cfi_restore 4
 473              		.cfi_def_cfa_offset 0
 474 005e 7047     		bx	lr
 475              	.LVL53:
 476              	.L56:
 477              	.LCFI15:
 478              		.cfi_restore_state
  56:utils.c       **** 	}
 479              		.loc 1 56 0
 480 0060 4042     		negs	r0, r0
 481              	.LVL54:
  55:utils.c       **** 		nb=-nb;
 482              		.loc 1 55 0
 483 0062 0127     		movs	r7, #1
 484 0064 D0E7     		b	.L44
 485              	.L58:
 486 0066 00BF     		.align	2
 487              	.L57:
 488 0068 67666666 		.word	1717986919
 489              		.cfi_endproc
 490              	.LFE4:
 492              		.global	__aeabi_dmul
 493              		.global	__aeabi_d2iz
 494              		.section	.text.doubleToStr,"ax",%progbits
 495              		.align	1
 496              		.p2align 2,,3
 497              		.global	doubleToStr
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu softvfp
 503              	doubleToStr:
 504              	.LFB5:
  76:utils.c       **** 
  77:utils.c       **** void doubleToStr(double nb, char* str)
  78:utils.c       **** {
 505              		.loc 1 78 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              	.LVL55:
 510 0000 38B5     		push	{r3, r4, r5, lr}
 511              	.LCFI16:
 512              		.cfi_def_cfa_offset 16
 513              		.cfi_offset 3, -16
 514              		.cfi_offset 4, -12
 515              		.cfi_offset 5, -8
 516              		.cfi_offset 14, -4
 517              		.loc 1 78 0
 518 0002 1446     		mov	r4, r2
  79:utils.c       **** 	nb = (int)(nb*1000);
 519              		.loc 1 79 0
 520 0004 144B     		ldr	r3, .L68
 521 0006 0022     		movs	r2, #0
 522              	.LVL56:
 523 0008 144D     		ldr	r5, .L68+4
 524 000a A847     		blx	r5
 525              	.LVL57:
 526 000c 144B     		ldr	r3, .L68+8
 527 000e 9847     		blx	r3
 528              	.LVL58:
  80:utils.c       **** 	intToStr(nb,str);
 529              		.loc 1 80 0
 530 0010 2146     		mov	r1, r4
 531 0012 144B     		ldr	r3, .L68+12
 532 0014 9847     		blx	r3
 533              	.LVL59:
 534 0016 04F1FB00 		add	r0, r4, #251
 535 001a 2246     		mov	r2, r4
 536 001c 01E0     		b	.L60
 537              	.LVL60:
 538              	.L62:
 539              	.LBB16:
 540              	.LBB17:
  10:utils.c       ****       break;
 541              		.loc 1 10 0
 542 001e 8242     		cmp	r2, r0
 543 0020 15D0     		beq	.L64
 544              	.LVL61:
 545              	.L60:
 546 0022 131B     		subs	r3, r2, r4
   8:utils.c       ****     len++;
 547              		.loc 1 8 0
 548 0024 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 549 0028 DBB2     		uxtb	r3, r3
 550              	.LVL62:
 551 002a 0029     		cmp	r1, #0
 552 002c F7D1     		bne	.L62
 553 002e 5D1C     		adds	r5, r3, #1
 554 0030 D81E     		subs	r0, r3, #3
 555              	.LVL63:
 556              	.L61:
 557 0032 211F     		subs	r1, r4, #4
 558 0034 1944     		add	r1, r1, r3
 559 0036 2344     		add	r3, r3, r4
 560              	.LVL64:
 561              	.L63:
 562              	.LBE17:
 563              	.LBE16:
  81:utils.c       **** 	int i=strlen(str);
  82:utils.c       **** 	int j;
  83:utils.c       **** 	for(j=0;j<4;j++)
  84:utils.c       **** 		str[i-j] = str[i-j-1];
 564              		.loc 1 84 0 discriminator 3
 565 0038 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
 566 003c 03F80129 		strb	r2, [r3], #-1
  83:utils.c       **** 		str[i-j] = str[i-j-1];
 567              		.loc 1 83 0 discriminator 3
 568 0040 8B42     		cmp	r3, r1
 569 0042 F9D1     		bne	.L63
  85:utils.c       **** 	str[i+1] = '\0';
 570              		.loc 1 85 0
 571 0044 0022     		movs	r2, #0
  86:utils.c       **** 	str[i-3]='.';
 572              		.loc 1 86 0
 573 0046 2E23     		movs	r3, #46
  85:utils.c       **** 	str[i+1] = '\0';
 574              		.loc 1 85 0
 575 0048 6255     		strb	r2, [r4, r5]
 576              		.loc 1 86 0
 577 004a 2354     		strb	r3, [r4, r0]
  87:utils.c       **** }
 578              		.loc 1 87 0
 579 004c 38BD     		pop	{r3, r4, r5, pc}
 580              	.LVL65:
 581              	.L64:
 582              	.LBB19:
 583              	.LBB18:
  10:utils.c       ****       break;
 584              		.loc 1 10 0
 585 004e FB23     		movs	r3, #251
 586              	.LVL66:
 587 0050 F820     		movs	r0, #248
 588 0052 FC25     		movs	r5, #252
 589 0054 EDE7     		b	.L61
 590              	.L69:
 591 0056 00BF     		.align	2
 592              	.L68:
 593 0058 00408F40 		.word	1083129856
 594 005c 00000000 		.word	__aeabi_dmul
 595 0060 00000000 		.word	__aeabi_d2iz
 596 0064 00000000 		.word	intToStr
 597              	.LBE18:
 598              	.LBE19:
 599              		.cfi_endproc
 600              	.LFE5:
 602              		.section	.text.delai,"ax",%progbits
 603              		.align	1
 604              		.p2align 2,,3
 605              		.global	delai
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 609              		.fpu softvfp
 611              	delai:
 612              	.LFB6:
  88:utils.c       **** 
  89:utils.c       **** void delai(int i)
  90:utils.c       **** {
 613              		.loc 1 90 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 8
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618              	.LVL67:
  91:utils.c       **** 	volatile int l;
  92:utils.c       **** 	for(l=0;l<i;l++)
 619              		.loc 1 92 0
 620 0000 0023     		movs	r3, #0
  90:utils.c       **** 	volatile int l;
 621              		.loc 1 90 0
 622 0002 82B0     		sub	sp, sp, #8
 623              	.LCFI17:
 624              		.cfi_def_cfa_offset 8
 625              		.loc 1 92 0
 626 0004 0193     		str	r3, [sp, #4]
 627 0006 019B     		ldr	r3, [sp, #4]
 628 0008 9842     		cmp	r0, r3
 629 000a 05DD     		ble	.L70
 630              	.L72:
 631              		.loc 1 92 0 is_stmt 0 discriminator 3
 632 000c 019B     		ldr	r3, [sp, #4]
 633 000e 0133     		adds	r3, r3, #1
 634 0010 0193     		str	r3, [sp, #4]
 635 0012 019B     		ldr	r3, [sp, #4]
 636 0014 8342     		cmp	r3, r0
 637 0016 F9DB     		blt	.L72
 638              	.L70:
  93:utils.c       **** 	{}
  94:utils.c       **** }
 639              		.loc 1 94 0 is_stmt 1
 640 0018 02B0     		add	sp, sp, #8
 641              	.LCFI18:
 642              		.cfi_def_cfa_offset 0
 643              		@ sp needed
 644 001a 7047     		bx	lr
 645              		.cfi_endproc
 646              	.LFE6:
 648              		.section	.text.atoi,"ax",%progbits
 649              		.align	1
 650              		.p2align 2,,3
 651              		.global	atoi
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu softvfp
 657              	atoi:
 658              	.LFB7:
  95:utils.c       **** 
  96:utils.c       **** int atoi(char* s)
  97:utils.c       **** {
 659              		.loc 1 97 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              	.LVL68:
 664 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 665              	.LCFI19:
 666              		.cfi_def_cfa_offset 24
 667              		.cfi_offset 3, -24
 668              		.cfi_offset 4, -20
 669              		.cfi_offset 5, -16
 670              		.cfi_offset 6, -12
 671              		.cfi_offset 7, -8
 672              		.cfi_offset 14, -4
  98:utils.c       ****  int a=0;
  99:utils.c       ****  unsigned char c;
 100:utils.c       ****  while ((c = *s++) != '\0' && isdigit(c)) 
 673              		.loc 1 100 0
 674 0002 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 675              	.LVL69:
  98:utils.c       ****  int a=0;
 676              		.loc 1 98 0
 677 0004 2546     		mov	r5, r4
 678              		.loc 1 100 0
 679 0006 94B1     		cbz	r4, .L75
 680 0008 461C     		adds	r6, r0, #1
 681              	.LVL70:
  98:utils.c       ****  int a=0;
 682              		.loc 1 98 0
 683 000a 0025     		movs	r5, #0
 684 000c 094F     		ldr	r7, .L84
 685 000e 04E0     		b	.L76
 686              	.LVL71:
 687              	.L78:
 688              		.loc 1 100 0
 689 0010 16F8014B 		ldrb	r4, [r6], #1	@ zero_extendqisi2
 690              	.LVL72:
 101:utils.c       ****  {
 102:utils.c       ****    a = a*10 + (c - '0');
 691              		.loc 1 102 0
 692 0014 02EB4305 		add	r5, r2, r3, lsl #1
 693              	.LVL73:
 100:utils.c       ****  {
 694              		.loc 1 100 0
 695 0018 4CB1     		cbz	r4, .L75
 696              	.LVL74:
 697              	.L76:
 100:utils.c       ****  {
 698              		.loc 1 100 0 is_stmt 0 discriminator 1
 699 001a B847     		blx	r7
 700              	.LVL75:
 701 001c 2044     		add	r0, r0, r4
 702 001e 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 703              		.loc 1 102 0 is_stmt 1 discriminator 1
 704 0020 A4F13002 		sub	r2, r4, #48
 100:utils.c       ****  {
 705              		.loc 1 100 0 discriminator 1
 706 0024 13F0040F 		tst	r3, #4
 707              		.loc 1 102 0 discriminator 1
 708 0028 05EB8503 		add	r3, r5, r5, lsl #2
 100:utils.c       ****  {
 709              		.loc 1 100 0 discriminator 1
 710 002c F0D1     		bne	.L78
 711              	.LVL76:
 712              	.L75:
 103:utils.c       ****   }
 104:utils.c       ****   return a;
 105:utils.c       **** }
 713              		.loc 1 105 0
 714 002e 2846     		mov	r0, r5
 715 0030 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 716              	.LVL77:
 717              	.L85:
 718 0032 00BF     		.align	2
 719              	.L84:
 720 0034 00000000 		.word	__locale_ctype_ptr
 721              		.cfi_endproc
 722              	.LFE7:
 724              		.global	__aeabi_i2d
 725              		.global	__aeabi_dadd
 726              		.section	.text.atof,"ax",%progbits
 727              		.align	1
 728              		.p2align 2,,3
 729              		.global	atof
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu softvfp
 735              	atof:
 736              	.LFB8:
 106:utils.c       **** 
 107:utils.c       **** // convertit une chaine de caractères en double
 108:utils.c       **** double atof(char* s)
 109:utils.c       **** {
 737              		.loc 1 109 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              	.LVL78:
 742 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 743              	.LCFI20:
 744              		.cfi_def_cfa_offset 40
 745              		.cfi_offset 3, -40
 746              		.cfi_offset 4, -36
 747              		.cfi_offset 5, -32
 748              		.cfi_offset 6, -28
 749              		.cfi_offset 7, -24
 750              		.cfi_offset 8, -20
 751              		.cfi_offset 9, -16
 752              		.cfi_offset 10, -12
 753              		.cfi_offset 11, -8
 754              		.cfi_offset 14, -4
 110:utils.c       ****  double a=0.0;
 111:utils.c       ****  int e=0;
 112:utils.c       ****  unsigned char c;
 113:utils.c       ****  while ((c = *s++) != '\0' && isdigit(c)) 
 755              		.loc 1 113 0
 756 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 757              	.LVL79:
 758 0006 002C     		cmp	r4, #0
 759 0008 5FD0     		beq	.L105
 760 000a 451C     		adds	r5, r0, #1
 761              	.LVL80:
 110:utils.c       ****  double a=0.0;
 762              		.loc 1 110 0
 763 000c 0026     		movs	r6, #0
 764 000e 0027     		movs	r7, #0
 765 0010 DFF8D0A0 		ldr	r10, .L106+20
 114:utils.c       ****  {
 115:utils.c       ****    a = a*10.0 + (c - '0');
 766              		.loc 1 115 0
 767 0014 DFF8D0B0 		ldr	fp, .L106+24
 768 0018 14E0     		b	.L87
 769              	.LVL81:
 770              	.L89:
 771 001a 0022     		movs	r2, #0
 772 001c 3046     		mov	r0, r6
 773 001e 3946     		mov	r1, r7
 774 0020 2D4B     		ldr	r3, .L106+8
 775 0022 D847     		blx	fp
 776              	.LVL82:
 777 0024 8046     		mov	r8, r0
 778 0026 8946     		mov	r9, r1
 779 0028 A4F13000 		sub	r0, r4, #48
 780 002c 2B4B     		ldr	r3, .L106+12
 781 002e 9847     		blx	r3
 782              	.LVL83:
 783 0030 2B4C     		ldr	r4, .L106+16
 784              	.LVL84:
 785 0032 4246     		mov	r2, r8
 786 0034 4B46     		mov	r3, r9
 787 0036 A047     		blx	r4
 788              	.LVL85:
 113:utils.c       ****  {
 789              		.loc 1 113 0
 790 0038 15F8014B 		ldrb	r4, [r5], #1	@ zero_extendqisi2
 791              	.LVL86:
 792              		.loc 1 115 0
 793 003c 0646     		mov	r6, r0
 794              	.LVL87:
 795 003e 0F46     		mov	r7, r1
 796              	.LVL88:
 113:utils.c       ****  {
 797              		.loc 1 113 0
 798 0040 002C     		cmp	r4, #0
 799 0042 3ED0     		beq	.L86
 800              	.LVL89:
 801              	.L87:
 113:utils.c       ****  {
 802              		.loc 1 113 0 is_stmt 0 discriminator 1
 803 0044 D047     		blx	r10
 804              	.LVL90:
 805 0046 2044     		add	r0, r0, r4
 806 0048 4178     		ldrb	r1, [r0, #1]	@ zero_extendqisi2
 807 004a 11F00401 		ands	r1, r1, #4
 808 004e E4D1     		bne	.L89
 116:utils.c       ****   }
 117:utils.c       ****   if (c == '.') 
 809              		.loc 1 117 0 is_stmt 1
 810 0050 2E2C     		cmp	r4, #46
 811 0052 36D1     		bne	.L86
 118:utils.c       ****   {
 119:utils.c       ****    while ((c = *s++) != '\0' && isdigit(c)) 
 812              		.loc 1 119 0
 813 0054 95F80080 		ldrb	r8, [r5]	@ zero_extendqisi2
 814 0058 0135     		adds	r5, r5, #1
 815              	.LVL91:
 816 005a B8F1000F 		cmp	r8, #0
 817 005e 30D0     		beq	.L86
 111:utils.c       ****  unsigned char c;
 818              		.loc 1 111 0
 819 0060 0C46     		mov	r4, r1
 120:utils.c       ****    {
 121:utils.c       ****      a = a*10.0 + (c - '0');
 820              		.loc 1 121 0
 821 0062 DFF88490 		ldr	r9, .L106+24
 822 0066 17E0     		b	.L90
 823              	.LVL92:
 824              	.L92:
 825 0068 0022     		movs	r2, #0
 826 006a 3046     		mov	r0, r6
 827 006c 3946     		mov	r1, r7
 828 006e 1A4B     		ldr	r3, .L106+8
 829 0070 C847     		blx	r9
 830              	.LVL93:
 831 0072 0646     		mov	r6, r0
 832              	.LVL94:
 833 0074 0F46     		mov	r7, r1
 834 0076 A8F13000 		sub	r0, r8, #48
 835 007a 184B     		ldr	r3, .L106+12
 836 007c 9847     		blx	r3
 837              	.LVL95:
 838 007e 3246     		mov	r2, r6
 839 0080 3B46     		mov	r3, r7
 840 0082 174E     		ldr	r6, .L106+16
 841 0084 B047     		blx	r6
 842              	.LVL96:
 119:utils.c       ****    {
 843              		.loc 1 119 0
 844 0086 15F8018B 		ldrb	r8, [r5], #1	@ zero_extendqisi2
 845              	.LVL97:
 846              		.loc 1 121 0
 847 008a 0646     		mov	r6, r0
 848 008c 0F46     		mov	r7, r1
 849              	.LVL98:
 122:utils.c       ****       e = e-1;
 850              		.loc 1 122 0
 851 008e 013C     		subs	r4, r4, #1
 852              	.LVL99:
 121:utils.c       ****       e = e-1;
 853              		.loc 1 121 0
 854 0090 CB46     		mov	fp, r9
 119:utils.c       ****    {
 855              		.loc 1 119 0
 856 0092 B8F1000F 		cmp	r8, #0
 857 0096 07D0     		beq	.L91
 858              	.LVL100:
 859              	.L90:
 119:utils.c       ****    {
 860              		.loc 1 119 0 is_stmt 0 discriminator 1
 861 0098 D047     		blx	r10
 862              	.LVL101:
 863 009a 4044     		add	r0, r0, r8
 864 009c 4178     		ldrb	r1, [r0, #1]	@ zero_extendqisi2
 865 009e 4B07     		lsls	r3, r1, #29
 866 00a0 E2D4     		bmi	.L92
 123:utils.c       ****     }
 124:utils.c       ****   }
 125:utils.c       ****   while(e<0)
 867              		.loc 1 125 0 is_stmt 1
 868 00a2 74B1     		cbz	r4, .L86
 869 00a4 DFF840B0 		ldr	fp, .L106+24
 870              	.LVL102:
 871              	.L91:
 126:utils.c       ****   {
 127:utils.c       ****    a*=0.1;
 872              		.loc 1 127 0
 873 00a8 0FF22409 		adr	r9, .L106
 874 00ac D9E90089 		ldrd	r8, [r9]
 875              	.LVL103:
 876              	.L94:
 877 00b0 3046     		mov	r0, r6
 878 00b2 3946     		mov	r1, r7
 879 00b4 4246     		mov	r2, r8
 880 00b6 4B46     		mov	r3, r9
 881 00b8 D847     		blx	fp
 882              	.LVL104:
 125:utils.c       ****   {
 883              		.loc 1 125 0
 884 00ba 0134     		adds	r4, r4, #1
 885              	.LVL105:
 886              		.loc 1 127 0
 887 00bc 0646     		mov	r6, r0
 888              	.LVL106:
 889 00be 0F46     		mov	r7, r1
 890              	.LVL107:
 125:utils.c       ****   {
 891              		.loc 1 125 0
 892 00c0 F6D1     		bne	.L94
 893              	.LVL108:
 894              	.L86:
 128:utils.c       ****    e++;
 129:utils.c       ****   }
 130:utils.c       ****   return a;
 131:utils.c       **** }
 895              		.loc 1 131 0
 896 00c2 3046     		mov	r0, r6
 897 00c4 3946     		mov	r1, r7
 898 00c6 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 899              	.LVL109:
 900              	.L105:
 110:utils.c       ****  int e=0;
 901              		.loc 1 110 0
 902 00ca 0026     		movs	r6, #0
 903 00cc 0027     		movs	r7, #0
 904 00ce F8E7     		b	.L86
 905              	.L107:
 906              		.align	3
 907              	.L106:
 908 00d0 9A999999 		.word	-1717986918
 909 00d4 9999B93F 		.word	1069128089
 910 00d8 00002440 		.word	1076101120
 911 00dc 00000000 		.word	__aeabi_i2d
 912 00e0 00000000 		.word	__aeabi_dadd
 913 00e4 00000000 		.word	__locale_ctype_ptr
 914 00e8 00000000 		.word	__aeabi_dmul
 915              		.cfi_endproc
 916              	.LFE8:
 918              		.comm	debug,15,4
 919              		.text
 920              	.Letext0:
 921              		.file 2 "utils.h"
 922              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
DEFINED SYMBOLS
                            *ABS*:00000000 utils.c
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:16     .text.strlen:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:24     .text.strlen:00000000 strlen
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:77     .text.strncpy:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:85     .text.strncpy:00000000 strncpy
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:140    .text.strchrn:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:148    .text.strchrn:00000000 strchrn
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:309    .text.intToStr2:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:317    .text.intToStr2:00000000 intToStr2
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:359    .text.intToStr2:00000028 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:364    .text.intToStr:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:372    .text.intToStr:00000000 intToStr
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:488    .text.intToStr:00000068 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:495    .text.doubleToStr:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:503    .text.doubleToStr:00000000 doubleToStr
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:593    .text.doubleToStr:00000058 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:603    .text.delai:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:611    .text.delai:00000000 delai
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:649    .text.atoi:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:657    .text.atoi:00000000 atoi
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:720    .text.atoi:00000034 $d
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:727    .text.atof:00000000 $t
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:735    .text.atof:00000000 atof
C:\Users\BOBAFW~1\AppData\Local\Temp\ccGDPIhy.s:908    .text.atof:000000d0 $d
                            *COM*:0000000f debug

UNDEFINED SYMBOLS
__aeabi_dmul
__aeabi_d2iz
__locale_ctype_ptr
__aeabi_i2d
__aeabi_dadd
